Compiled method (c1)      50    1       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x00007f73e07d4010,0x00007f73e07d45c0] = 1456
 relocation     [0x00007f73e07d4188,0x00007f73e07d41c8] = 64
 main code      [0x00007f73e07d41e0,0x00007f73e07d44c0] = 736
 stub code      [0x00007f73e07d44c0,0x00007f73e07d44f0] = 48
 oops           [0x00007f73e07d44f0,0x00007f73e07d44f8] = 8
 metadata       [0x00007f73e07d44f8,0x00007f73e07d4508] = 16
 scopes data    [0x00007f73e07d4508,0x00007f73e07d4548] = 64
 scopes pcs     [0x00007f73e07d4548,0x00007f73e07d45b8] = 112
 dependencies   [0x00007f73e07d45b8,0x00007f73e07d45c0] = 8
Loaded disassembler from /usr/lib/jvm/java-11-openjdk-amd64/lib/hsdis-amd64.so
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x00007f73e07d41e0, 0x00007f73e07d44f0]  784 bytes
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi:rsi   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x00007f73e07d41e0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d41e7: push   %rbp
  0x00007f73e07d41e8: sub    $0x70,%rsp
  0x00007f73e07d41ec: movabs $0x7f73d3505990,%rcx  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d41f6: mov    0x104(%rcx),%eax
  0x00007f73e07d41fc: add    $0x8,%eax
  0x00007f73e07d41ff: mov    %eax,0x104(%rcx)
  0x00007f73e07d4205: and    $0x1ff8,%eax
  0x00007f73e07d420b: cmp    $0x0,%eax
  0x00007f73e07d420e: je     0x00007f73e07d440a  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 760)

  0x00007f73e07d4214: movabs $0x7f73d3505990,%rcx  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d421e: lea    0x178(%rcx),%rcx
  0x00007f73e07d4225: mov    %rsi,%rax
  0x00007f73e07d4228: test   %rax,%rax
  0x00007f73e07d422b: jne    0x00007f73e07d4237
  0x00007f73e07d422d: orq    $0x1,0x8(%rcx)
  0x00007f73e07d4235: jmp    0x00007f73e07d4290
  0x00007f73e07d4237: mov    0x8(%rax),%eax
  0x00007f73e07d423a: shl    $0x3,%rax
  0x00007f73e07d423e: movabs $0x800000000,%r12
  0x00007f73e07d4248: add    %r12,%rax
  0x00007f73e07d424b: xor    %r12,%r12
  0x00007f73e07d424e: xor    0x8(%rcx),%rax
  0x00007f73e07d4252: test   $0xfffffffffffffffc,%rax
  0x00007f73e07d4258: je     0x00007f73e07d4290
  0x00007f73e07d425a: test   $0x2,%rax
  0x00007f73e07d4260: jne    0x00007f73e07d4290
  0x00007f73e07d4262: cmpq   $0x0,0x8(%rcx)
  0x00007f73e07d426a: je     0x00007f73e07d428c
  0x00007f73e07d426c: cmpq   $0x1,0x8(%rcx)
  0x00007f73e07d4274: je     0x00007f73e07d428c
  0x00007f73e07d4276: xor    0x8(%rcx),%rax
  0x00007f73e07d427a: test   $0xfffffffffffffffc,%rax
  0x00007f73e07d4280: je     0x00007f73e07d4290
  0x00007f73e07d4282: orq    $0x2,0x8(%rcx)
  0x00007f73e07d428a: jmp    0x00007f73e07d4290
  0x00007f73e07d428c: mov    %rax,0x8(%rcx)
  0x00007f73e07d4290: movabs $0xe2d02100,%rcx   ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000000e2d02100})}
  0x00007f73e07d429a: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d42a4: addq   $0x1,0x140(%rax)
  0x00007f73e07d42ac: movslq %edx,%rdx
  0x00007f73e07d42af: mov    $0x2,%ecx
  0x00007f73e07d42b4: shl    %cl,%rdx
  0x00007f73e07d42b7: movabs $0x10,%r10
  0x00007f73e07d42c1: add    %r10,%rdx
  0x00007f73e07d42c4: movabs $0x7f73d3505ba0,%rax  ;   {metadata(method data for {method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07d42ce: mov    0x104(%rax),%edi
  0x00007f73e07d42d4: add    $0x8,%edi
  0x00007f73e07d42d7: mov    %edi,0x104(%rax)
  0x00007f73e07d42dd: and    $0x7ffff8,%edi
  0x00007f73e07d42e3: cmp    $0x0,%edi
  0x00007f73e07d42e6: je     0x00007f73e07d442b
  0x00007f73e07d42ec: mov    (%rsi,%rdx,1),%eax
  0x00007f73e07d42ef: movsbl 0x30(%r15),%esi
  0x00007f73e07d42f4: cmp    $0x0,%esi
  0x00007f73e07d42f7: jne    0x00007f73e07d444c
  0x00007f73e07d42fd: cmp    $0x0,%rax
  0x00007f73e07d4301: jne    0x00007f73e07d4319
  0x00007f73e07d4303: movabs $0x7f73d3505990,%rdi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d430d: orb    $0x1,0x189(%rdi)
  0x00007f73e07d4314: jmpq   0x00007f73e07d43fa
  0x00007f73e07d4319: movabs $0x80029e7d8,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d4323: mov    0x8(%rax),%edi
  0x00007f73e07d4326: shl    $0x3,%rdi
  0x00007f73e07d432a: movabs $0x800000000,%r12
  0x00007f73e07d4334: add    %r12,%rdi
  0x00007f73e07d4337: xor    %r12,%r12
  0x00007f73e07d433a: cmp    0x38(%rdi),%rbx
  0x00007f73e07d433e: jne    0x00007f73e07d43de
  0x00007f73e07d4344: movabs $0x7f73d3505990,%rdi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d434e: mov    0x8(%rax),%ebx
  0x00007f73e07d4351: shl    $0x3,%rbx
  0x00007f73e07d4355: movabs $0x800000000,%r12
  0x00007f73e07d435f: add    %r12,%rbx
  0x00007f73e07d4362: xor    %r12,%r12
  0x00007f73e07d4365: cmp    0x1a0(%rdi),%rbx
  0x00007f73e07d436c: jne    0x00007f73e07d437b
  0x00007f73e07d436e: addq   $0x1,0x1a8(%rdi)
  0x00007f73e07d4376: jmpq   0x00007f73e07d43fa
  0x00007f73e07d437b: cmp    0x1b0(%rdi),%rbx
  0x00007f73e07d4382: jne    0x00007f73e07d4391
  0x00007f73e07d4384: addq   $0x1,0x1b8(%rdi)
  0x00007f73e07d438c: jmpq   0x00007f73e07d43fa
  0x00007f73e07d4391: cmpq   $0x0,0x1a0(%rdi)
  0x00007f73e07d439c: jne    0x00007f73e07d43b5
  0x00007f73e07d439e: mov    %rbx,0x1a0(%rdi)
  0x00007f73e07d43a5: movq   $0x1,0x1a8(%rdi)
  0x00007f73e07d43b0: jmpq   0x00007f73e07d43fa
  0x00007f73e07d43b5: cmpq   $0x0,0x1b0(%rdi)
  0x00007f73e07d43c0: jne    0x00007f73e07d43d9
  0x00007f73e07d43c2: mov    %rbx,0x1b0(%rdi)
  0x00007f73e07d43c9: movq   $0x1,0x1b8(%rdi)
  0x00007f73e07d43d4: jmpq   0x00007f73e07d43fa
  0x00007f73e07d43d9: jmpq   0x00007f73e07d43fa
  0x00007f73e07d43de: movabs $0x7f73d3505990,%rdi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d43e8: subq   $0x1,0x190(%rdi)
  0x00007f73e07d43f0: jmpq   0x00007f73e07d4464
  0x00007f73e07d43f5: jmpq   0x00007f73e07d43fa  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)

  0x00007f73e07d43fa: add    $0x70,%rsp
  0x00007f73e07d43fe: pop    %rbp
  0x00007f73e07d43ff: mov    0x108(%r15),%r10
  0x00007f73e07d4406: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d4409: retq   
  0x00007f73e07d440a: movabs $0x80034f1f0,%r10  ;   {metadata({method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d4414: mov    %r10,0x8(%rsp)
  0x00007f73e07d4419: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d4421: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d4426: jmpq   0x00007f73e07d4214
  0x00007f73e07d442b: movabs $0x80037a7a0,%r10  ;   {metadata({method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07d4435: mov    %r10,0x8(%rsp)
  0x00007f73e07d443a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d4442: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d4447: jmpq   0x00007f73e07d42ec
  0x00007f73e07d444c: cmp    $0x0,%rax
  0x00007f73e07d4450: je     0x00007f73e07d42fd
  0x00007f73e07d4456: mov    %rax,(%rsp)
  0x00007f73e07d445a: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07d445f: jmpq   0x00007f73e07d42fd
  0x00007f73e07d4464: mov    %rax,(%rsp)
  0x00007f73e07d4468: callq  0x00007f73e0332820  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07d446d: nop
  0x00007f73e07d446e: nop
  0x00007f73e07d446f: mov    0x428(%r15),%rax
  0x00007f73e07d4476: movabs $0x0,%r10
  0x00007f73e07d4480: mov    %r10,0x428(%r15)
  0x00007f73e07d4487: movabs $0x0,%r10
  0x00007f73e07d4491: mov    %r10,0x430(%r15)
  0x00007f73e07d4498: add    $0x70,%rsp
  0x00007f73e07d449c: pop    %rbp
  0x00007f73e07d449d: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07d44a2: hlt    
  0x00007f73e07d44a3: hlt    
  0x00007f73e07d44a4: hlt    
  0x00007f73e07d44a5: hlt    
  0x00007f73e07d44a6: hlt    
  0x00007f73e07d44a7: hlt    
  0x00007f73e07d44a8: hlt    
  0x00007f73e07d44a9: hlt    
  0x00007f73e07d44aa: hlt    
  0x00007f73e07d44ab: hlt    
  0x00007f73e07d44ac: hlt    
  0x00007f73e07d44ad: hlt    
  0x00007f73e07d44ae: hlt    
  0x00007f73e07d44af: hlt    
  0x00007f73e07d44b0: hlt    
  0x00007f73e07d44b1: hlt    
  0x00007f73e07d44b2: hlt    
  0x00007f73e07d44b3: hlt    
  0x00007f73e07d44b4: hlt    
  0x00007f73e07d44b5: hlt    
  0x00007f73e07d44b6: hlt    
  0x00007f73e07d44b7: hlt    
  0x00007f73e07d44b8: hlt    
  0x00007f73e07d44b9: hlt    
  0x00007f73e07d44ba: hlt    
  0x00007f73e07d44bb: hlt    
  0x00007f73e07d44bc: hlt    
  0x00007f73e07d44bd: hlt    
  0x00007f73e07d44be: hlt    
  0x00007f73e07d44bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07d44c0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07d44c5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d44cf: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d44d3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d44d8: hlt    
[Deopt Handler Code]
  0x00007f73e07d44d9: movabs $0x7f73e07d44d9,%r10  ;   {section_word}
  0x00007f73e07d44e3: push   %r10
  0x00007f73e07d44e5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d44ea: hlt    
  0x00007f73e07d44eb: hlt    
  0x00007f73e07d44ec: hlt    
  0x00007f73e07d44ed: hlt    
  0x00007f73e07d44ee: hlt    
  0x00007f73e07d44ef: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 582 615 
ImmutableOopMap{}pc offsets: 653 Compiled method (c1)     790   10       3       java.util.ImmutableCollections$SetN$SetNIterator::next (47 bytes)
 total in heap  [0x00007f73e07d4610,0x00007f73e07d4e90] = 2176
 relocation     [0x00007f73e07d4788,0x00007f73e07d47f0] = 104
 main code      [0x00007f73e07d4800,0x00007f73e07d4b60] = 864
 stub code      [0x00007f73e07d4b60,0x00007f73e07d4bb0] = 80
 metadata       [0x00007f73e07d4bb0,0x00007f73e07d4bc0] = 16
 scopes data    [0x00007f73e07d4bc0,0x00007f73e07d4c80] = 192
 scopes pcs     [0x00007f73e07d4c80,0x00007f73e07d4e70] = 496
 dependencies   [0x00007f73e07d4e70,0x00007f73e07d4e78] = 8
 nul chk table  [0x00007f73e07d4e78,0x00007f73e07d4e90] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$SetNIterator.next()Ljava/lang/Object;  [0x00007f73e07d4800, 0x00007f73e07d4bb0]  944 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator'
  #           [sp+0x60]  (sp of caller)
  0x00007f73e07d4800: mov    0x8(%rsi),%r10d
  0x00007f73e07d4804: shl    $0x3,%r10
  0x00007f73e07d4808: movabs $0x800000000,%r12
  0x00007f73e07d4812: add    %r12,%r10
  0x00007f73e07d4815: xor    %r12,%r12
  0x00007f73e07d4818: cmp    %rax,%r10
  0x00007f73e07d481b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07d4821: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d482c: data16 data16 xchg %ax,%ax
  0x00007f73e07d4830: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d483b: data16 data16 xchg %ax,%ax
  0x00007f73e07d483f: nop
[Verified Entry Point]
  0x00007f73e07d4840: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d4847: push   %rbp
  0x00007f73e07d4848: sub    $0x50,%rsp
  0x00007f73e07d484c: mov    %rsi,0x38(%rsp)
  0x00007f73e07d4851: movabs $0x7f73d350d498,%rdi  ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d485b: mov    0x104(%rdi),%ebx
  0x00007f73e07d4861: add    $0x8,%ebx
  0x00007f73e07d4864: mov    %ebx,0x104(%rdi)
  0x00007f73e07d486a: and    $0x1ff8,%ebx
  0x00007f73e07d4870: cmp    $0x0,%ebx
  0x00007f73e07d4873: je     0x00007f73e07d4a7e  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@0 (line 656)

  0x00007f73e07d4879: mov    %rsi,%rdi
  0x00007f73e07d487c: movabs $0x7f73d350d498,%rbx  ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4886: addq   $0x1,0x140(%rbx)
  0x00007f73e07d488e: movabs $0x7f73d350c318,%rdi  ;   {metadata(method data for {method} {0x00000008002a4400} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4898: mov    0x104(%rdi),%ebx
  0x00007f73e07d489e: add    $0x8,%ebx
  0x00007f73e07d48a1: mov    %ebx,0x104(%rdi)
  0x00007f73e07d48a7: and    $0x7ffff8,%ebx
  0x00007f73e07d48ad: cmp    $0x0,%ebx
  0x00007f73e07d48b0: je     0x00007f73e07d4a9f
  0x00007f73e07d48b6: mov    0xc(%rsi),%edi     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@1 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007f73e07d48b9: cmp    $0x0,%edi
  0x00007f73e07d48bc: movabs $0x7f73d350c318,%rdi  ;   {metadata(method data for {method} {0x00000008002a4400} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d48c6: movabs $0x140,%rbx
  0x00007f73e07d48d0: jle    0x00007f73e07d48e0
  0x00007f73e07d48d6: movabs $0x150,%rbx
  0x00007f73e07d48e0: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07d48e4: lea    0x1(%rax),%rax
  0x00007f73e07d48e8: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07d48ec: jle    0x00007f73e07d490c  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@4 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007f73e07d48f2: movabs $0x7f73d350c318,%rdi  ;   {metadata(method data for {method} {0x00000008002a4400} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d48fc: incl   0x160(%rdi)
  0x00007f73e07d4902: mov    $0x1,%edi
  0x00007f73e07d4907: jmpq   0x00007f73e07d4911  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@8 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007f73e07d490c: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@12 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)

  0x00007f73e07d4911: and    $0x1,%edi
  0x00007f73e07d4914: cmp    $0x0,%edi
  0x00007f73e07d4917: movabs $0x7f73d350d498,%rdi  ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4921: movabs $0x178,%rbx
  0x00007f73e07d492b: je     0x00007f73e07d493b
  0x00007f73e07d4931: movabs $0x188,%rbx
  0x00007f73e07d493b: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07d493f: lea    0x1(%rax),%rax
  0x00007f73e07d4943: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07d4947: je     0x00007f73e07d4a3a
  0x00007f73e07d494d: jmpq   0x00007f73e07d499f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@4 (line 656)

  0x00007f73e07d4952: nopw   0x0(%rax,%rax,1)
  0x00007f73e07d4958: movabs $0x7f73d350d498,%rax  ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4962: mov    0x108(%rax),%edx
  0x00007f73e07d4968: add    $0x8,%edx
  0x00007f73e07d496b: mov    %edx,0x108(%rax)
  0x00007f73e07d4971: and    $0xfff8,%edx
  0x00007f73e07d4977: cmp    $0x0,%edx
  0x00007f73e07d497a: je     0x00007f73e07d4ac0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x00007f73e07d4980: mov    0x108(%r15),%r10   ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x00007f73e07d4987: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07d498a: movabs $0x7f73d350d498,%rax  ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4994: incl   0x1f0(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)

  0x00007f73e07d499a: mov    0x38(%rsp),%rsi
  0x00007f73e07d499f: mov    0x14(%rsi),%edi    ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@8 (line 659)

  0x00007f73e07d49a2: mov    0x10(%rdi),%edi    ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 659)
                                                ; implicit exception: dispatches to 0x00007f73e07d4ae1
  0x00007f73e07d49a5: mov    %rsi,%rbx
  0x00007f73e07d49a8: movabs $0x7f73d350d498,%rax  ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d49b2: addq   $0x1,0x198(%rax)
  0x00007f73e07d49ba: mov    %rsi,%rbx
  0x00007f73e07d49bd: mov    %rbx,%rsi          ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 659)

  0x00007f73e07d49c0: mov    %rdi,0x30(%rsp)
  0x00007f73e07d49c5: xchg   %ax,%ax
  0x00007f73e07d49c7: callq  0x00007f73e0269100  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual nextIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@15 (line 659)
                                                ;   {optimized virtual_call}
  0x00007f73e07d49cc: mov    0x30(%rsp),%rdi
  0x00007f73e07d49d1: mov    0xc(%rdi),%edx     ; implicit exception: dispatches to 0x00007f73e07d4ae6
  0x00007f73e07d49d4: cmp    %eax,%edx
  0x00007f73e07d49d6: jbe    0x00007f73e07d4aeb
  0x00007f73e07d49dc: movslq %eax,%rax
  0x00007f73e07d49df: mov    0x10(%rdi,%rax,4),%eax  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)

  0x00007f73e07d49e3: cmp    $0x0,%rax
  0x00007f73e07d49e7: movabs $0x7f73d350d498,%rdx  ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d49f1: movabs $0x1e0,%rsi
  0x00007f73e07d49fb: je     0x00007f73e07d4a0b
  0x00007f73e07d4a01: movabs $0x1d0,%rsi
  0x00007f73e07d4a0b: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07d4a0f: lea    0x1(%rdi),%rdi
  0x00007f73e07d4a13: mov    %rdi,(%rdx,%rsi,1)
  0x00007f73e07d4a17: je     0x00007f73e07d4958  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@21 (line 659)

  0x00007f73e07d4a1d: mov    0x38(%rsp),%rsi
  0x00007f73e07d4a22: mov    0xc(%rsi),%edx     ;*getfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@29 (line 660)

  0x00007f73e07d4a25: dec    %edx
  0x00007f73e07d4a27: mov    %edx,0xc(%rsi)     ;*putfield remaining {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@34 (line 660)

  0x00007f73e07d4a2a: add    $0x50,%rsp
  0x00007f73e07d4a2e: pop    %rbp
  0x00007f73e07d4a2f: mov    0x108(%r15),%r10
  0x00007f73e07d4a36: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d4a39: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@38 (line 661)

  0x00007f73e07d4a3a: nopw   0x0(%rax,%rax,1)
  0x00007f73e07d4a40: jmpq   0x00007f73e07d4b08  ;   {no_reloc}
  0x00007f73e07d4a45: add    %al,(%rax)
  0x00007f73e07d4a47: add    %al,(%rax)
  0x00007f73e07d4a49: add    %ch,%cl
  0x00007f73e07d4a4b: retq   
  0x00007f73e07d4a4c: add    %al,(%rax)
  0x00007f73e07d4a4e: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)

  0x00007f73e07d4a51: lock movabs $0x7f73d350d498,%rdi
                                                ;   {metadata(method data for {method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4a5c: addq   $0x1,0x208(%rdi)
  0x00007f73e07d4a64: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 663)

  0x00007f73e07d4a67: mov    %rax,0x40(%rsp)
  0x00007f73e07d4a6c: data16 xchg %ax,%ax
  0x00007f73e07d4a6f: callq  0x00007f73e0269100  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@43 (line 663)
                                                ;   {optimized virtual_call}
  0x00007f73e07d4a74: mov    0x40(%rsp),%rax
  0x00007f73e07d4a79: jmpq   0x00007f73e07d4b4a
  0x00007f73e07d4a7e: movabs $0x8002a43a8,%r10  ;   {metadata({method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4a88: mov    %r10,0x8(%rsp)
  0x00007f73e07d4a8d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d4a95: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@-1 (line 656)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d4a9a: jmpq   0x00007f73e07d4879
  0x00007f73e07d4a9f: movabs $0x8002a4400,%r10  ;   {metadata({method} {0x00000008002a4400} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4aa9: mov    %r10,0x8(%rsp)
  0x00007f73e07d4aae: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d4ab6: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::hasNext@-1 (line 637)
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@1 (line 656)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d4abb: jmpq   0x00007f73e07d48b6
  0x00007f73e07d4ac0: movabs $0x8002a43a8,%r10  ;   {metadata({method} {0x00000008002a43a8} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$SetNIterator')}
  0x00007f73e07d4aca: mov    %r10,0x8(%rsp)
  0x00007f73e07d4acf: movq   $0x18,(%rsp)
  0x00007f73e07d4ad7: callq  0x00007f73e0334d80  ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@24 (line 659)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d4adc: jmpq   0x00007f73e07d4980
  0x00007f73e07d4ae1: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [56]=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@11 (line 659)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d4ae6: callq  0x00007f73e03308a0  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d4aeb: mov    %rax,(%rsp)
  0x00007f73e07d4aef: mov    %rdi,0x8(%rsp)
  0x00007f73e07d4af4: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{[56]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@18 (line 659)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d4af9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f73e07d4b03: mov    $0xa050f00,%eax
  0x00007f73e07d4b08: callq  0x00007f73e0333e00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07d4b0d: jmpq   0x00007f73e07d4a40
  0x00007f73e07d4b12: mov    %rdx,%rdx
  0x00007f73e07d4b15: callq  0x00007f73e0330d80  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$SetNIterator::next@39 (line 663)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00007f73e07d4b1a: jmpq   0x00007f73e07d4a4f
  0x00007f73e07d4b1f: nop
  0x00007f73e07d4b20: nop
  0x00007f73e07d4b21: mov    0x428(%r15),%rax
  0x00007f73e07d4b28: movabs $0x0,%r10
  0x00007f73e07d4b32: mov    %r10,0x428(%r15)
  0x00007f73e07d4b39: movabs $0x0,%r10
  0x00007f73e07d4b43: mov    %r10,0x430(%r15)
  0x00007f73e07d4b4a: add    $0x50,%rsp
  0x00007f73e07d4b4e: pop    %rbp
  0x00007f73e07d4b4f: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07d4b54: hlt    
  0x00007f73e07d4b55: hlt    
  0x00007f73e07d4b56: hlt    
  0x00007f73e07d4b57: hlt    
  0x00007f73e07d4b58: hlt    
  0x00007f73e07d4b59: hlt    
  0x00007f73e07d4b5a: hlt    
  0x00007f73e07d4b5b: hlt    
  0x00007f73e07d4b5c: hlt    
  0x00007f73e07d4b5d: hlt    
  0x00007f73e07d4b5e: hlt    
  0x00007f73e07d4b5f: hlt    
[Stub Code]
  0x00007f73e07d4b60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07d4b65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d4b6f: jmpq   0x00007f73e07d4b6f  ;   {runtime_call}
  0x00007f73e07d4b74: nop
  0x00007f73e07d4b75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d4b7f: jmpq   0x00007f73e07d4b7f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07d4b84: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07d4b89: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d4b93: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d4b97: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d4b9c: hlt    
[Deopt Handler Code]
  0x00007f73e07d4b9d: movabs $0x7f73e07d4b9d,%r10  ;   {section_word}
  0x00007f73e07d4ba7: push   %r10
  0x00007f73e07d4ba9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d4bae: hlt    
  0x00007f73e07d4baf: hlt    

ImmutableOopMap{[56]=Oop }pc offsets: 391 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 460 
ImmutableOopMap{[64]=Oop }pc offsets: 628 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 666 699 
ImmutableOopMap{[56]=Oop }pc offsets: 732 
ImmutableOopMap{rsi=Oop [56]=Oop }pc offsets: 742 
ImmutableOopMap{[56]=Oop rdi=Oop }pc offsets: 747 761 
ImmutableOopMap{}pc offsets: 781 794 Compiled method (c1)    2236    4       3       java.lang.Object::<init> (1 bytes)
 total in heap  [0x00007f73e07d4f10,0x00007f73e07d5240] = 816
 relocation     [0x00007f73e07d5088,0x00007f73e07d50b0] = 40
 main code      [0x00007f73e07d50c0,0x00007f73e07d51a0] = 224
 stub code      [0x00007f73e07d51a0,0x00007f73e07d51d0] = 48
 metadata       [0x00007f73e07d51d0,0x00007f73e07d51e0] = 16
 scopes data    [0x00007f73e07d51e0,0x00007f73e07d51f8] = 24
 scopes pcs     [0x00007f73e07d51f8,0x00007f73e07d5238] = 64
 dependencies   [0x00007f73e07d5238,0x00007f73e07d5240] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x00007f73e07d50c0, 0x00007f73e07d51d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07d50c0: mov    0x8(%rsi),%r10d
  0x00007f73e07d50c4: shl    $0x3,%r10
  0x00007f73e07d50c8: movabs $0x800000000,%r12
  0x00007f73e07d50d2: add    %r12,%r10
  0x00007f73e07d50d5: xor    %r12,%r12
  0x00007f73e07d50d8: cmp    %rax,%r10
  0x00007f73e07d50db: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07d50e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d50ec: data16 data16 xchg %ax,%ax
  0x00007f73e07d50f0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d50fb: data16 data16 xchg %ax,%ax
  0x00007f73e07d50ff: nop
[Verified Entry Point]
  0x00007f73e07d5100: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d5107: push   %rbp
  0x00007f73e07d5108: sub    $0x30,%rsp
  0x00007f73e07d510c: movabs $0x7f73d350be50,%rdi  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07d5116: mov    0x104(%rdi),%ebx
  0x00007f73e07d511c: add    $0x8,%ebx
  0x00007f73e07d511f: mov    %ebx,0x104(%rdi)
  0x00007f73e07d5125: and    $0x1ff8,%ebx
  0x00007f73e07d512b: cmp    $0x0,%ebx
  0x00007f73e07d512e: je     0x00007f73e07d5144  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)

  0x00007f73e07d5134: add    $0x30,%rsp
  0x00007f73e07d5138: pop    %rbp
  0x00007f73e07d5139: mov    0x108(%r15),%r10
  0x00007f73e07d5140: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d5143: retq   
  0x00007f73e07d5144: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07d514e: mov    %r10,0x8(%rsp)
  0x00007f73e07d5153: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d515b: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d5160: jmp    0x00007f73e07d5134
  0x00007f73e07d5162: nop
  0x00007f73e07d5163: nop
  0x00007f73e07d5164: mov    0x428(%r15),%rax
  0x00007f73e07d516b: movabs $0x0,%r10
  0x00007f73e07d5175: mov    %r10,0x428(%r15)
  0x00007f73e07d517c: movabs $0x0,%r10
  0x00007f73e07d5186: mov    %r10,0x430(%r15)
  0x00007f73e07d518d: add    $0x30,%rsp
  0x00007f73e07d5191: pop    %rbp
  0x00007f73e07d5192: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07d5197: hlt    
  0x00007f73e07d5198: hlt    
  0x00007f73e07d5199: hlt    
  0x00007f73e07d519a: hlt    
  0x00007f73e07d519b: hlt    
  0x00007f73e07d519c: hlt    
  0x00007f73e07d519d: hlt    
  0x00007f73e07d519e: hlt    
  0x00007f73e07d519f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07d51a0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07d51a5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d51af: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d51b3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d51b8: hlt    
[Deopt Handler Code]
  0x00007f73e07d51b9: movabs $0x7f73e07d51b9,%r10  ;   {section_word}
  0x00007f73e07d51c3: push   %r10
  0x00007f73e07d51c5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d51ca: hlt    
  0x00007f73e07d51cb: hlt    
  0x00007f73e07d51cc: hlt    
  0x00007f73e07d51cd: hlt    
  0x00007f73e07d51ce: hlt    
  0x00007f73e07d51cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 160 ----------------------------------------------------------------------
java/lang/Object.hashCode()I  [0x00007f73e7d0c1c0, 0x00007f73e7d0c3d0]  528 bytes
[Entry Point]
  # {method} {0x00000008000029a8} 'hashCode' '()I' in 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d0c1c0: mov    0x8(%rsi),%r10d
  0x00007f73e7d0c1c4: shl    $0x3,%r10
  0x00007f73e7d0c1c8: movabs $0x800000000,%r12
  0x00007f73e7d0c1d2: add    %r12,%r10
  0x00007f73e7d0c1d5: xor    %r12,%r12
  0x00007f73e7d0c1d8: cmp    %r10,%rax
  0x00007f73e7d0c1db: je     0x00007f73e7d0c1e8
  0x00007f73e7d0c1e1: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0c1e6: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0c1e8: mov    (%rsi),%rax
  0x00007f73e7d0c1eb: test   $0x1,%rax
  0x00007f73e7d0c1f1: je     0x00007f73e7d0c215
  0x00007f73e7d0c1f7: test   $0x4,%rax
  0x00007f73e7d0c1fd: jne    0x00007f73e7d0c215
  0x00007f73e7d0c203: shr    $0x8,%rax
  0x00007f73e7d0c207: and    $0x7fffffff,%rax
  0x00007f73e7d0c20e: je     0x00007f73e7d0c215
  0x00007f73e7d0c214: retq   
  0x00007f73e7d0c215: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0c21c: push   %rbp
  0x00007f73e7d0c21d: mov    %rsp,%rbp
  0x00007f73e7d0c220: sub    $0x40,%rsp
  0x00007f73e7d0c224: mov    %rsi,(%rsp)
  0x00007f73e7d0c228: cmp    $0x0,%rsi
  0x00007f73e7d0c22c: lea    (%rsp),%rsi
  0x00007f73e7d0c230: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007f73e7d0c235: vzeroupper 
  0x00007f73e7d0c238: movabs $0x7f73e7d0c235,%r10  ;   {internal_word}
  0x00007f73e7d0c242: mov    %r10,0x330(%r15)
  0x00007f73e7d0c249: mov    %rsp,0x328(%r15)
  0x00007f73e7d0c250: cmpb   $0x0,0x16e51fe0(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0c257: je     0x00007f73e7d0c28f
  0x00007f73e7d0c25d: push   %rsi
  0x00007f73e7d0c25e: movabs $0x8000029a8,%rsi  ;   {metadata({method} {0x00000008000029a8} 'hashCode' '()I' in 'java/lang/Object')}
  0x00007f73e7d0c268: mov    %r15,%rdi
  0x00007f73e7d0c26b: test   $0xf,%esp
  0x00007f73e7d0c271: je     0x00007f73e7d0c289
  0x00007f73e7d0c277: sub    $0x8,%rsp
  0x00007f73e7d0c27b: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0c280: add    $0x8,%rsp
  0x00007f73e7d0c284: jmpq   0x00007f73e7d0c28e
  0x00007f73e7d0c289: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0c28e: pop    %rsi
  0x00007f73e7d0c28f: lea    0x348(%r15),%rdi
  0x00007f73e7d0c296: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d0c2a1: callq  0x00007f73fe033d20  ;   {runtime_call JVM_IHashCode}
  0x00007f73e7d0c2a6: vzeroupper 
  0x00007f73e7d0c2a9: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d0c2b4: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d0c2ba: testb  $0x8,0x108(%r15)
  0x00007f73e7d0c2c2: jne    0x00007f73e7d0c2d9
  0x00007f73e7d0c2c8: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d0c2d3: je     0x00007f73e7d0c2fd
  0x00007f73e7d0c2d9: vzeroupper 
  0x00007f73e7d0c2dc: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0c2e0: mov    %r15,%rdi
  0x00007f73e7d0c2e3: mov    %rsp,%r12
  0x00007f73e7d0c2e6: sub    $0x0,%rsp
  0x00007f73e7d0c2ea: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0c2ee: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d0c2f3: mov    %r12,%rsp
  0x00007f73e7d0c2f6: xor    %r12,%r12
  0x00007f73e7d0c2f9: mov    -0x8(%rbp),%rax
  0x00007f73e7d0c2fd: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d0c308: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d0c313: je     0x00007f73e7d0c3a9
  0x00007f73e7d0c319: cmpb   $0x0,0x16e51f17(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0c320: je     0x00007f73e7d0c35e
  0x00007f73e7d0c326: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0c32a: movabs $0x8000029a8,%rsi  ;   {metadata({method} {0x00000008000029a8} 'hashCode' '()I' in 'java/lang/Object')}
  0x00007f73e7d0c334: mov    %r15,%rdi
  0x00007f73e7d0c337: test   $0xf,%esp
  0x00007f73e7d0c33d: je     0x00007f73e7d0c355
  0x00007f73e7d0c343: sub    $0x8,%rsp
  0x00007f73e7d0c347: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0c34c: add    $0x8,%rsp
  0x00007f73e7d0c350: jmpq   0x00007f73e7d0c35a
  0x00007f73e7d0c355: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0c35a: mov    -0x8(%rbp),%rax
  0x00007f73e7d0c35e: movabs $0x0,%r10
  0x00007f73e7d0c368: mov    %r10,0x328(%r15)
  0x00007f73e7d0c36f: movabs $0x0,%r10
  0x00007f73e7d0c379: mov    %r10,0x330(%r15)
  0x00007f73e7d0c380: vzeroupper 
  0x00007f73e7d0c383: mov    0xe0(%r15),%rcx
  0x00007f73e7d0c38a: movl   $0x0,0x100(%rcx)
  0x00007f73e7d0c394: leaveq 
  0x00007f73e7d0c395: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d0c39d: jne    0x00007f73e7d0c3a4
  0x00007f73e7d0c3a3: retq   
  0x00007f73e7d0c3a4: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d0c3a9: vzeroupper 
  0x00007f73e7d0c3ac: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0c3b0: mov    %rsp,%r12
  0x00007f73e7d0c3b3: sub    $0x0,%rsp
  0x00007f73e7d0c3b7: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0c3bb: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d0c3c0: mov    %r12,%rsp
  0x00007f73e7d0c3c3: xor    %r12,%r12
  0x00007f73e7d0c3c6: mov    -0x8(%rbp),%rax
  0x00007f73e7d0c3ca: jmpq   0x00007f73e7d0c319
  0x00007f73e7d0c3cf: hlt    
Compiled method (c1)    3326   33       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x00007f73e07d5290,0x00007f73e07d7218] = 8072
 relocation     [0x00007f73e07d5408,0x00007f73e07d5548] = 320
 main code      [0x00007f73e07d5560,0x00007f73e07d6720] = 4544
 stub code      [0x00007f73e07d6720,0x00007f73e07d67f0] = 208
 metadata       [0x00007f73e07d67f0,0x00007f73e07d67f8] = 8
 scopes data    [0x00007f73e07d67f8,0x00007f73e07d6b98] = 928
 scopes pcs     [0x00007f73e07d6b98,0x00007f73e07d71a8] = 1552
 dependencies   [0x00007f73e07d71a8,0x00007f73e07d71b0] = 8
 nul chk table  [0x00007f73e07d71b0,0x00007f73e07d7218] = 104
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x00007f73e07d5560, 0x00007f73e07d67f0]  4752 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00007f73e07d5560: mov    0x8(%rsi),%r10d
  0x00007f73e07d5564: shl    $0x3,%r10
  0x00007f73e07d5568: movabs $0x800000000,%r12
  0x00007f73e07d5572: add    %r12,%r10
  0x00007f73e07d5575: xor    %r12,%r12
  0x00007f73e07d5578: cmp    %rax,%r10
  0x00007f73e07d557b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07d5581: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d558c: data16 data16 xchg %ax,%ax
  0x00007f73e07d5590: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d559b: data16 data16 xchg %ax,%ax
  0x00007f73e07d559f: nop
[Verified Entry Point]
  0x00007f73e07d55a0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d55a7: push   %rbp
  0x00007f73e07d55a8: sub    $0xa0,%rsp
  0x00007f73e07d55af: mov    %rsi,0x48(%rsp)
  0x00007f73e07d55b4: mov    %edx,0x40(%rsp)
  0x00007f73e07d55b8: mov    %rcx,0x50(%rsp)
  0x00007f73e07d55bd: movabs $0x7f73d3510598,%rbx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d55c7: mov    0x104(%rbx),%eax
  0x00007f73e07d55cd: add    $0x8,%eax
  0x00007f73e07d55d0: mov    %eax,0x104(%rbx)
  0x00007f73e07d55d6: and    $0x1ff8,%eax
  0x00007f73e07d55dc: cmp    $0x0,%eax
  0x00007f73e07d55df: je     0x00007f73e07d6599  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0 (line 623)

  0x00007f73e07d55e5: mov    0x24(%rsi),%ebx    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1 (line 623)

  0x00007f73e07d55e8: cmp    $0x0,%rbx
  0x00007f73e07d55ec: movabs $0x7f73d3510598,%rax  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d55f6: movabs $0x140,%r11
  0x00007f73e07d5600: je     0x00007f73e07d5610
  0x00007f73e07d5606: movabs $0x150,%r11
  0x00007f73e07d5610: mov    (%rax,%r11,1),%r13
  0x00007f73e07d5614: lea    0x1(%r13),%r13
  0x00007f73e07d5618: mov    %r13,(%rax,%r11,1)
  0x00007f73e07d561c: je     0x00007f73e07d5671  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7 (line 623)

  0x00007f73e07d5622: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ; implicit exception: dispatches to 0x00007f73e07d65ba
  0x00007f73e07d5625: cmp    $0x0,%eax
  0x00007f73e07d5628: movabs $0x7f73d3510598,%r11  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5632: movabs $0x170,%r13
  0x00007f73e07d563c: je     0x00007f73e07d564c
  0x00007f73e07d5642: movabs $0x160,%r13
  0x00007f73e07d564c: mov    (%r11,%r13,1),%r14
  0x00007f73e07d5650: lea    0x1(%r14),%r14
  0x00007f73e07d5654: mov    %r14,(%r11,%r13,1)
  0x00007f73e07d5658: je     0x00007f73e07d5671  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16 (line 623)

  0x00007f73e07d565e: mov    %edi,0x60(%rsp)
  0x00007f73e07d5662: mov    %r9d,0x44(%rsp)
  0x00007f73e07d5667: mov    %r8,0x58(%rsp)
  0x00007f73e07d566c: jmpq   0x00007f73e07d56b0  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x00007f73e07d5671: mov    %edi,0x60(%rsp)
  0x00007f73e07d5675: mov    %r9d,0x44(%rsp)
  0x00007f73e07d567a: mov    %r8,0x58(%rsp)
  0x00007f73e07d567f: mov    %rsi,%rbx
  0x00007f73e07d5682: movabs $0x7f73d3510598,%rax  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d568c: addq   $0x1,0x180(%rax)
  0x00007f73e07d5694: mov    %rsi,%rbx
  0x00007f73e07d5697: mov    %rbx,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x00007f73e07d569a: nopl   0x0(%rax,%rax,1)
  0x00007f73e07d569f: callq  0x00007f73e07d6725  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)
                                                ;   {optimized virtual_call}
  0x00007f73e07d56a4: mov    %rax,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20 (line 624)

  0x00007f73e07d56a7: mov    0xc(%rdx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ; implicit exception: dispatches to 0x00007f73e07d65bf
  0x00007f73e07d56aa: mov    %rcx,%rax
  0x00007f73e07d56ad: mov    %rdx,%rbx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29 (line 625)

  0x00007f73e07d56b0: dec    %eax
  0x00007f73e07d56b2: and    0x40(%rsp),%eax
  0x00007f73e07d56b6: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00007f73e07d65c4
  0x00007f73e07d56b9: jae    0x00007f73e07d65ce
  0x00007f73e07d56bf: movslq %eax,%rdx
  0x00007f73e07d56c2: mov    0x10(%rbx,%rdx,4),%edi  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)

  0x00007f73e07d56c6: cmp    $0x0,%rdi
  0x00007f73e07d56ca: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d56d4: movabs $0x1b8,%rcx
  0x00007f73e07d56de: jne    0x00007f73e07d56ee
  0x00007f73e07d56e4: movabs $0x1c8,%rcx
  0x00007f73e07d56ee: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07d56f2: lea    0x1(%r8),%r8
  0x00007f73e07d56f6: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07d56fa: jne    0x00007f73e07d5963  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44 (line 625)

  0x00007f73e07d5700: mov    %eax,0x64(%rsp)
  0x00007f73e07d5704: mov    %rbx,0x68(%rsp)
  0x00007f73e07d5709: mov    0x48(%rsp),%rsi
  0x00007f73e07d570e: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5718: mov    0x8(%rsi),%esi
  0x00007f73e07d571b: shl    $0x3,%rsi
  0x00007f73e07d571f: movabs $0x800000000,%r12
  0x00007f73e07d5729: add    %r12,%rsi
  0x00007f73e07d572c: xor    %r12,%r12
  0x00007f73e07d572f: cmp    0x1e8(%rdx),%rsi
  0x00007f73e07d5736: jne    0x00007f73e07d5745
  0x00007f73e07d5738: addq   $0x1,0x1f0(%rdx)
  0x00007f73e07d5740: jmpq   0x00007f73e07d57ab
  0x00007f73e07d5745: cmp    0x1f8(%rdx),%rsi
  0x00007f73e07d574c: jne    0x00007f73e07d575b
  0x00007f73e07d574e: addq   $0x1,0x200(%rdx)
  0x00007f73e07d5756: jmpq   0x00007f73e07d57ab
  0x00007f73e07d575b: cmpq   $0x0,0x1e8(%rdx)
  0x00007f73e07d5766: jne    0x00007f73e07d577f
  0x00007f73e07d5768: mov    %rsi,0x1e8(%rdx)
  0x00007f73e07d576f: movq   $0x1,0x1f0(%rdx)
  0x00007f73e07d577a: jmpq   0x00007f73e07d57ab
  0x00007f73e07d577f: cmpq   $0x0,0x1f8(%rdx)
  0x00007f73e07d578a: jne    0x00007f73e07d57a3
  0x00007f73e07d578c: mov    %rsi,0x1f8(%rdx)
  0x00007f73e07d5793: movq   $0x1,0x200(%rdx)
  0x00007f73e07d579e: jmpq   0x00007f73e07d57ab
  0x00007f73e07d57a3: addq   $0x1,0x1d8(%rdx)
  0x00007f73e07d57ab: mov    0x40(%rsp),%edx
  0x00007f73e07d57af: mov    0x50(%rsp),%rcx
  0x00007f73e07d57b4: mov    0x58(%rsp),%r8
  0x00007f73e07d57b9: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00007f73e07d57c3: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)

  0x00007f73e07d57c8: nopl   0x0(%rax,%rax,1)
  0x00007f73e07d57cd: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d57d7: callq  0x00007f73e027f8a0  ; ImmutableOopMap{[72]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56 (line 626)
                                                ;   {virtual_call}
  0x00007f73e07d57dc: mov    0x68(%rsp),%rbx
  0x00007f73e07d57e1: mov    0x64(%rsp),%edx
  0x00007f73e07d57e5: cmp    0xc(%rbx),%edx
  0x00007f73e07d57e8: jae    0x00007f73e07d65dc
  0x00007f73e07d57ee: cmp    $0x0,%rax
  0x00007f73e07d57f2: jne    0x00007f73e07d580a
  0x00007f73e07d57f4: movabs $0x7f73d3510598,%rdi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d57fe: orb    $0x1,0x209(%rdi)
  0x00007f73e07d5805: jmpq   0x00007f73e07d591e
  0x00007f73e07d580a: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x00007f73e07d65ea
  0x00007f73e07d580d: shl    $0x3,%rsi
  0x00007f73e07d5811: movabs $0x800000000,%r12
  0x00007f73e07d581b: add    %r12,%rsi
  0x00007f73e07d581e: xor    %r12,%r12
  0x00007f73e07d5821: mov    0x8(%rax),%edi
  0x00007f73e07d5824: shl    $0x3,%rdi
  0x00007f73e07d5828: movabs $0x800000000,%r12
  0x00007f73e07d5832: add    %r12,%rdi
  0x00007f73e07d5835: xor    %r12,%r12
  0x00007f73e07d5838: mov    0xe8(%rsi),%rsi
  0x00007f73e07d583f: cmp    %rsi,%rdi
  0x00007f73e07d5842: je     0x00007f73e07d5870
  0x00007f73e07d5848: mov    0x10(%rsi),%ecx
  0x00007f73e07d584b: cmp    (%rdi,%rcx,1),%rsi
  0x00007f73e07d584f: je     0x00007f73e07d5870
  0x00007f73e07d5855: cmp    $0x20,%ecx
  0x00007f73e07d5858: jne    0x00007f73e07d5907
  0x00007f73e07d585e: push   %rdi
  0x00007f73e07d585f: push   %rsi
  0x00007f73e07d5860: callq  0x00007f73e0332c00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007f73e07d5865: pop    %rdi
  0x00007f73e07d5866: pop    %rsi
  0x00007f73e07d5867: cmp    $0x0,%esi
  0x00007f73e07d586a: je     0x00007f73e07d5907
  0x00007f73e07d5870: movabs $0x7f73d3510598,%rdi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d587a: mov    0x8(%rax),%esi
  0x00007f73e07d587d: shl    $0x3,%rsi
  0x00007f73e07d5881: movabs $0x800000000,%r12
  0x00007f73e07d588b: add    %r12,%rsi
  0x00007f73e07d588e: xor    %r12,%r12
  0x00007f73e07d5891: cmp    0x220(%rdi),%rsi
  0x00007f73e07d5898: jne    0x00007f73e07d58a7
  0x00007f73e07d589a: addq   $0x1,0x228(%rdi)
  0x00007f73e07d58a2: jmpq   0x00007f73e07d591e
  0x00007f73e07d58a7: cmp    0x230(%rdi),%rsi
  0x00007f73e07d58ae: jne    0x00007f73e07d58bd
  0x00007f73e07d58b0: addq   $0x1,0x238(%rdi)
  0x00007f73e07d58b8: jmpq   0x00007f73e07d591e
  0x00007f73e07d58bd: cmpq   $0x0,0x220(%rdi)
  0x00007f73e07d58c8: jne    0x00007f73e07d58e1
  0x00007f73e07d58ca: mov    %rsi,0x220(%rdi)
  0x00007f73e07d58d1: movq   $0x1,0x228(%rdi)
  0x00007f73e07d58dc: jmpq   0x00007f73e07d591e
  0x00007f73e07d58e1: cmpq   $0x0,0x230(%rdi)
  0x00007f73e07d58ec: jne    0x00007f73e07d5905
  0x00007f73e07d58ee: mov    %rsi,0x230(%rdi)
  0x00007f73e07d58f5: movq   $0x1,0x238(%rdi)
  0x00007f73e07d5900: jmpq   0x00007f73e07d591e
  0x00007f73e07d5905: jmp    0x00007f73e07d591e
  0x00007f73e07d5907: movabs $0x7f73d3510598,%rdi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5911: subq   $0x1,0x210(%rdi)
  0x00007f73e07d5919: jmpq   0x00007f73e07d65ef
  0x00007f73e07d591e: movslq %edx,%rdx
  0x00007f73e07d5921: lea    0x10(%rbx,%rdx,4),%rdx
  0x00007f73e07d5926: movsbl 0x30(%r15),%esi
  0x00007f73e07d592b: cmp    $0x0,%esi
  0x00007f73e07d592e: jne    0x00007f73e07d65f8
  0x00007f73e07d5934: mov    %rax,%r10
  0x00007f73e07d5937: mov    %r10d,(%rdx)
  0x00007f73e07d593a: mov    %rdx,%rsi
  0x00007f73e07d593d: xor    %rax,%rsi
  0x00007f73e07d5940: shr    $0x14,%rsi
  0x00007f73e07d5944: cmp    $0x0,%rsi
  0x00007f73e07d5948: jne    0x00007f73e07d6612  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)

  0x00007f73e07d594e: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5958: incl   0x248(%rdx)
  0x00007f73e07d595e: jmpq   0x00007f73e07d62b6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60 (line 626)

  0x00007f73e07d5963: mov    0xc(%rdi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ; implicit exception: dispatches to 0x00007f73e07d662a
  0x00007f73e07d5966: cmp    0x40(%rsp),%edx
  0x00007f73e07d596a: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5974: movabs $0x270,%rsi
  0x00007f73e07d597e: je     0x00007f73e07d598e
  0x00007f73e07d5984: movabs $0x260,%rsi
  0x00007f73e07d598e: mov    (%rdx,%rsi,1),%rax
  0x00007f73e07d5992: lea    0x1(%rax),%rax
  0x00007f73e07d5996: mov    %rax,(%rdx,%rsi,1)
  0x00007f73e07d599a: je     0x00007f73e07d59aa  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69 (line 629)

  0x00007f73e07d59a0: mov    %rbx,0x68(%rsp)
  0x00007f73e07d59a5: jmpq   0x00007f73e07d5b32  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x00007f73e07d59aa: mov    0x50(%rsp),%rcx
  0x00007f73e07d59af: mov    0x10(%rdi),%edx    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74 (line 629)

  0x00007f73e07d59b2: cmp    %rcx,%rdx
  0x00007f73e07d59b5: movabs $0x7f73d3510598,%rsi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d59bf: movabs $0x280,%rax
  0x00007f73e07d59c9: je     0x00007f73e07d59d9
  0x00007f73e07d59cf: movabs $0x290,%rax
  0x00007f73e07d59d9: mov    (%rsi,%rax,1),%r8
  0x00007f73e07d59dd: lea    0x1(%r8),%r8
  0x00007f73e07d59e1: mov    %r8,(%rsi,%rax,1)
  0x00007f73e07d59e5: je     0x00007f73e07d6269  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81 (line 629)

  0x00007f73e07d59eb: cmp    $0x0,%rcx
  0x00007f73e07d59ef: movabs $0x7f73d3510598,%rsi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d59f9: movabs $0x2b0,%rax
  0x00007f73e07d5a03: jne    0x00007f73e07d5a13
  0x00007f73e07d5a09: movabs $0x2a0,%rax
  0x00007f73e07d5a13: mov    (%rsi,%rax,1),%r8
  0x00007f73e07d5a17: lea    0x1(%r8),%r8
  0x00007f73e07d5a1b: mov    %r8,(%rsi,%rax,1)
  0x00007f73e07d5a1f: jne    0x00007f73e07d5a2f  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85 (line 629)

  0x00007f73e07d5a25: mov    %rbx,0x68(%rsp)
  0x00007f73e07d5a2a: jmpq   0x00007f73e07d5b32  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104 (line 632)

  0x00007f73e07d5a2f: mov    %rdi,0x70(%rsp)
  0x00007f73e07d5a34: mov    %rbx,0x68(%rsp)
  0x00007f73e07d5a39: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007f73e07d662f
  0x00007f73e07d5a3c: mov    %rcx,%rsi
  0x00007f73e07d5a3f: movabs $0x7f73d3510598,%rax  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5a49: mov    0x8(%rsi),%esi
  0x00007f73e07d5a4c: shl    $0x3,%rsi
  0x00007f73e07d5a50: movabs $0x800000000,%r12
  0x00007f73e07d5a5a: add    %r12,%rsi
  0x00007f73e07d5a5d: xor    %r12,%r12
  0x00007f73e07d5a60: cmp    0x2d0(%rax),%rsi
  0x00007f73e07d5a67: jne    0x00007f73e07d5a76
  0x00007f73e07d5a69: addq   $0x1,0x2d8(%rax)
  0x00007f73e07d5a71: jmpq   0x00007f73e07d5adc
  0x00007f73e07d5a76: cmp    0x2e0(%rax),%rsi
  0x00007f73e07d5a7d: jne    0x00007f73e07d5a8c
  0x00007f73e07d5a7f: addq   $0x1,0x2e8(%rax)
  0x00007f73e07d5a87: jmpq   0x00007f73e07d5adc
  0x00007f73e07d5a8c: cmpq   $0x0,0x2d0(%rax)
  0x00007f73e07d5a97: jne    0x00007f73e07d5ab0
  0x00007f73e07d5a99: mov    %rsi,0x2d0(%rax)
  0x00007f73e07d5aa0: movq   $0x1,0x2d8(%rax)
  0x00007f73e07d5aab: jmpq   0x00007f73e07d5adc
  0x00007f73e07d5ab0: cmpq   $0x0,0x2e0(%rax)
  0x00007f73e07d5abb: jne    0x00007f73e07d5ad4
  0x00007f73e07d5abd: mov    %rsi,0x2e0(%rax)
  0x00007f73e07d5ac4: movq   $0x1,0x2e8(%rax)
  0x00007f73e07d5acf: jmpq   0x00007f73e07d5adc
  0x00007f73e07d5ad4: addq   $0x1,0x2c0(%rax)
  0x00007f73e07d5adc: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)

  0x00007f73e07d5adf: nopw   0x0(%rax,%rax,1)
  0x00007f73e07d5ae5: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d5aef: callq  0x00007f73e0269380  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [112]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)
                                                ;   {virtual_call}
  0x00007f73e07d5af4: cmp    $0x0,%eax
  0x00007f73e07d5af7: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5b01: movabs $0x308,%rcx
  0x00007f73e07d5b0b: jne    0x00007f73e07d5b1b
  0x00007f73e07d5b11: movabs $0x2f8,%rcx
  0x00007f73e07d5b1b: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07d5b1f: lea    0x1(%r8),%r8
  0x00007f73e07d5b23: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07d5b27: mov    0x70(%rsp),%rdi
  0x00007f73e07d5b2c: jne    0x00007f73e07d6269  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94 (line 630)

  0x00007f73e07d5b32: cmp    $0x0,%rdi
  0x00007f73e07d5b36: jne    0x00007f73e07d5b4f
  0x00007f73e07d5b38: movabs $0x7f73d3510598,%r8  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5b42: orb    $0x1,0x329(%r8)
  0x00007f73e07d5b4a: jmpq   0x00007f73e07d5c30
  0x00007f73e07d5b4f: movabs $0x8002d0cf8,%r9   ;   {metadata('java/util/HashMap$TreeNode')}
  0x00007f73e07d5b59: mov    0x8(%rdi),%ecx
  0x00007f73e07d5b5c: shl    $0x3,%rcx
  0x00007f73e07d5b60: movabs $0x800000000,%r12
  0x00007f73e07d5b6a: add    %r12,%rcx
  0x00007f73e07d5b6d: xor    %r12,%r12
  0x00007f73e07d5b70: cmp    %rcx,%r9
  0x00007f73e07d5b73: jne    0x00007f73e07d5c14
  0x00007f73e07d5b79: movabs $0x7f73d3510598,%r8  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5b83: mov    0x8(%rdi),%r9d
  0x00007f73e07d5b87: shl    $0x3,%r9
  0x00007f73e07d5b8b: movabs $0x800000000,%r12
  0x00007f73e07d5b95: add    %r12,%r9
  0x00007f73e07d5b98: xor    %r12,%r12
  0x00007f73e07d5b9b: cmp    0x340(%r8),%r9
  0x00007f73e07d5ba2: jne    0x00007f73e07d5bb1
  0x00007f73e07d5ba4: addq   $0x1,0x348(%r8)
  0x00007f73e07d5bac: jmpq   0x00007f73e07d5c35
  0x00007f73e07d5bb1: cmp    0x350(%r8),%r9
  0x00007f73e07d5bb8: jne    0x00007f73e07d5bc7
  0x00007f73e07d5bba: addq   $0x1,0x358(%r8)
  0x00007f73e07d5bc2: jmpq   0x00007f73e07d5c35
  0x00007f73e07d5bc7: cmpq   $0x0,0x340(%r8)
  0x00007f73e07d5bd2: jne    0x00007f73e07d5beb
  0x00007f73e07d5bd4: mov    %r9,0x340(%r8)
  0x00007f73e07d5bdb: movq   $0x1,0x348(%r8)
  0x00007f73e07d5be6: jmpq   0x00007f73e07d5c35
  0x00007f73e07d5beb: cmpq   $0x0,0x350(%r8)
  0x00007f73e07d5bf6: jne    0x00007f73e07d5c0f
  0x00007f73e07d5bf8: mov    %r9,0x350(%r8)
  0x00007f73e07d5bff: movq   $0x1,0x358(%r8)
  0x00007f73e07d5c0a: jmpq   0x00007f73e07d5c35
  0x00007f73e07d5c0f: jmpq   0x00007f73e07d5c35
  0x00007f73e07d5c14: movabs $0x7f73d3510598,%r8  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5c1e: subq   $0x1,0x330(%r8)
  0x00007f73e07d5c26: jmpq   0x00007f73e07d5c30
  0x00007f73e07d5c2b: jmpq   0x00007f73e07d5c35
  0x00007f73e07d5c30: xor    %rdx,%rdx
  0x00007f73e07d5c33: jmp    0x00007f73e07d5c3f
  0x00007f73e07d5c35: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106 (line 632)

  0x00007f73e07d5c3f: cmp    $0x0,%edx
  0x00007f73e07d5c42: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5c4c: movabs $0x368,%rcx
  0x00007f73e07d5c56: je     0x00007f73e07d5c66
  0x00007f73e07d5c5c: movabs $0x378,%rcx
  0x00007f73e07d5c66: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07d5c6a: lea    0x1(%r8),%r8
  0x00007f73e07d5c6e: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07d5c72: je     0x00007f73e07d5e51  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109 (line 632)

  0x00007f73e07d5c78: cmp    $0x0,%rdi
  0x00007f73e07d5c7c: jne    0x00007f73e07d5c94
  0x00007f73e07d5c7e: movabs $0x7f73d3510598,%rcx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5c88: orb    $0x1,0x381(%rcx)
  0x00007f73e07d5c8f: jmpq   0x00007f73e07d5d75
  0x00007f73e07d5c94: movabs $0x8002d0cf8,%r8   ;   {metadata('java/util/HashMap$TreeNode')}
  0x00007f73e07d5c9e: mov    0x8(%rdi),%edx
  0x00007f73e07d5ca1: shl    $0x3,%rdx
  0x00007f73e07d5ca5: movabs $0x800000000,%r12
  0x00007f73e07d5caf: add    %r12,%rdx
  0x00007f73e07d5cb2: xor    %r12,%r12
  0x00007f73e07d5cb5: cmp    %rdx,%r8
  0x00007f73e07d5cb8: jne    0x00007f73e07d5d59
  0x00007f73e07d5cbe: movabs $0x7f73d3510598,%rcx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5cc8: mov    0x8(%rdi),%r8d
  0x00007f73e07d5ccc: shl    $0x3,%r8
  0x00007f73e07d5cd0: movabs $0x800000000,%r12
  0x00007f73e07d5cda: add    %r12,%r8
  0x00007f73e07d5cdd: xor    %r12,%r12
  0x00007f73e07d5ce0: cmp    0x398(%rcx),%r8
  0x00007f73e07d5ce7: jne    0x00007f73e07d5cf6
  0x00007f73e07d5ce9: addq   $0x1,0x3a0(%rcx)
  0x00007f73e07d5cf1: jmpq   0x00007f73e07d5d75
  0x00007f73e07d5cf6: cmp    0x3a8(%rcx),%r8
  0x00007f73e07d5cfd: jne    0x00007f73e07d5d0c
  0x00007f73e07d5cff: addq   $0x1,0x3b0(%rcx)
  0x00007f73e07d5d07: jmpq   0x00007f73e07d5d75
  0x00007f73e07d5d0c: cmpq   $0x0,0x398(%rcx)
  0x00007f73e07d5d17: jne    0x00007f73e07d5d30
  0x00007f73e07d5d19: mov    %r8,0x398(%rcx)
  0x00007f73e07d5d20: movq   $0x1,0x3a0(%rcx)
  0x00007f73e07d5d2b: jmpq   0x00007f73e07d5d75
  0x00007f73e07d5d30: cmpq   $0x0,0x3a8(%rcx)
  0x00007f73e07d5d3b: jne    0x00007f73e07d5d54
  0x00007f73e07d5d3d: mov    %r8,0x3a8(%rcx)
  0x00007f73e07d5d44: movq   $0x1,0x3b0(%rcx)
  0x00007f73e07d5d4f: jmpq   0x00007f73e07d5d75
  0x00007f73e07d5d54: jmpq   0x00007f73e07d5d75
  0x00007f73e07d5d59: movabs $0x7f73d3510598,%rcx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5d63: subq   $0x1,0x388(%rcx)
  0x00007f73e07d5d6b: jmpq   0x00007f73e07d6634
  0x00007f73e07d5d70: jmpq   0x00007f73e07d5d75
  0x00007f73e07d5d75: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)

  0x00007f73e07d5d78: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00007f73e07d663d
  0x00007f73e07d5d7b: mov    %rsi,%rdx
  0x00007f73e07d5d7e: movabs $0x7f73d3510598,%rcx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5d88: mov    0x8(%rdx),%edx
  0x00007f73e07d5d8b: shl    $0x3,%rdx
  0x00007f73e07d5d8f: movabs $0x800000000,%r12
  0x00007f73e07d5d99: add    %r12,%rdx
  0x00007f73e07d5d9c: xor    %r12,%r12
  0x00007f73e07d5d9f: cmp    0x3d0(%rcx),%rdx
  0x00007f73e07d5da6: jne    0x00007f73e07d5db5
  0x00007f73e07d5da8: addq   $0x1,0x3d8(%rcx)
  0x00007f73e07d5db0: jmpq   0x00007f73e07d5e1b
  0x00007f73e07d5db5: cmp    0x3e0(%rcx),%rdx
  0x00007f73e07d5dbc: jne    0x00007f73e07d5dcb
  0x00007f73e07d5dbe: addq   $0x1,0x3e8(%rcx)
  0x00007f73e07d5dc6: jmpq   0x00007f73e07d5e1b
  0x00007f73e07d5dcb: cmpq   $0x0,0x3d0(%rcx)
  0x00007f73e07d5dd6: jne    0x00007f73e07d5def
  0x00007f73e07d5dd8: mov    %rdx,0x3d0(%rcx)
  0x00007f73e07d5ddf: movq   $0x1,0x3d8(%rcx)
  0x00007f73e07d5dea: jmpq   0x00007f73e07d5e1b
  0x00007f73e07d5def: cmpq   $0x0,0x3e0(%rcx)
  0x00007f73e07d5dfa: jne    0x00007f73e07d5e13
  0x00007f73e07d5dfc: mov    %rdx,0x3e0(%rcx)
  0x00007f73e07d5e03: movq   $0x1,0x3e8(%rcx)
  0x00007f73e07d5e0e: jmpq   0x00007f73e07d5e1b
  0x00007f73e07d5e13: addq   $0x1,0x3c0(%rcx)
  0x00007f73e07d5e1b: mov    0x48(%rsp),%rdx
  0x00007f73e07d5e20: mov    0x68(%rsp),%rcx
  0x00007f73e07d5e25: mov    0x40(%rsp),%r8d
  0x00007f73e07d5e2a: mov    0x50(%rsp),%r9
  0x00007f73e07d5e2f: mov    0x58(%rsp),%rdi    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)

  0x00007f73e07d5e34: data16 xchg %ax,%ax
  0x00007f73e07d5e37: callq  0x00007f73e0269100  ; ImmutableOopMap{[72]=Oop [88]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {optimized virtual_call}
  0x00007f73e07d5e3c: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5e46: incl   0x3f8(%rdx)
  0x00007f73e07d5e4c: jmpq   0x00007f73e07d627c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128 (line 633)

  0x00007f73e07d5e51: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134 (line 636)

  0x00007f73e07d5e56: xchg   %ax,%ax
  0x00007f73e07d5e58: mov    %ebx,0x78(%rsp)
  0x00007f73e07d5e5c: mov    0x50(%rsp),%rcx
  0x00007f73e07d5e61: mov    0x40(%rsp),%edx
  0x00007f73e07d5e65: mov    0x18(%rdi),%eax    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)
                                                ; implicit exception: dispatches to 0x00007f73e07d6642
  0x00007f73e07d5e68: mov    %rax,0x80(%rsp)
  0x00007f73e07d5e70: cmp    $0x0,%rax
  0x00007f73e07d5e74: movabs $0x7f73d3510598,%rsi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5e7e: movabs $0x420,%r8
  0x00007f73e07d5e88: je     0x00007f73e07d5e98
  0x00007f73e07d5e8e: movabs $0x410,%r8
  0x00007f73e07d5e98: mov    (%rsi,%r8,1),%r9
  0x00007f73e07d5e9c: lea    0x1(%r9),%r9
  0x00007f73e07d5ea0: mov    %r9,(%rsi,%r8,1)
  0x00007f73e07d5ea4: je     0x00007f73e07d60cc  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142 (line 636)

  0x00007f73e07d5eaa: mov    0xc(%rax),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ; implicit exception: dispatches to 0x00007f73e07d6647
  0x00007f73e07d5ead: cmp    %edx,%esi
  0x00007f73e07d5eaf: movabs $0x7f73d3510598,%rsi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5eb9: movabs $0x4d8,%rdi
  0x00007f73e07d5ec3: jne    0x00007f73e07d5ed3
  0x00007f73e07d5ec9: movabs $0x4e8,%rdi
  0x00007f73e07d5ed3: mov    (%rsi,%rdi,1),%r8
  0x00007f73e07d5ed7: lea    0x1(%r8),%r8
  0x00007f73e07d5edb: mov    %r8,(%rsi,%rdi,1)
  0x00007f73e07d5edf: jne    0x00007f73e07d604d  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181 (line 642)

  0x00007f73e07d5ee5: mov    0x10(%rax),%esi    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186 (line 642)

  0x00007f73e07d5ee8: cmp    %rcx,%rsi
  0x00007f73e07d5eeb: movabs $0x7f73d3510598,%rdi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5ef5: movabs $0x4f8,%r8
  0x00007f73e07d5eff: je     0x00007f73e07d5f0f
  0x00007f73e07d5f05: movabs $0x508,%r8
  0x00007f73e07d5f0f: mov    (%rdi,%r8,1),%r9
  0x00007f73e07d5f13: lea    0x1(%r9),%r9
  0x00007f73e07d5f17: mov    %r9,(%rdi,%r8,1)
  0x00007f73e07d5f1b: je     0x00007f73e07d60a2  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193 (line 642)

  0x00007f73e07d5f21: cmp    $0x0,%rcx
  0x00007f73e07d5f25: movabs $0x7f73d3510598,%rdi  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5f2f: movabs $0x518,%r8
  0x00007f73e07d5f39: je     0x00007f73e07d5f49
  0x00007f73e07d5f3f: movabs $0x528,%r8
  0x00007f73e07d5f49: mov    (%rdi,%r8,1),%r9
  0x00007f73e07d5f4d: lea    0x1(%r9),%r9
  0x00007f73e07d5f51: mov    %r9,(%rdi,%r8,1)
  0x00007f73e07d5f55: je     0x00007f73e07d604d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197 (line 642)

  0x00007f73e07d5f5b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007f73e07d664c
  0x00007f73e07d5f5e: mov    %rcx,%rdi
  0x00007f73e07d5f61: movabs $0x7f73d3510598,%r8  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d5f6b: mov    0x8(%rdi),%edi
  0x00007f73e07d5f6e: shl    $0x3,%rdi
  0x00007f73e07d5f72: movabs $0x800000000,%r12
  0x00007f73e07d5f7c: add    %r12,%rdi
  0x00007f73e07d5f7f: xor    %r12,%r12
  0x00007f73e07d5f82: cmp    0x548(%r8),%rdi
  0x00007f73e07d5f89: jne    0x00007f73e07d5f98
  0x00007f73e07d5f8b: addq   $0x1,0x550(%r8)
  0x00007f73e07d5f93: jmpq   0x00007f73e07d5ffe
  0x00007f73e07d5f98: cmp    0x558(%r8),%rdi
  0x00007f73e07d5f9f: jne    0x00007f73e07d5fae
  0x00007f73e07d5fa1: addq   $0x1,0x560(%r8)
  0x00007f73e07d5fa9: jmpq   0x00007f73e07d5ffe
  0x00007f73e07d5fae: cmpq   $0x0,0x548(%r8)
  0x00007f73e07d5fb9: jne    0x00007f73e07d5fd2
  0x00007f73e07d5fbb: mov    %rdi,0x548(%r8)
  0x00007f73e07d5fc2: movq   $0x1,0x550(%r8)
  0x00007f73e07d5fcd: jmpq   0x00007f73e07d5ffe
  0x00007f73e07d5fd2: cmpq   $0x0,0x558(%r8)
  0x00007f73e07d5fdd: jne    0x00007f73e07d5ff6
  0x00007f73e07d5fdf: mov    %rdi,0x558(%r8)
  0x00007f73e07d5fe6: movq   $0x1,0x560(%r8)
  0x00007f73e07d5ff1: jmpq   0x00007f73e07d5ffe
  0x00007f73e07d5ff6: addq   $0x1,0x538(%r8)
  0x00007f73e07d5ffe: mov    %rsi,%rdx
  0x00007f73e07d6001: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)

  0x00007f73e07d6004: nop
  0x00007f73e07d6005: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d600f: callq  0x00007f73e0269380  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)
                                                ;   {virtual_call}
  0x00007f73e07d6014: cmp    $0x0,%eax
  0x00007f73e07d6017: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d6021: movabs $0x580,%rcx
  0x00007f73e07d602b: jne    0x00007f73e07d603b
  0x00007f73e07d6031: movabs $0x570,%rcx
  0x00007f73e07d603b: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07d603f: lea    0x1(%r8),%r8
  0x00007f73e07d6043: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07d6047: jne    0x00007f73e07d60af  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206 (line 643)

  0x00007f73e07d604d: mov    0x78(%rsp),%ebx
  0x00007f73e07d6051: inc    %ebx
  0x00007f73e07d6053: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d605d: mov    0x108(%rdx),%ecx
  0x00007f73e07d6063: add    $0x8,%ecx
  0x00007f73e07d6066: mov    %ecx,0x108(%rdx)
  0x00007f73e07d606c: and    $0xfff8,%ecx
  0x00007f73e07d6072: cmp    $0x0,%ecx
  0x00007f73e07d6075: je     0x00007f73e07d6651  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x00007f73e07d607b: mov    0x108(%r15),%r10   ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x00007f73e07d6082: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07d6085: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d608f: incl   0x5a8(%rdx)
  0x00007f73e07d6095: mov    0x80(%rsp),%rdi
  0x00007f73e07d609d: jmpq   0x00007f73e07d5e58  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)

  0x00007f73e07d60a2: mov    0x80(%rsp),%rax
  0x00007f73e07d60aa: jmpq   0x00007f73e07d627c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x00007f73e07d60af: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d60b9: incl   0x590(%rdx)
  0x00007f73e07d60bf: mov    0x80(%rsp),%rax
  0x00007f73e07d60c7: jmpq   0x00007f73e07d627c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209 (line 644)

  0x00007f73e07d60cc: mov    %rdi,0x88(%rsp)
  0x00007f73e07d60d4: mov    0x48(%rsp),%rsi
  0x00007f73e07d60d9: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d60e3: mov    0x8(%rsi),%esi
  0x00007f73e07d60e6: shl    $0x3,%rsi
  0x00007f73e07d60ea: movabs $0x800000000,%r12
  0x00007f73e07d60f4: add    %r12,%rsi
  0x00007f73e07d60f7: xor    %r12,%r12
  0x00007f73e07d60fa: cmp    0x440(%rdx),%rsi
  0x00007f73e07d6101: jne    0x00007f73e07d6110
  0x00007f73e07d6103: addq   $0x1,0x448(%rdx)
  0x00007f73e07d610b: jmpq   0x00007f73e07d6176
  0x00007f73e07d6110: cmp    0x450(%rdx),%rsi
  0x00007f73e07d6117: jne    0x00007f73e07d6126
  0x00007f73e07d6119: addq   $0x1,0x458(%rdx)
  0x00007f73e07d6121: jmpq   0x00007f73e07d6176
  0x00007f73e07d6126: cmpq   $0x0,0x440(%rdx)
  0x00007f73e07d6131: jne    0x00007f73e07d614a
  0x00007f73e07d6133: mov    %rsi,0x440(%rdx)
  0x00007f73e07d613a: movq   $0x1,0x448(%rdx)
  0x00007f73e07d6145: jmpq   0x00007f73e07d6176
  0x00007f73e07d614a: cmpq   $0x0,0x450(%rdx)
  0x00007f73e07d6155: jne    0x00007f73e07d616e
  0x00007f73e07d6157: mov    %rsi,0x450(%rdx)
  0x00007f73e07d615e: movq   $0x1,0x458(%rdx)
  0x00007f73e07d6169: jmpq   0x00007f73e07d6176
  0x00007f73e07d616e: addq   $0x1,0x430(%rdx)
  0x00007f73e07d6176: mov    0x40(%rsp),%edx
  0x00007f73e07d617a: mov    0x58(%rsp),%r8
  0x00007f73e07d617f: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00007f73e07d6189: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)

  0x00007f73e07d618e: nopl   0x0(%rax)
  0x00007f73e07d6195: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d619f: callq  0x00007f73e027f960  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152 (line 637)
                                                ;   {virtual_call}
  0x00007f73e07d61a4: movsbl 0x30(%r15),%edx
  0x00007f73e07d61a9: cmp    $0x0,%edx
  0x00007f73e07d61ac: mov    0x88(%rsp),%rdi
  0x00007f73e07d61b4: jne    0x00007f73e07d6672
  0x00007f73e07d61ba: mov    %rax,%r10
  0x00007f73e07d61bd: mov    %r10d,0x18(%rdi)
  0x00007f73e07d61c1: mov    %rdi,%rdx
  0x00007f73e07d61c4: xor    %rax,%rdx
  0x00007f73e07d61c7: shr    $0x14,%rdx
  0x00007f73e07d61cb: cmp    $0x0,%rdx
  0x00007f73e07d61cf: jne    0x00007f73e07d668d  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155 (line 637)

  0x00007f73e07d61d5: mov    0x78(%rsp),%ebx
  0x00007f73e07d61d9: cmp    $0x7,%ebx
  0x00007f73e07d61dc: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d61e6: movabs $0x478,%rcx
  0x00007f73e07d61f0: jge    0x00007f73e07d6200
  0x00007f73e07d61f6: movabs $0x468,%rcx
  0x00007f73e07d6200: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07d6204: lea    0x1(%rsi),%rsi
  0x00007f73e07d6208: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07d620c: jge    0x00007f73e07d621f  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162 (line 638)

  0x00007f73e07d6212: mov    0x80(%rsp),%rax
  0x00007f73e07d621a: jmpq   0x00007f73e07d627c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222 (line 648)

  0x00007f73e07d621f: mov    0x68(%rsp),%rbx
  0x00007f73e07d6224: mov    0x40(%rsp),%ecx
  0x00007f73e07d6228: mov    0x48(%rsp),%rsi
  0x00007f73e07d622d: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d6237: addq   $0x1,0x488(%rdx)
  0x00007f73e07d623f: mov    %rbx,%rdx
  0x00007f73e07d6242: mov    0x48(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)

  0x00007f73e07d6247: callq  0x00007f73e0269100  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169 (line 639)
                                                ;   {optimized virtual_call}
  0x00007f73e07d624c: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d6256: incl   0x4c0(%rdx)
  0x00007f73e07d625c: mov    0x80(%rsp),%rax
  0x00007f73e07d6264: jmpq   0x00007f73e07d627c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172 (line 639)

  0x00007f73e07d6269: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d6273: incl   0x318(%rdx)
  0x00007f73e07d6279: mov    %rdi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101 (line 631)

  0x00007f73e07d627c: cmp    $0x0,%rax
  0x00007f73e07d6280: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d628a: movabs $0x5d0,%rsi
  0x00007f73e07d6294: jne    0x00007f73e07d62a4
  0x00007f73e07d629a: movabs $0x5c0,%rsi
  0x00007f73e07d62a4: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07d62a8: lea    0x1(%rdi),%rdi
  0x00007f73e07d62ac: mov    %rdi,(%rdx,%rsi,1)
  0x00007f73e07d62b0: jne    0x00007f73e07d630f  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224 (line 648)

  0x00007f73e07d62b6: mov    0x48(%rsp),%rsi
  0x00007f73e07d62bb: mov    0x18(%rsi),%edx    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261 (line 656)

  0x00007f73e07d62be: inc    %edx
  0x00007f73e07d62c0: mov    %edx,0x18(%rsi)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266 (line 656)

  0x00007f73e07d62c3: mov    0x14(%rsi),%edx    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271 (line 657)

  0x00007f73e07d62c6: inc    %edx
  0x00007f73e07d62c8: mov    %edx,0x14(%rsi)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277 (line 657)

  0x00007f73e07d62cb: mov    0x1c(%rsi),%edi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281 (line 657)

  0x00007f73e07d62ce: cmp    %edi,%edx
  0x00007f73e07d62d0: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d62da: movabs $0x668,%rdi
  0x00007f73e07d62e4: jg     0x00007f73e07d62f4
  0x00007f73e07d62ea: movabs $0x658,%rdi
  0x00007f73e07d62f4: mov    (%rdx,%rdi,1),%rbx
  0x00007f73e07d62f8: lea    0x1(%rbx),%rbx
  0x00007f73e07d62fc: mov    %rbx,(%rdx,%rdi,1)
  0x00007f73e07d6300: jg     0x00007f73e07d6497  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284 (line 657)

  0x00007f73e07d6306: mov    0x60(%rsp),%edi
  0x00007f73e07d630a: jmpq   0x00007f73e07d64c5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292 (line 659)

  0x00007f73e07d630f: mov    0x44(%rsp),%r9d
  0x00007f73e07d6314: mov    0x48(%rsp),%rsi
  0x00007f73e07d6319: mov    0x14(%rax),%edi    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)
                                                ; implicit exception: dispatches to 0x00007f73e07d66a5
  0x00007f73e07d631c: cmp    $0x0,%r9d
  0x00007f73e07d6320: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d632a: movabs $0x5e0,%rbx
  0x00007f73e07d6334: je     0x00007f73e07d6344
  0x00007f73e07d633a: movabs $0x5f0,%rbx
  0x00007f73e07d6344: mov    (%rdx,%rbx,1),%rcx
  0x00007f73e07d6348: lea    0x1(%rcx),%rcx
  0x00007f73e07d634c: mov    %rcx,(%rdx,%rbx,1)
  0x00007f73e07d6350: je     0x00007f73e07d6390  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236 (line 650)

  0x00007f73e07d6356: cmp    $0x0,%rdi
  0x00007f73e07d635a: movabs $0x7f73d3510598,%rdx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d6364: movabs $0x600,%rbx
  0x00007f73e07d636e: jne    0x00007f73e07d637e
  0x00007f73e07d6374: movabs $0x610,%rbx
  0x00007f73e07d637e: mov    (%rdx,%rbx,1),%rcx
  0x00007f73e07d6382: lea    0x1(%rcx),%rcx
  0x00007f73e07d6386: mov    %rcx,(%rdx,%rbx,1)
  0x00007f73e07d638a: jne    0x00007f73e07d63be  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241 (line 650)

  0x00007f73e07d6390: mov    0x58(%rsp),%r8
  0x00007f73e07d6395: movsbl 0x30(%r15),%edx
  0x00007f73e07d639a: cmp    $0x0,%edx
  0x00007f73e07d639d: jne    0x00007f73e07d66aa
  0x00007f73e07d63a3: mov    %r8,%r10
  0x00007f73e07d63a6: mov    %r10d,0x14(%rax)
  0x00007f73e07d63aa: mov    %rax,%rdx
  0x00007f73e07d63ad: xor    %r8,%rdx
  0x00007f73e07d63b0: shr    $0x14,%rdx
  0x00007f73e07d63b4: cmp    $0x0,%rdx
  0x00007f73e07d63b8: jne    0x00007f73e07d66c5  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247 (line 651)

  0x00007f73e07d63be: mov    %rdi,0x90(%rsp)
  0x00007f73e07d63c6: mov    %rsi,%rdx
  0x00007f73e07d63c9: movabs $0x7f73d3510598,%rbx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d63d3: mov    0x8(%rdx),%edx
  0x00007f73e07d63d6: shl    $0x3,%rdx
  0x00007f73e07d63da: movabs $0x800000000,%r12
  0x00007f73e07d63e4: add    %r12,%rdx
  0x00007f73e07d63e7: xor    %r12,%r12
  0x00007f73e07d63ea: cmp    0x630(%rbx),%rdx
  0x00007f73e07d63f1: jne    0x00007f73e07d6400
  0x00007f73e07d63f3: addq   $0x1,0x638(%rbx)
  0x00007f73e07d63fb: jmpq   0x00007f73e07d6466
  0x00007f73e07d6400: cmp    0x640(%rbx),%rdx
  0x00007f73e07d6407: jne    0x00007f73e07d6416
  0x00007f73e07d6409: addq   $0x1,0x648(%rbx)
  0x00007f73e07d6411: jmpq   0x00007f73e07d6466
  0x00007f73e07d6416: cmpq   $0x0,0x630(%rbx)
  0x00007f73e07d6421: jne    0x00007f73e07d643a
  0x00007f73e07d6423: mov    %rdx,0x630(%rbx)
  0x00007f73e07d642a: movq   $0x1,0x638(%rbx)
  0x00007f73e07d6435: jmpq   0x00007f73e07d6466
  0x00007f73e07d643a: cmpq   $0x0,0x640(%rbx)
  0x00007f73e07d6445: jne    0x00007f73e07d645e
  0x00007f73e07d6447: mov    %rdx,0x640(%rbx)
  0x00007f73e07d644e: movq   $0x1,0x648(%rbx)
  0x00007f73e07d6459: jmpq   0x00007f73e07d6466
  0x00007f73e07d645e: addq   $0x1,0x620(%rbx)
  0x00007f73e07d6466: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)

  0x00007f73e07d6469: nopl   0x0(%rax)
  0x00007f73e07d646d: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d6477: callq  0x00007f73e0269380  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253 (line 652)
                                                ;   {virtual_call}
  0x00007f73e07d647c: mov    0x90(%rsp),%rax
  0x00007f73e07d6484: add    $0xa0,%rsp
  0x00007f73e07d648b: pop    %rbp
  0x00007f73e07d648c: mov    0x108(%r15),%r10
  0x00007f73e07d6493: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d6496: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258 (line 653)

  0x00007f73e07d6497: mov    %rsi,%rdi
  0x00007f73e07d649a: movabs $0x7f73d3510598,%rbx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d64a4: addq   $0x1,0x678(%rbx)
  0x00007f73e07d64ac: mov    %rsi,%rdi
  0x00007f73e07d64af: mov    %rdi,%rsi          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)

  0x00007f73e07d64b2: nopl   0x0(%rax,%rax,1)
  0x00007f73e07d64b7: callq  0x00007f73e0269100  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288 (line 658)
                                                ;   {optimized virtual_call}
  0x00007f73e07d64bc: mov    0x60(%rsp),%edi
  0x00007f73e07d64c0: mov    0x48(%rsp),%rsi
  0x00007f73e07d64c5: mov    %rsi,%rdx
  0x00007f73e07d64c8: movabs $0x7f73d3510598,%rbx  ;   {metadata(method data for {method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d64d2: mov    0x8(%rdx),%edx
  0x00007f73e07d64d5: shl    $0x3,%rdx
  0x00007f73e07d64d9: movabs $0x800000000,%r12
  0x00007f73e07d64e3: add    %r12,%rdx
  0x00007f73e07d64e6: xor    %r12,%r12
  0x00007f73e07d64e9: cmp    0x6c0(%rbx),%rdx
  0x00007f73e07d64f0: jne    0x00007f73e07d64ff
  0x00007f73e07d64f2: addq   $0x1,0x6c8(%rbx)
  0x00007f73e07d64fa: jmpq   0x00007f73e07d6565
  0x00007f73e07d64ff: cmp    0x6d0(%rbx),%rdx
  0x00007f73e07d6506: jne    0x00007f73e07d6515
  0x00007f73e07d6508: addq   $0x1,0x6d8(%rbx)
  0x00007f73e07d6510: jmpq   0x00007f73e07d6565
  0x00007f73e07d6515: cmpq   $0x0,0x6c0(%rbx)
  0x00007f73e07d6520: jne    0x00007f73e07d6539
  0x00007f73e07d6522: mov    %rdx,0x6c0(%rbx)
  0x00007f73e07d6529: movq   $0x1,0x6c8(%rbx)
  0x00007f73e07d6534: jmpq   0x00007f73e07d6565
  0x00007f73e07d6539: cmpq   $0x0,0x6d0(%rbx)
  0x00007f73e07d6544: jne    0x00007f73e07d655d
  0x00007f73e07d6546: mov    %rdx,0x6d0(%rbx)
  0x00007f73e07d654d: movq   $0x1,0x6d8(%rbx)
  0x00007f73e07d6558: jmpq   0x00007f73e07d6565
  0x00007f73e07d655d: addq   $0x1,0x6b0(%rbx)
  0x00007f73e07d6565: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)

  0x00007f73e07d6568: nopl   0x0(%rax,%rax,1)
  0x00007f73e07d656d: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d6577: callq  0x00007f73e027f8e0  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295 (line 659)
                                                ;   {virtual_call}
  0x00007f73e07d657c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07d6586: add    $0xa0,%rsp
  0x00007f73e07d658d: pop    %rbp
  0x00007f73e07d658e: mov    0x108(%r15),%r10
  0x00007f73e07d6595: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d6598: retq   
  0x00007f73e07d6599: movabs $0x8002f2690,%r10  ;   {metadata({method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d65a3: mov    %r10,0x8(%rsp)
  0x00007f73e07d65a8: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d65b0: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 623)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d65b5: jmpq   0x00007f73e07d55e5
  0x00007f73e07d65ba: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12 (line 623)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d65bf: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26 (line 624)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d65c4: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d65c9: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d65ce: mov    %rax,(%rsp)
  0x00007f73e07d65d2: mov    %rbx,0x8(%rsp)
  0x00007f73e07d65d7: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40 (line 625)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d65dc: mov    %rdx,(%rsp)
  0x00007f73e07d65e0: mov    %rbx,0x8(%rsp)
  0x00007f73e07d65e5: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d65ea: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d65ef: mov    %rax,(%rsp)
  0x00007f73e07d65f3: callq  0x00007f73e0332620  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59 (line 626)
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x00007f73e07d65f8: mov    (%rdx),%esi
  0x00007f73e07d65fa: cmp    $0x0,%rsi
  0x00007f73e07d65fe: je     0x00007f73e07d5934
  0x00007f73e07d6604: mov    %rsi,(%rsp)
  0x00007f73e07d6608: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07d660d: jmpq   0x00007f73e07d5934
  0x00007f73e07d6612: cmp    $0x0,%rax
  0x00007f73e07d6616: je     0x00007f73e07d594e
  0x00007f73e07d661c: mov    %rdx,(%rsp)
  0x00007f73e07d6620: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07d6625: jmpq   0x00007f73e07d594e
  0x00007f73e07d662a: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65 (line 629)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d662f: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91 (line 630)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d6634: mov    %rdi,(%rsp)
  0x00007f73e07d6638: callq  0x00007f73e0332820  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114 (line 633)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07d663d: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop rsi=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123 (line 633)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d6642: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136 (line 636)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d6647: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177 (line 642)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d664c: callq  0x00007f73e03308a0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203 (line 643)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d6651: movabs $0x8002f2690,%r10  ;   {metadata({method} {0x00000008002f2690} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00007f73e07d665b: mov    %r10,0x8(%rsp)
  0x00007f73e07d6660: movq   $0xdb,(%rsp)
  0x00007f73e07d6668: callq  0x00007f73e0334d80  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219 (line 635)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d666d: jmpq   0x00007f73e07d607b
  0x00007f73e07d6672: mov    0x18(%rdi),%edx
  0x00007f73e07d6675: cmp    $0x0,%rdx
  0x00007f73e07d6679: je     0x00007f73e07d61ba
  0x00007f73e07d667f: mov    %rdx,(%rsp)
  0x00007f73e07d6683: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07d6688: jmpq   0x00007f73e07d61ba
  0x00007f73e07d668d: cmp    $0x0,%rax
  0x00007f73e07d6691: je     0x00007f73e07d61d5
  0x00007f73e07d6697: mov    %rdi,(%rsp)
  0x00007f73e07d669b: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07d66a0: jmpq   0x00007f73e07d61d5
  0x00007f73e07d66a5: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229 (line 649)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d66aa: mov    0x14(%rax),%edx
  0x00007f73e07d66ad: cmp    $0x0,%rdx
  0x00007f73e07d66b1: je     0x00007f73e07d63a3
  0x00007f73e07d66b7: mov    %rdx,(%rsp)
  0x00007f73e07d66bb: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07d66c0: jmpq   0x00007f73e07d63a3
  0x00007f73e07d66c5: cmp    $0x0,%r8
  0x00007f73e07d66c9: je     0x00007f73e07d63be
  0x00007f73e07d66cf: mov    %rax,(%rsp)
  0x00007f73e07d66d3: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07d66d8: jmpq   0x00007f73e07d63be
  0x00007f73e07d66dd: nop
  0x00007f73e07d66de: nop
  0x00007f73e07d66df: mov    0x428(%r15),%rax
  0x00007f73e07d66e6: movabs $0x0,%r10
  0x00007f73e07d66f0: mov    %r10,0x428(%r15)
  0x00007f73e07d66f7: movabs $0x0,%r10
  0x00007f73e07d6701: mov    %r10,0x430(%r15)
  0x00007f73e07d6708: add    $0xa0,%rsp
  0x00007f73e07d670f: pop    %rbp
  0x00007f73e07d6710: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07d6715: hlt    
  0x00007f73e07d6716: hlt    
  0x00007f73e07d6717: hlt    
  0x00007f73e07d6718: hlt    
  0x00007f73e07d6719: hlt    
  0x00007f73e07d671a: hlt    
  0x00007f73e07d671b: hlt    
  0x00007f73e07d671c: hlt    
  0x00007f73e07d671d: hlt    
  0x00007f73e07d671e: hlt    
  0x00007f73e07d671f: hlt    
[Stub Code]
  0x00007f73e07d6720: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07d6725: movabs $0x8002f24d8,%rbx  ;   {static_stub}
  0x00007f73e07d672f: jmpq   0x00007f73e026b0e0  ;   {runtime_call I2C/C2I adapters}
  0x00007f73e07d6734: nop
  0x00007f73e07d6735: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d673f: jmpq   0x00007f73e07d673f  ;   {runtime_call}
  0x00007f73e07d6744: nop
  0x00007f73e07d6745: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d674f: jmpq   0x00007f73e07d674f  ;   {runtime_call}
  0x00007f73e07d6754: nop
  0x00007f73e07d6755: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d675f: jmpq   0x00007f73e07d675f  ;   {runtime_call}
  0x00007f73e07d6764: nop
  0x00007f73e07d6765: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d676f: jmpq   0x00007f73e07d676f  ;   {runtime_call}
  0x00007f73e07d6774: nop
  0x00007f73e07d6775: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d677f: jmpq   0x00007f73e07d677f  ;   {runtime_call}
  0x00007f73e07d6784: nop
  0x00007f73e07d6785: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d678f: jmpq   0x00007f73e07d678f  ;   {runtime_call}
  0x00007f73e07d6794: nop
  0x00007f73e07d6795: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d679f: jmpq   0x00007f73e07d679f  ;   {runtime_call}
  0x00007f73e07d67a4: nop
  0x00007f73e07d67a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d67af: jmpq   0x00007f73e07d67af  ;   {runtime_call}
  0x00007f73e07d67b4: nop
  0x00007f73e07d67b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d67bf: jmpq   0x00007f73e07d67bf  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07d67c4: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07d67c9: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d67d3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d67d7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d67dc: hlt    
[Deopt Handler Code]
  0x00007f73e07d67dd: movabs $0x7f73e07d67dd,%r10  ;   {section_word}
  0x00007f73e07d67e7: push   %r10
  0x00007f73e07d67e9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d67ee: hlt    
  0x00007f73e07d67ef: hlt    

ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop }pc offsets: 324 
ImmutableOopMap{[72]=Oop [104]=Oop }pc offsets: 636 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [112]=Oop [80]=Oop }pc offsets: 1428 
ImmutableOopMap{[72]=Oop [88]=Oop }pc offsets: 2268 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }pc offsets: 2740 2850 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 3140 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }pc offsets: 3308 
ImmutableOopMap{[144]=Oop }pc offsets: 3868 
ImmutableOopMap{[72]=Oop }pc offsets: 3932 
ImmutableOopMap{}pc offsets: 4124 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop }pc offsets: 4181 
ImmutableOopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop }pc offsets: 4191 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rdx=Oop }pc offsets: 4196 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4201 4206 4220 
ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }pc offsets: 4234 4239 4248 
ImmutableOopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4303 
ImmutableOopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop }pc offsets: 4308 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop }pc offsets: 4317 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [104]=Oop rsi=Oop }pc offsets: 4322 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop }pc offsets: 4327 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop }pc offsets: 4332 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop }pc offsets: 4337 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [128]=Oop [80]=Oop }pc offsets: 4365 
ImmutableOopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop }pc offsets: 4426 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x00007f73e7d0c820, 0x00007f73e7d0c840]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d352cff8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx       = int
  # parm3:    r8        = int
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0c820: mov    0x24(%r9),%ebx
  0x00007f73e7d0c824: mov    0x10(%rbx),%rbx
  0x00007f73e7d0c828: test   %rbx,%rbx
  0x00007f73e7d0c82b: je     0x00007f73e7d0c834
  0x00007f73e7d0c831: jmpq   *0x38(%rbx)
  0x00007f73e7d0c834: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0c839: hlt    
  0x00007f73e7d0c83a: hlt    
  0x00007f73e7d0c83b: hlt    
  0x00007f73e7d0c83c: hlt    
  0x00007f73e7d0c83d: hlt    
  0x00007f73e7d0c83e: hlt    
  0x00007f73e7d0c83f: hlt    
Compiled method (c2)    9461   49       4       java.lang.Object::<init> (1 bytes)
 total in heap  [0x00007f73e7d0c410,0x00007f73e7d0c668] = 600
 relocation     [0x00007f73e7d0c588,0x00007f73e7d0c598] = 16
 main code      [0x00007f73e7d0c5a0,0x00007f73e7d0c600] = 96
 stub code      [0x00007f73e7d0c600,0x00007f73e7d0c618] = 24
 metadata       [0x00007f73e7d0c618,0x00007f73e7d0c628] = 16
 scopes data    [0x00007f73e7d0c628,0x00007f73e7d0c630] = 8
 scopes pcs     [0x00007f73e7d0c630,0x00007f73e7d0c660] = 48
 dependencies   [0x00007f73e7d0c660,0x00007f73e7d0c668] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x00007f73e7d0c5a0, 0x00007f73e7d0c618]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d0c5a0: mov    0x8(%rsi),%r10d
  0x00007f73e7d0c5a4: shl    $0x3,%r10
  0x00007f73e7d0c5a8: movabs $0x800000000,%r12
  0x00007f73e7d0c5b2: add    %r12,%r10
  0x00007f73e7d0c5b5: xor    %r12,%r12
  0x00007f73e7d0c5b8: cmp    %r10,%rax
  0x00007f73e7d0c5bb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0c5c1: data16 xchg %ax,%ax
  0x00007f73e7d0c5c4: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d0c5cc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0c5d0: sub    $0x18,%rsp
  0x00007f73e7d0c5d7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)

  0x00007f73e7d0c5dc: add    $0x10,%rsp
  0x00007f73e7d0c5e0: pop    %rbp
  0x00007f73e7d0c5e1: mov    0x108(%r15),%r10
  0x00007f73e7d0c5e8: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d0c5eb: retq   
  0x00007f73e7d0c5ec: hlt    
  0x00007f73e7d0c5ed: hlt    
  0x00007f73e7d0c5ee: hlt    
  0x00007f73e7d0c5ef: hlt    
  0x00007f73e7d0c5f0: hlt    
  0x00007f73e7d0c5f1: hlt    
  0x00007f73e7d0c5f2: hlt    
  0x00007f73e7d0c5f3: hlt    
  0x00007f73e7d0c5f4: hlt    
  0x00007f73e7d0c5f5: hlt    
  0x00007f73e7d0c5f6: hlt    
  0x00007f73e7d0c5f7: hlt    
  0x00007f73e7d0c5f8: hlt    
  0x00007f73e7d0c5f9: hlt    
  0x00007f73e7d0c5fa: hlt    
  0x00007f73e7d0c5fb: hlt    
  0x00007f73e7d0c5fc: hlt    
  0x00007f73e7d0c5fd: hlt    
  0x00007f73e7d0c5fe: hlt    
  0x00007f73e7d0c5ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d0c600: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d0c605: callq  0x00007f73e7d0c60a
  0x00007f73e7d0c60a: subq   $0x5,(%rsp)
  0x00007f73e7d0c60f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d0c614: hlt    
  0x00007f73e7d0c615: hlt    
  0x00007f73e7d0c616: hlt    
  0x00007f73e7d0c617: hlt    
Compiled method (c1)    9670   38   !   2       java.util.zip.ZipFile$Source::checkUTF8 (43 bytes)
 total in heap  [0x00007f73e07d7290,0x00007f73e07d7960] = 1744
 relocation     [0x00007f73e07d7408,0x00007f73e07d7460] = 88
 main code      [0x00007f73e07d7460,0x00007f73e07d7640] = 480
 stub code      [0x00007f73e07d7640,0x00007f73e07d7690] = 80
 oops           [0x00007f73e07d7690,0x00007f73e07d7698] = 8
 metadata       [0x00007f73e07d7698,0x00007f73e07d76b0] = 24
 scopes data    [0x00007f73e07d76b0,0x00007f73e07d7760] = 176
 scopes pcs     [0x00007f73e07d7760,0x00007f73e07d78e0] = 384
 dependencies   [0x00007f73e07d78e0,0x00007f73e07d78e8] = 8
 handler table  [0x00007f73e07d78e8,0x00007f73e07d7948] = 96
 nul chk table  [0x00007f73e07d7948,0x00007f73e07d7960] = 24
----------------------------------------------------------------------
java/util/zip/ZipFile$Source.checkUTF8([BII)V  [0x00007f73e07d7460, 0x00007f73e07d7690]  560 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080026f518} 'checkUTF8' '([BII)V' in 'java/util/zip/ZipFile$Source'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f73e07d7460: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d7467: push   %rbp
  0x00007f73e07d7468: sub    $0x60,%rsp
  0x00007f73e07d746c: movabs $0x7f73d3520798,%r8
  0x00007f73e07d7476: mov    0x18(%r8),%edi
  0x00007f73e07d747a: add    $0x8,%edi
  0x00007f73e07d747d: mov    %edi,0x18(%r8)
  0x00007f73e07d7481: and    $0x3ff8,%edi
  0x00007f73e07d7487: cmp    $0x0,%edi
  0x00007f73e07d748a: je     0x00007f73e07d757e  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@0 (line 1337)

  0x00007f73e07d7490: mov    %rdx,%r8
  0x00007f73e07d7493: add    %ecx,%r8d
  0x00007f73e07d7496: mov    %rdx,%rcx
  0x00007f73e07d7499: jmpq   0x00007f73e07d74e8  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@4 (line 1338)

  0x00007f73e07d749e: xchg   %ax,%ax
  0x00007f73e07d74a0: cmp    0xc(%rsi),%ecx     ; implicit exception: dispatches to 0x00007f73e07d759f
  0x00007f73e07d74a3: jae    0x00007f73e07d75a9
  0x00007f73e07d74a9: movslq %ecx,%rdx
  0x00007f73e07d74ac: movsbl 0x10(%rsi,%rdx,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@11 (line 1342)

  0x00007f73e07d74b1: cmp    $0x0,%edx
  0x00007f73e07d74b4: jl     0x00007f73e07d74f3  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@12 (line 1342)

  0x00007f73e07d74ba: inc    %ecx
  0x00007f73e07d74bc: movabs $0x7f73d3520798,%rdx
  0x00007f73e07d74c6: mov    0x1c(%rdx),%edi
  0x00007f73e07d74c9: add    $0x8,%edi
  0x00007f73e07d74cc: mov    %edi,0x1c(%rdx)
  0x00007f73e07d74cf: and    $0x1fff8,%edi
  0x00007f73e07d74d5: cmp    $0x0,%edi
  0x00007f73e07d74d8: je     0x00007f73e07d75b7  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@30 (line 1346)

  0x00007f73e07d74de: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@30 (line 1346)

  0x00007f73e07d74e5: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@30 (line 1346)
                                                ;   {poll}
  0x00007f73e07d74e8: cmp    %r8d,%ecx
  0x00007f73e07d74eb: jge    0x00007f73e07d751c
  0x00007f73e07d74f1: jmp    0x00007f73e07d74a0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@6 (line 1338)

  0x00007f73e07d74f3: movabs $0xffe1f4f0,%rdx   ;   {oop(a 'java/lang/Class'{0x00000000ffe1f4f0} = 'java/util/zip/ZipCoder')}
  0x00007f73e07d74fd: mov    0x74(%rdx),%edi    ;*getstatic utf8 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::toStringUTF8@0 (line 120)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@20 (line 1343)

  0x00007f73e07d7500: sub    %ecx,%r8d
  0x00007f73e07d7503: mov    %rsi,%rdx
  0x00007f73e07d7506: mov    %rdi,%rsi          ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::toStringUTF8@6 (line 120)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@20 (line 1343)

  0x00007f73e07d7509: nopl   0x0(%rax)
  0x00007f73e07d750d: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d7517: callq  0x00007f73e0269380  ; ImmutableOopMap{}
                                                ;*invokevirtual toString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipCoder::toStringUTF8@6 (line 120)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@20 (line 1343)
                                                ;   {virtual_call}
  0x00007f73e07d751c: add    $0x60,%rsp
  0x00007f73e07d7520: pop    %rbp
  0x00007f73e07d7521: mov    0x108(%r15),%r10
  0x00007f73e07d7528: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d752b: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@42 (line 1351)

  0x00007f73e07d752c: mov    0x428(%r15),%rax
  0x00007f73e07d7533: xor    %r10,%r10
  0x00007f73e07d7536: mov    %r10,0x428(%r15)
  0x00007f73e07d753d: xor    %r10,%r10
  0x00007f73e07d7540: mov    %r10,0x430(%r15)
  0x00007f73e07d7547: nop
  0x00007f73e07d7548: jmpq   0x00007f73e07d75e7  ;   {no_reloc}
  0x00007f73e07d754d: add    %al,(%rax)
  0x00007f73e07d754f: add    %al,(%rax)
  0x00007f73e07d7551: add    %ch,%cl
  0x00007f73e07d7553: (bad)  
  0x00007f73e07d7554: add    %al,(%rax)
  0x00007f73e07d7556: add    %cl,-0x46(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::zerror@0 (line 1581)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@39 (line 1349)
                                                ;   {oop("invalid CEN header (bad entry name)"{0x00000000fff5d688})}
  0x00007f73e07d7559: mov    %dl,%dh
  0x00007f73e07d755b: cmc    
  0x00007f73e07d755c: incl   (%rax)
  0x00007f73e07d755e: add    %al,(%rax)
  0x00007f73e07d7560: add    %cl,-0x75(%rax)
  0x00007f73e07d7563: lock mov %rax,0x50(%rsp)  ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::zerror@5 (line 1581)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@39 (line 1349)

  0x00007f73e07d7569: nopw   0x0(%rax,%rax,1)
  0x00007f73e07d756f: callq  0x00007f73e0269100  ; ImmutableOopMap{[80]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::zerror@5 (line 1581)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@39 (line 1349)
                                                ;   {optimized virtual_call}
  0x00007f73e07d7574: mov    0x50(%rsp),%rax
  0x00007f73e07d7579: jmpq   0x00007f73e07d7629
  0x00007f73e07d757e: movabs $0x80026f518,%r10  ;   {metadata({method} {0x000000080026f518} 'checkUTF8' '([BII)V' in 'java/util/zip/ZipFile$Source')}
  0x00007f73e07d7588: mov    %r10,0x8(%rsp)
  0x00007f73e07d758d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d7595: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@-1 (line 1337)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d759a: jmpq   0x00007f73e07d7490
  0x00007f73e07d759f: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@11 (line 1342)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d75a4: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@11 (line 1342)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d75a9: mov    %rcx,(%rsp)
  0x00007f73e07d75ad: mov    %rsi,0x8(%rsp)
  0x00007f73e07d75b2: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@11 (line 1342)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d75b7: movabs $0x80026f518,%r10  ;   {metadata({method} {0x000000080026f518} 'checkUTF8' '([BII)V' in 'java/util/zip/ZipFile$Source')}
  0x00007f73e07d75c1: mov    %r10,0x8(%rsp)
  0x00007f73e07d75c6: movq   $0x1e,(%rsp)
  0x00007f73e07d75ce: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@30 (line 1346)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d75d3: jmpq   0x00007f73e07d74de
  0x00007f73e07d75d8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f73e07d75e2: mov    $0xa050f00,%eax
  0x00007f73e07d75e7: callq  0x00007f73e0333e00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::zerror@0 (line 1581)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@39 (line 1349)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07d75ec: jmpq   0x00007f73e07d7548
  0x00007f73e07d75f1: mov    %rdx,%rdx
  0x00007f73e07d75f4: callq  0x00007f73e0330d80  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::zerror@0 (line 1581)
                                                ; - java.util.zip.ZipFile$Source::checkUTF8@39 (line 1349)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00007f73e07d75f9: jmpq   0x00007f73e07d7557
  0x00007f73e07d75fe: nop
  0x00007f73e07d75ff: nop
  0x00007f73e07d7600: mov    0x428(%r15),%rax
  0x00007f73e07d7607: movabs $0x0,%r10
  0x00007f73e07d7611: mov    %r10,0x428(%r15)
  0x00007f73e07d7618: movabs $0x0,%r10
  0x00007f73e07d7622: mov    %r10,0x430(%r15)
  0x00007f73e07d7629: add    $0x60,%rsp
  0x00007f73e07d762d: pop    %rbp
  0x00007f73e07d762e: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07d7633: hlt    
  0x00007f73e07d7634: hlt    
  0x00007f73e07d7635: hlt    
  0x00007f73e07d7636: hlt    
  0x00007f73e07d7637: hlt    
  0x00007f73e07d7638: hlt    
  0x00007f73e07d7639: hlt    
  0x00007f73e07d763a: hlt    
  0x00007f73e07d763b: hlt    
  0x00007f73e07d763c: hlt    
  0x00007f73e07d763d: hlt    
  0x00007f73e07d763e: hlt    
  0x00007f73e07d763f: hlt    
[Stub Code]
  0x00007f73e07d7640: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07d7645: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d764f: jmpq   0x00007f73e07d764f  ;   {runtime_call}
  0x00007f73e07d7654: nop
  0x00007f73e07d7655: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07d765f: jmpq   0x00007f73e07d765f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07d7664: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07d7669: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d7673: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d7677: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d767c: hlt    
[Deopt Handler Code]
  0x00007f73e07d767d: movabs $0x7f73e07d767d,%r10  ;   {section_word}
  0x00007f73e07d7687: push   %r10
  0x00007f73e07d7689: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d768e: hlt    
  0x00007f73e07d768f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 133 
ImmutableOopMap{}pc offsets: 188 
ImmutableOopMap{[80]=Oop }pc offsets: 276 
ImmutableOopMap{rsi=Oop }pc offsets: 314 324 329 343 371 
ImmutableOopMap{}pc offsets: 396 409 ----------------------------------------------------------------------
java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V  [0x00007f73e7d0ca40, 0x00007f73e7d0cc50]  528 bytes
[Entry Point]
  # {method} {0x00000008003b66f0} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007f73e7d0ca40: mov    0x8(%rsi),%r10d
  0x00007f73e7d0ca44: shl    $0x3,%r10
  0x00007f73e7d0ca48: movabs $0x800000000,%r12
  0x00007f73e7d0ca52: add    %r12,%r10
  0x00007f73e7d0ca55: xor    %r12,%r12
  0x00007f73e7d0ca58: cmp    %r10,%rax
  0x00007f73e7d0ca5b: je     0x00007f73e7d0ca68
  0x00007f73e7d0ca61: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0ca66: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0ca68: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0ca6f: push   %rbp
  0x00007f73e7d0ca70: mov    %rsp,%rbp
  0x00007f73e7d0ca73: sub    $0x50,%rsp
  0x00007f73e7d0ca77: mov    %r9,(%rsp)
  0x00007f73e7d0ca7b: mov    %r8,%r9
  0x00007f73e7d0ca7e: mov    %rcx,0x18(%rsp)
  0x00007f73e7d0ca83: cmp    $0x0,%rcx
  0x00007f73e7d0ca87: lea    0x18(%rsp),%r8
  0x00007f73e7d0ca8c: cmove  0x18(%rsp),%r8
  0x00007f73e7d0ca92: mov    %rdx,%rcx
  0x00007f73e7d0ca95: mov    %rsi,0x8(%rsp)
  0x00007f73e7d0ca9a: cmp    $0x0,%rsi
  0x00007f73e7d0ca9e: lea    0x8(%rsp),%rdx
  0x00007f73e7d0caa3: cmove  0x8(%rsp),%rdx
  0x00007f73e7d0caa9: movabs $0xffe336c8,%r14   ;   {oop(a 'java/lang/Class'{0x00000000ffe336c8} = 'java/lang/System')}
  0x00007f73e7d0cab3: mov    %r14,0x38(%rsp)
  0x00007f73e7d0cab8: lea    0x38(%rsp),%r14
  0x00007f73e7d0cabd: mov    %r14,%rsi          ; ImmutableOopMap{[24]=Oop [8]=Oop [56]=Oop }
  0x00007f73e7d0cac0: vzeroupper 
  0x00007f73e7d0cac3: movabs $0x7f73e7d0cac0,%r10  ;   {internal_word}
  0x00007f73e7d0cacd: mov    %r10,0x330(%r15)
  0x00007f73e7d0cad4: mov    %rsp,0x328(%r15)
  0x00007f73e7d0cadb: cmpb   $0x0,0x16e51755(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0cae2: je     0x00007f73e7d0cb26
  0x00007f73e7d0cae8: push   %rsi
  0x00007f73e7d0cae9: push   %rdx
  0x00007f73e7d0caea: push   %rcx
  0x00007f73e7d0caeb: push   %r8
  0x00007f73e7d0caed: push   %r9
  0x00007f73e7d0caef: movabs $0x8003b66f0,%rsi  ;   {metadata({method} {0x00000008003b66f0} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00007f73e7d0caf9: mov    %r15,%rdi
  0x00007f73e7d0cafc: test   $0xf,%esp
  0x00007f73e7d0cb02: je     0x00007f73e7d0cb1a
  0x00007f73e7d0cb08: sub    $0x8,%rsp
  0x00007f73e7d0cb0c: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0cb11: add    $0x8,%rsp
  0x00007f73e7d0cb15: jmpq   0x00007f73e7d0cb1f
  0x00007f73e7d0cb1a: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0cb1f: pop    %r9
  0x00007f73e7d0cb21: pop    %r8
  0x00007f73e7d0cb23: pop    %rcx
  0x00007f73e7d0cb24: pop    %rdx
  0x00007f73e7d0cb25: pop    %rsi
  0x00007f73e7d0cb26: lea    0x348(%r15),%rdi
  0x00007f73e7d0cb2d: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d0cb38: callq  0x00007f73fe032fc0  ;   {runtime_call JVM_ArrayCopy}
  0x00007f73e7d0cb3d: vzeroupper 
  0x00007f73e7d0cb40: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d0cb4b: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d0cb51: testb  $0x8,0x108(%r15)
  0x00007f73e7d0cb59: jne    0x00007f73e7d0cb70
  0x00007f73e7d0cb5f: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d0cb6a: je     0x00007f73e7d0cb8c
  0x00007f73e7d0cb70: vzeroupper 
  0x00007f73e7d0cb73: mov    %r15,%rdi
  0x00007f73e7d0cb76: mov    %rsp,%r12
  0x00007f73e7d0cb79: sub    $0x0,%rsp
  0x00007f73e7d0cb7d: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0cb81: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d0cb86: mov    %r12,%rsp
  0x00007f73e7d0cb89: xor    %r12,%r12
  0x00007f73e7d0cb8c: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d0cb97: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d0cba2: je     0x00007f73e7d0cc30
  0x00007f73e7d0cba8: cmpb   $0x0,0x16e51688(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0cbaf: je     0x00007f73e7d0cbe5
  0x00007f73e7d0cbb5: movabs $0x8003b66f0,%rsi  ;   {metadata({method} {0x00000008003b66f0} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00007f73e7d0cbbf: mov    %r15,%rdi
  0x00007f73e7d0cbc2: test   $0xf,%esp
  0x00007f73e7d0cbc8: je     0x00007f73e7d0cbe0
  0x00007f73e7d0cbce: sub    $0x8,%rsp
  0x00007f73e7d0cbd2: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0cbd7: add    $0x8,%rsp
  0x00007f73e7d0cbdb: jmpq   0x00007f73e7d0cbe5
  0x00007f73e7d0cbe0: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0cbe5: movabs $0x0,%r10
  0x00007f73e7d0cbef: mov    %r10,0x328(%r15)
  0x00007f73e7d0cbf6: movabs $0x0,%r10
  0x00007f73e7d0cc00: mov    %r10,0x330(%r15)
  0x00007f73e7d0cc07: vzeroupper 
  0x00007f73e7d0cc0a: mov    0xe0(%r15),%rcx
  0x00007f73e7d0cc11: movl   $0x0,0x100(%rcx)
  0x00007f73e7d0cc1b: leaveq 
  0x00007f73e7d0cc1c: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d0cc24: jne    0x00007f73e7d0cc2b
  0x00007f73e7d0cc2a: retq   
  0x00007f73e7d0cc2b: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d0cc30: vzeroupper 
  0x00007f73e7d0cc33: mov    %rsp,%r12
  0x00007f73e7d0cc36: sub    $0x0,%rsp
  0x00007f73e7d0cc3a: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0cc3e: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d0cc43: mov    %r12,%rsp
  0x00007f73e7d0cc46: xor    %r12,%r12
  0x00007f73e7d0cc49: jmpq   0x00007f73e7d0cba8
  0x00007f73e7d0cc4e: hlt    
  0x00007f73e7d0cc4f: hlt    
Compiled method (c1)   11260   39       2       java.util.zip.ZipFile$Source::hashN (26 bytes)
 total in heap  [0x00007f73e07d7990,0x00007f73e07d7e08] = 1144
 relocation     [0x00007f73e07d7b08,0x00007f73e07d7b38] = 48
 main code      [0x00007f73e07d7b40,0x00007f73e07d7c80] = 320
 stub code      [0x00007f73e07d7c80,0x00007f73e07d7cb0] = 48
 metadata       [0x00007f73e07d7cb0,0x00007f73e07d7cb8] = 8
 scopes data    [0x00007f73e07d7cb8,0x00007f73e07d7d08] = 80
 scopes pcs     [0x00007f73e07d7d08,0x00007f73e07d7de8] = 224
 dependencies   [0x00007f73e07d7de8,0x00007f73e07d7df0] = 8
 nul chk table  [0x00007f73e07d7df0,0x00007f73e07d7e08] = 24
----------------------------------------------------------------------
java/util/zip/ZipFile$Source.hashN([BII)I  [0x00007f73e07d7b40, 0x00007f73e07d7cb0]  368 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080026f5c8} 'hashN' '([BII)I' in 'java/util/zip/ZipFile$Source'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07d7b40: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d7b47: push   %rbp
  0x00007f73e07d7b48: sub    $0x30,%rsp
  0x00007f73e07d7b4c: movabs $0x7f73d35207e8,%rax
  0x00007f73e07d7b56: mov    0x18(%rax),%edi
  0x00007f73e07d7b59: add    $0x8,%edi
  0x00007f73e07d7b5c: mov    %edi,0x18(%rax)
  0x00007f73e07d7b5f: and    $0x3ff8,%edi
  0x00007f73e07d7b65: cmp    $0x0,%edi
  0x00007f73e07d7b68: je     0x00007f73e07d7be4  ;*iconst_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@0 (line 1362)

  0x00007f73e07d7b6e: mov    $0x1,%eax
  0x00007f73e07d7b73: jmpq   0x00007f73e07d7bca  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@2 (line 1363)

  0x00007f73e07d7b78: mov    %rdx,%rbx
  0x00007f73e07d7b7b: inc    %ebx
  0x00007f73e07d7b7d: cmp    0xc(%rsi),%edx     ; implicit exception: dispatches to 0x00007f73e07d7c05
  0x00007f73e07d7b80: jae    0x00007f73e07d7c0f
  0x00007f73e07d7b86: movslq %edx,%rdx
  0x00007f73e07d7b89: movsbl 0x10(%rsi,%rdx,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)

  0x00007f73e07d7b8e: mov    %rax,%rcx
  0x00007f73e07d7b91: shl    $0x5,%eax
  0x00007f73e07d7b94: sub    %ecx,%eax
  0x00007f73e07d7b96: add    %edx,%eax
  0x00007f73e07d7b98: movabs $0x7f73d35207e8,%rdx
  0x00007f73e07d7ba2: mov    0x1c(%rdx),%ecx
  0x00007f73e07d7ba5: add    $0x8,%ecx
  0x00007f73e07d7ba8: mov    %ecx,0x1c(%rdx)
  0x00007f73e07d7bab: and    $0x1fff8,%ecx
  0x00007f73e07d7bb1: cmp    $0x0,%ecx
  0x00007f73e07d7bb4: je     0x00007f73e07d7c1d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1364)

  0x00007f73e07d7bba: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1364)

  0x00007f73e07d7bc1: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07d7bc4: mov    %rdi,%rcx
  0x00007f73e07d7bc7: mov    %rbx,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1364)

  0x00007f73e07d7bca: mov    %rcx,%rdi
  0x00007f73e07d7bcd: dec    %edi
  0x00007f73e07d7bcf: cmp    $0x0,%ecx
  0x00007f73e07d7bd2: jg     0x00007f73e07d7b78  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@6 (line 1363)

  0x00007f73e07d7bd4: add    $0x30,%rsp
  0x00007f73e07d7bd8: pop    %rbp
  0x00007f73e07d7bd9: mov    0x108(%r15),%r10
  0x00007f73e07d7be0: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d7be3: retq   
  0x00007f73e07d7be4: movabs $0x80026f5c8,%r10  ;   {metadata({method} {0x000000080026f5c8} 'hashN' '([BII)I' in 'java/util/zip/ZipFile$Source')}
  0x00007f73e07d7bee: mov    %r10,0x8(%rsp)
  0x00007f73e07d7bf3: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d7bfb: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile$Source::hashN@-1 (line 1362)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d7c00: jmpq   0x00007f73e07d7b6e
  0x00007f73e07d7c05: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d7c0a: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d7c0f: mov    %rdx,(%rsp)
  0x00007f73e07d7c13: mov    %rsi,0x8(%rsp)
  0x00007f73e07d7c18: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d7c1d: movabs $0x80026f5c8,%r10  ;   {metadata({method} {0x000000080026f5c8} 'hashN' '([BII)I' in 'java/util/zip/ZipFile$Source')}
  0x00007f73e07d7c27: mov    %r10,0x8(%rsp)
  0x00007f73e07d7c2c: movq   $0x15,(%rsp)
  0x00007f73e07d7c34: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1364)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d7c39: jmpq   0x00007f73e07d7bba
  0x00007f73e07d7c3e: nop
  0x00007f73e07d7c3f: nop
  0x00007f73e07d7c40: mov    0x428(%r15),%rax
  0x00007f73e07d7c47: movabs $0x0,%r10
  0x00007f73e07d7c51: mov    %r10,0x428(%r15)
  0x00007f73e07d7c58: movabs $0x0,%r10
  0x00007f73e07d7c62: mov    %r10,0x430(%r15)
  0x00007f73e07d7c69: add    $0x30,%rsp
  0x00007f73e07d7c6d: pop    %rbp
  0x00007f73e07d7c6e: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07d7c73: hlt    
  0x00007f73e07d7c74: hlt    
  0x00007f73e07d7c75: hlt    
  0x00007f73e07d7c76: hlt    
  0x00007f73e07d7c77: hlt    
  0x00007f73e07d7c78: hlt    
  0x00007f73e07d7c79: hlt    
  0x00007f73e07d7c7a: hlt    
  0x00007f73e07d7c7b: hlt    
  0x00007f73e07d7c7c: hlt    
  0x00007f73e07d7c7d: hlt    
  0x00007f73e07d7c7e: hlt    
  0x00007f73e07d7c7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07d7c80: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07d7c85: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d7c8f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d7c93: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d7c98: hlt    
[Deopt Handler Code]
  0x00007f73e07d7c99: movabs $0x7f73e07d7c99,%r10  ;   {section_word}
  0x00007f73e07d7ca3: push   %r10
  0x00007f73e07d7ca5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d7caa: hlt    
  0x00007f73e07d7cab: hlt    
  0x00007f73e07d7cac: hlt    
  0x00007f73e07d7cad: hlt    
  0x00007f73e07d7cae: hlt    
  0x00007f73e07d7caf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 129 192 202 207 221 249 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0ce20, 0x00007f73e7d0ce40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3558d70} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x00007f73e7d0ce20: mov    0x8(%rsp),%rbx
  0x00007f73e7d0ce25: mov    0x24(%rbx),%ebx
  0x00007f73e7d0ce28: mov    0x10(%rbx),%rbx
  0x00007f73e7d0ce2c: test   %rbx,%rbx
  0x00007f73e7d0ce2f: je     0x00007f73e7d0ce38
  0x00007f73e7d0ce35: jmpq   *0x38(%rbx)
  0x00007f73e7d0ce38: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0ce3d: hlt    
  0x00007f73e7d0ce3e: hlt    
  0x00007f73e7d0ce3f: hlt    
Compiled method (c1)   12079   66       3       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x00007f73e07d7e90,0x00007f73e07d84a8] = 1560
 relocation     [0x00007f73e07d8008,0x00007f73e07d8048] = 64
 main code      [0x00007f73e07d8060,0x00007f73e07d8280] = 544
 stub code      [0x00007f73e07d8280,0x00007f73e07d82b0] = 48
 metadata       [0x00007f73e07d82b0,0x00007f73e07d82b8] = 8
 scopes data    [0x00007f73e07d82b8,0x00007f73e07d8338] = 128
 scopes pcs     [0x00007f73e07d8338,0x00007f73e07d8488] = 336
 dependencies   [0x00007f73e07d8488,0x00007f73e07d8490] = 8
 nul chk table  [0x00007f73e07d8490,0x00007f73e07d84a8] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x00007f73e07d8060, 0x00007f73e07d82b0]  592 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07d8060: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d8067: push   %rbp
  0x00007f73e07d8068: sub    $0x30,%rsp
  0x00007f73e07d806c: movabs $0x7f73d35144b0,%rax  ;   {metadata(method data for {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d8076: mov    0x104(%rax),%edi
  0x00007f73e07d807c: add    $0x8,%edi
  0x00007f73e07d807f: mov    %edi,0x104(%rax)
  0x00007f73e07d8085: and    $0x1ff8,%edi
  0x00007f73e07d808b: cmp    $0x0,%edi
  0x00007f73e07d808e: je     0x00007f73e07d81f1  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@0 (line 94)

  0x00007f73e07d8094: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ; implicit exception: dispatches to 0x00007f73e07d8212
  0x00007f73e07d8097: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ; implicit exception: dispatches to 0x00007f73e07d8217
  0x00007f73e07d809a: cmp    %edi,%eax
  0x00007f73e07d809c: movabs $0x7f73d35144b0,%rdi  ;   {metadata(method data for {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d80a6: movabs $0x140,%rbx
  0x00007f73e07d80b0: jne    0x00007f73e07d80c0
  0x00007f73e07d80b6: movabs $0x150,%rbx
  0x00007f73e07d80c0: mov    (%rdi,%rbx,1),%rcx
  0x00007f73e07d80c4: lea    0x1(%rcx),%rcx
  0x00007f73e07d80c8: mov    %rcx,(%rdi,%rbx,1)
  0x00007f73e07d80cc: jne    0x00007f73e07d81dc  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@4 (line 94)

  0x00007f73e07d80d2: mov    $0x0,%edi
  0x00007f73e07d80d7: jmpq   0x00007f73e07d8175  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@9 (line 95)

  0x00007f73e07d80dc: nopl   0x0(%rax)
  0x00007f73e07d80e0: movslq %edi,%rbx
  0x00007f73e07d80e3: movsbl 0x10(%rsi,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x00007f73e07d80e8: cmp    0xc(%rdx),%edi
  0x00007f73e07d80eb: jae    0x00007f73e07d821c
  0x00007f73e07d80f1: movslq %edi,%rcx
  0x00007f73e07d80f4: movsbl 0x10(%rdx,%rcx,1),%ecx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e07d80f9: cmp    %ecx,%ebx
  0x00007f73e07d80fb: movabs $0x7f73d35144b0,%rbx  ;   {metadata(method data for {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d8105: movabs $0x190,%rcx
  0x00007f73e07d810f: jne    0x00007f73e07d811f
  0x00007f73e07d8115: movabs $0x180,%rcx
  0x00007f73e07d811f: mov    (%rbx,%rcx,1),%r8
  0x00007f73e07d8123: lea    0x1(%r8),%r8
  0x00007f73e07d8127: mov    %r8,(%rbx,%rcx,1)
  0x00007f73e07d812b: jne    0x00007f73e07d81b2  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007f73e07d8131: inc    %edi
  0x00007f73e07d8133: movabs $0x7f73d35144b0,%rbx  ;   {metadata(method data for {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d813d: mov    0x108(%rbx),%ecx
  0x00007f73e07d8143: add    $0x8,%ecx
  0x00007f73e07d8146: mov    %ecx,0x108(%rbx)
  0x00007f73e07d814c: and    $0xfff8,%ecx
  0x00007f73e07d8152: cmp    $0x0,%ecx
  0x00007f73e07d8155: je     0x00007f73e07d822a  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007f73e07d815b: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007f73e07d8162: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07d8165: movabs $0x7f73d35144b0,%rbx  ;   {metadata(method data for {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d816f: incl   0x1a0(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007f73e07d8175: cmp    %eax,%edi
  0x00007f73e07d8177: movabs $0x7f73d35144b0,%rbx  ;   {metadata(method data for {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d8181: movabs $0x160,%rcx
  0x00007f73e07d818b: jge    0x00007f73e07d819b
  0x00007f73e07d8191: movabs $0x170,%rcx
  0x00007f73e07d819b: mov    (%rbx,%rcx,1),%r8
  0x00007f73e07d819f: lea    0x1(%r8),%r8
  0x00007f73e07d81a3: mov    %r8,(%rbx,%rcx,1)
  0x00007f73e07d81a7: jge    0x00007f73e07d81c7
  0x00007f73e07d81ad: jmpq   0x00007f73e07d80e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12 (line 95)

  0x00007f73e07d81b2: mov    $0x0,%eax
  0x00007f73e07d81b7: add    $0x30,%rsp
  0x00007f73e07d81bb: pop    %rbp
  0x00007f73e07d81bc: mov    0x108(%r15),%r10
  0x00007f73e07d81c3: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d81c6: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@25 (line 97)

  0x00007f73e07d81c7: mov    $0x1,%eax
  0x00007f73e07d81cc: add    $0x30,%rsp
  0x00007f73e07d81d0: pop    %rbp
  0x00007f73e07d81d1: mov    0x108(%r15),%r10
  0x00007f73e07d81d8: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d81db: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@33 (line 100)

  0x00007f73e07d81dc: mov    $0x0,%eax
  0x00007f73e07d81e1: add    $0x30,%rsp
  0x00007f73e07d81e5: pop    %rbp
  0x00007f73e07d81e6: mov    0x108(%r15),%r10
  0x00007f73e07d81ed: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d81f0: retq   
  0x00007f73e07d81f1: movabs $0x80033e4a8,%r10  ;   {metadata({method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d81fb: mov    %r10,0x8(%rsp)
  0x00007f73e07d8200: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d8208: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1 (line 94)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d820d: jmpq   0x00007f73e07d8094
  0x00007f73e07d8212: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d8217: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d821c: mov    %rdi,(%rsp)
  0x00007f73e07d8220: mov    %rdx,0x8(%rsp)
  0x00007f73e07d8225: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d822a: movabs $0x80033e4a8,%r10  ;   {metadata({method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07d8234: mov    %r10,0x8(%rsp)
  0x00007f73e07d8239: movq   $0x1d,(%rsp)
  0x00007f73e07d8241: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d8246: jmpq   0x00007f73e07d815b
  0x00007f73e07d824b: nop
  0x00007f73e07d824c: nop
  0x00007f73e07d824d: mov    0x428(%r15),%rax
  0x00007f73e07d8254: movabs $0x0,%r10
  0x00007f73e07d825e: mov    %r10,0x428(%r15)
  0x00007f73e07d8265: movabs $0x0,%r10
  0x00007f73e07d826f: mov    %r10,0x430(%r15)
  0x00007f73e07d8276: add    $0x30,%rsp
  0x00007f73e07d827a: pop    %rbp
  0x00007f73e07d827b: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
[Stub Code]
  0x00007f73e07d8280: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07d8285: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d828f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d8293: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d8298: hlt    
[Deopt Handler Code]
  0x00007f73e07d8299: movabs $0x7f73e07d8299,%r10  ;   {section_word}
  0x00007f73e07d82a3: push   %r10
  0x00007f73e07d82a5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d82aa: hlt    
  0x00007f73e07d82ab: hlt    
  0x00007f73e07d82ac: hlt    
  0x00007f73e07d82ad: hlt    
  0x00007f73e07d82ae: hlt    
  0x00007f73e07d82af: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 258 429 439 444 458 486 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToVirtual(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0d020, 0x00007f73e7d0d058]  56 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d355a328} 'linkToVirtual' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0d020: mov    0x8(%rsi),%r10d
  0x00007f73e7d0d024: shl    $0x3,%r10
  0x00007f73e7d0d028: movabs $0x800000000,%r12
  0x00007f73e7d0d032: add    %r12,%r10
  0x00007f73e7d0d035: xor    %r12,%r12
  0x00007f73e7d0d038: mov    0x10(%rdx),%r11
  0x00007f73e7d0d03c: mov    0x1d0(%r10,%r11,8),%rbx
  0x00007f73e7d0d044: test   %rbx,%rbx
  0x00007f73e7d0d047: je     0x00007f73e7d0d050
  0x00007f73e7d0d04d: jmpq   *0x38(%rbx)
  0x00007f73e7d0d050: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0d055: hlt    
  0x00007f73e7d0d056: hlt    
  0x00007f73e7d0d057: hlt    
Compiled method (c1)   13258   36       2       java.util.zip.ZipUtils::SH (21 bytes)
 total in heap  [0x00007f73e07d8510,0x00007f73e07d88e8] = 984
 relocation     [0x00007f73e07d8688,0x00007f73e07d86b0] = 40
 main code      [0x00007f73e07d86c0,0x00007f73e07d87c0] = 256
 stub code      [0x00007f73e07d87c0,0x00007f73e07d87f0] = 48
 metadata       [0x00007f73e07d87f0,0x00007f73e07d87f8] = 8
 scopes data    [0x00007f73e07d87f8,0x00007f73e07d8828] = 48
 scopes pcs     [0x00007f73e07d8828,0x00007f73e07d88c8] = 160
 dependencies   [0x00007f73e07d88c8,0x00007f73e07d88d0] = 8
 nul chk table  [0x00007f73e07d88d0,0x00007f73e07d88e8] = 24
----------------------------------------------------------------------
java/util/zip/ZipUtils.SH([BI)I  [0x00007f73e07d86c0, 0x00007f73e07d87f0]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000800225720} 'SH' '([BI)I' in 'java/util/zip/ZipUtils'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07d86c0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d86c7: push   %rbp
  0x00007f73e07d86c8: sub    $0x30,%rsp
  0x00007f73e07d86cc: movabs $0x7f73d3520338,%rax
  0x00007f73e07d86d6: mov    0x18(%rax),%edi
  0x00007f73e07d86d9: add    $0x8,%edi
  0x00007f73e07d86dc: mov    %edi,0x18(%rax)
  0x00007f73e07d86df: and    $0x3ff8,%edi
  0x00007f73e07d86e5: cmp    $0x0,%edi
  0x00007f73e07d86e8: je     0x00007f73e07d8734  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@0 (line 210)

  0x00007f73e07d86ee: cmp    0xc(%rsi),%edx     ; implicit exception: dispatches to 0x00007f73e07d8752
  0x00007f73e07d86f1: jae    0x00007f73e07d875c
  0x00007f73e07d86f7: movslq %edx,%rax
  0x00007f73e07d86fa: movsbl 0x10(%rsi,%rax,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)

  0x00007f73e07d86ff: inc    %edx
  0x00007f73e07d8701: cmp    0xc(%rsi),%edx
  0x00007f73e07d8704: jae    0x00007f73e07d876a
  0x00007f73e07d870a: movslq %edx,%rdx
  0x00007f73e07d870d: movsbl 0x10(%rsi,%rdx,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)

  0x00007f73e07d8712: and    $0xff,%eax
  0x00007f73e07d8718: and    $0xff,%esi
  0x00007f73e07d871e: shl    $0x8,%esi
  0x00007f73e07d8721: or     %rsi,%rax
  0x00007f73e07d8724: add    $0x30,%rsp
  0x00007f73e07d8728: pop    %rbp
  0x00007f73e07d8729: mov    0x108(%r15),%r10
  0x00007f73e07d8730: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07d8733: retq   
  0x00007f73e07d8734: movabs $0x800225720,%r10  ;   {metadata({method} {0x0000000800225720} 'SH' '([BI)I' in 'java/util/zip/ZipUtils')}
  0x00007f73e07d873e: mov    %r10,0x8(%rsp)
  0x00007f73e07d8743: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07d874b: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::SH@-1 (line 210)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07d8750: jmp    0x00007f73e07d86ee
  0x00007f73e07d8752: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d8757: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07d875c: mov    %rdx,(%rsp)
  0x00007f73e07d8760: mov    %rsi,0x8(%rsp)
  0x00007f73e07d8765: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d876a: mov    %rdx,(%rsp)
  0x00007f73e07d876e: mov    %rsi,0x8(%rsp)
  0x00007f73e07d8773: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07d8778: nop
  0x00007f73e07d8779: nop
  0x00007f73e07d877a: mov    0x428(%r15),%rax
  0x00007f73e07d8781: movabs $0x0,%r10
  0x00007f73e07d878b: mov    %r10,0x428(%r15)
  0x00007f73e07d8792: movabs $0x0,%r10
  0x00007f73e07d879c: mov    %r10,0x430(%r15)
  0x00007f73e07d87a3: add    $0x30,%rsp
  0x00007f73e07d87a7: pop    %rbp
  0x00007f73e07d87a8: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07d87ad: hlt    
  0x00007f73e07d87ae: hlt    
  0x00007f73e07d87af: hlt    
  0x00007f73e07d87b0: hlt    
  0x00007f73e07d87b1: hlt    
  0x00007f73e07d87b2: hlt    
  0x00007f73e07d87b3: hlt    
  0x00007f73e07d87b4: hlt    
  0x00007f73e07d87b5: hlt    
  0x00007f73e07d87b6: hlt    
  0x00007f73e07d87b7: hlt    
  0x00007f73e07d87b8: hlt    
  0x00007f73e07d87b9: hlt    
  0x00007f73e07d87ba: hlt    
  0x00007f73e07d87bb: hlt    
  0x00007f73e07d87bc: hlt    
  0x00007f73e07d87bd: hlt    
  0x00007f73e07d87be: hlt    
  0x00007f73e07d87bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07d87c0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07d87c5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07d87cf: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07d87d3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07d87d8: hlt    
[Deopt Handler Code]
  0x00007f73e07d87d9: movabs $0x7f73e07d87d9,%r10  ;   {section_word}
  0x00007f73e07d87e3: push   %r10
  0x00007f73e07d87e5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07d87ea: hlt    
  0x00007f73e07d87eb: hlt    
  0x00007f73e07d87ec: hlt    
  0x00007f73e07d87ed: hlt    
  0x00007f73e07d87ee: hlt    
  0x00007f73e07d87ef: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 144 151 156 170 184 Compiled method (c2)   13872   80       4       java.lang.String::length (11 bytes)
 total in heap  [0x00007f73e7d0d290,0x00007f73e7d0d558] = 712
 relocation     [0x00007f73e7d0d408,0x00007f73e7d0d418] = 16
 main code      [0x00007f73e7d0d420,0x00007f73e7d0d4a0] = 128
 stub code      [0x00007f73e7d0d4a0,0x00007f73e7d0d4b8] = 24
 metadata       [0x00007f73e7d0d4b8,0x00007f73e7d0d4c0] = 8
 scopes data    [0x00007f73e7d0d4c0,0x00007f73e7d0d4e0] = 32
 scopes pcs     [0x00007f73e7d0d4e0,0x00007f73e7d0d540] = 96
 dependencies   [0x00007f73e7d0d540,0x00007f73e7d0d548] = 8
 nul chk table  [0x00007f73e7d0d548,0x00007f73e7d0d558] = 16
----------------------------------------------------------------------
java/lang/String.length()I  [0x00007f73e7d0d420, 0x00007f73e7d0d4b8]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d0d420: mov    0x8(%rsi),%r10d
  0x00007f73e7d0d424: shl    $0x3,%r10
  0x00007f73e7d0d428: movabs $0x800000000,%r12
  0x00007f73e7d0d432: add    %r12,%r10
  0x00007f73e7d0d435: xor    %r12,%r12
  0x00007f73e7d0d438: cmp    %r10,%rax
  0x00007f73e7d0d43b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0d441: data16 xchg %ax,%ax
  0x00007f73e7d0d444: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d0d44c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0d450: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0d457: push   %rbp
  0x00007f73e7d0d458: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)

  0x00007f73e7d0d45c: mov    0xc(%rsi),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)

  0x00007f73e7d0d460: mov    0xc(%r11),%eax     ; implicit exception: dispatches to 0x00007f73e7d0d47a
  0x00007f73e7d0d464: movsbl 0x14(%rsi),%ecx
  0x00007f73e7d0d468: sar    %cl,%eax           ;*ishr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@9 (line 658)

  0x00007f73e7d0d46a: add    $0x10,%rsp
  0x00007f73e7d0d46e: pop    %rbp
  0x00007f73e7d0d46f: mov    0x108(%r15),%r10
  0x00007f73e7d0d476: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d0d479: retq   
  0x00007f73e7d0d47a: mov    $0xfffffff6,%esi
  0x00007f73e7d0d47f: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d0d484: hlt    
  0x00007f73e7d0d485: hlt    
  0x00007f73e7d0d486: hlt    
  0x00007f73e7d0d487: hlt    
  0x00007f73e7d0d488: hlt    
  0x00007f73e7d0d489: hlt    
  0x00007f73e7d0d48a: hlt    
  0x00007f73e7d0d48b: hlt    
  0x00007f73e7d0d48c: hlt    
  0x00007f73e7d0d48d: hlt    
  0x00007f73e7d0d48e: hlt    
  0x00007f73e7d0d48f: hlt    
  0x00007f73e7d0d490: hlt    
  0x00007f73e7d0d491: hlt    
  0x00007f73e7d0d492: hlt    
  0x00007f73e7d0d493: hlt    
  0x00007f73e7d0d494: hlt    
  0x00007f73e7d0d495: hlt    
  0x00007f73e7d0d496: hlt    
  0x00007f73e7d0d497: hlt    
  0x00007f73e7d0d498: hlt    
  0x00007f73e7d0d499: hlt    
  0x00007f73e7d0d49a: hlt    
  0x00007f73e7d0d49b: hlt    
  0x00007f73e7d0d49c: hlt    
  0x00007f73e7d0d49d: hlt    
  0x00007f73e7d0d49e: hlt    
  0x00007f73e7d0d49f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d0d4a0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d0d4a5: callq  0x00007f73e7d0d4aa
  0x00007f73e7d0d4aa: subq   $0x5,(%rsp)
  0x00007f73e7d0d4af: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d0d4b4: hlt    
  0x00007f73e7d0d4b5: hlt    
  0x00007f73e7d0d4b6: hlt    
  0x00007f73e7d0d4b7: hlt    

ImmutableOopMap{}pc offsets: 100 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007f73e7d0d220, 0x00007f73e7d0d240]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d355ada0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  # parm4:    rdi:rdi   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  0x00007f73e7d0d220: mov    0x14(%rsi),%ebx
  0x00007f73e7d0d223: mov    0x28(%rbx),%ebx
  0x00007f73e7d0d226: mov    0x24(%rbx),%ebx
  0x00007f73e7d0d229: mov    0x10(%rbx),%rbx
  0x00007f73e7d0d22d: test   %rbx,%rbx
  0x00007f73e7d0d230: je     0x00007f73e7d0d239
  0x00007f73e7d0d236: jmpq   *0x38(%rbx)
  0x00007f73e7d0d239: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0d23e: hlt    
  0x00007f73e7d0d23f: hlt    
Compiled method (c1)   14625   78   !   3       java.util.concurrent.ConcurrentHashMap::putVal (432 bytes)
 total in heap  [0x00007f73e07d8910,0x00007f73e07dc300] = 14832
 relocation     [0x00007f73e07d8a88,0x00007f73e07d8c98] = 528
 main code      [0x00007f73e07d8ca0,0x00007f73e07daee0] = 8768
 stub code      [0x00007f73e07daee0,0x00007f73e07dafb0] = 208
 oops           [0x00007f73e07dafb0,0x00007f73e07dafb8] = 8
 metadata       [0x00007f73e07dafb8,0x00007f73e07daff8] = 64
 scopes data    [0x00007f73e07daff8,0x00007f73e07db820] = 2088
 scopes pcs     [0x00007f73e07db820,0x00007f73e07dc170] = 2384
 dependencies   [0x00007f73e07dc170,0x00007f73e07dc178] = 8
 handler table  [0x00007f73e07dc178,0x00007f73e07dc2c8] = 336
 nul chk table  [0x00007f73e07dc2c8,0x00007f73e07dc300] = 56
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;  [0x00007f73e07d8ca0, 0x00007f73e07dafb0]  8976 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8        = boolean
  #           [sp+0x140]  (sp of caller)
  0x00007f73e07d8ca0: mov    0x8(%rsi),%r10d
  0x00007f73e07d8ca4: shl    $0x3,%r10
  0x00007f73e07d8ca8: movabs $0x800000000,%r12
  0x00007f73e07d8cb2: add    %r12,%r10
  0x00007f73e07d8cb5: xor    %r12,%r12
  0x00007f73e07d8cb8: cmp    %rax,%r10
  0x00007f73e07d8cbb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07d8cc1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d8ccc: data16 data16 xchg %ax,%ax
  0x00007f73e07d8cd0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07d8cdb: data16 data16 xchg %ax,%ax
  0x00007f73e07d8cdf: nop
[Verified Entry Point]
  0x00007f73e07d8ce0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07d8ce7: push   %rbp
  0x00007f73e07d8ce8: sub    $0x130,%rsp
  0x00007f73e07d8cef: mov    %rsi,0xa8(%rsp)
  0x00007f73e07d8cf7: mov    %rdx,0xb0(%rsp)
  0x00007f73e07d8cff: mov    %rcx,0xb8(%rsp)
  0x00007f73e07d8d07: mov    %r8d,0xc0(%rsp)
  0x00007f73e07d8d0f: movabs $0x7f73d350d850,%rdi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8d19: mov    0x104(%rdi),%ebx
  0x00007f73e07d8d1f: add    $0x8,%ebx
  0x00007f73e07d8d22: mov    %ebx,0x104(%rdi)
  0x00007f73e07d8d28: and    $0x1ff8,%ebx
  0x00007f73e07d8d2e: cmp    $0x0,%ebx
  0x00007f73e07d8d31: je     0x00007f73e07daa0b  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0 (line 1011)

  0x00007f73e07d8d37: cmp    $0x0,%rdx
  0x00007f73e07d8d3b: movabs $0x7f73d350d850,%rdi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8d45: movabs $0x140,%rbx
  0x00007f73e07d8d4f: je     0x00007f73e07d8d5f
  0x00007f73e07d8d55: movabs $0x150,%rbx
  0x00007f73e07d8d5f: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07d8d63: lea    0x1(%rax),%rax
  0x00007f73e07d8d67: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07d8d6b: je     0x00007f73e07da914  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1 (line 1011)

  0x00007f73e07d8d71: cmp    $0x0,%rcx
  0x00007f73e07d8d75: movabs $0x7f73d350d850,%rdi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8d7f: movabs $0x170,%rbx
  0x00007f73e07d8d89: je     0x00007f73e07d8d99
  0x00007f73e07d8d8f: movabs $0x160,%rbx
  0x00007f73e07d8d99: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07d8d9d: lea    0x1(%rax),%rax
  0x00007f73e07d8da1: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07d8da5: je     0x00007f73e07da914  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5 (line 1011)

  0x00007f73e07d8dab: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007f73e07daa2c
  0x00007f73e07d8dae: mov    %rdx,%rdi
  0x00007f73e07d8db1: movabs $0x7f73d350d850,%rbx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8dbb: mov    0x8(%rdi),%edi
  0x00007f73e07d8dbe: shl    $0x3,%rdi
  0x00007f73e07d8dc2: movabs $0x800000000,%r12
  0x00007f73e07d8dcc: add    %r12,%rdi
  0x00007f73e07d8dcf: xor    %r12,%r12
  0x00007f73e07d8dd2: cmp    0x1a0(%rbx),%rdi
  0x00007f73e07d8dd9: jne    0x00007f73e07d8de8
  0x00007f73e07d8ddb: addq   $0x1,0x1a8(%rbx)
  0x00007f73e07d8de3: jmpq   0x00007f73e07d8e4e
  0x00007f73e07d8de8: cmp    0x1b0(%rbx),%rdi
  0x00007f73e07d8def: jne    0x00007f73e07d8dfe
  0x00007f73e07d8df1: addq   $0x1,0x1b8(%rbx)
  0x00007f73e07d8df9: jmpq   0x00007f73e07d8e4e
  0x00007f73e07d8dfe: cmpq   $0x0,0x1a0(%rbx)
  0x00007f73e07d8e09: jne    0x00007f73e07d8e22
  0x00007f73e07d8e0b: mov    %rdi,0x1a0(%rbx)
  0x00007f73e07d8e12: movq   $0x1,0x1a8(%rbx)
  0x00007f73e07d8e1d: jmpq   0x00007f73e07d8e4e
  0x00007f73e07d8e22: cmpq   $0x0,0x1b0(%rbx)
  0x00007f73e07d8e2d: jne    0x00007f73e07d8e46
  0x00007f73e07d8e2f: mov    %rdi,0x1b0(%rbx)
  0x00007f73e07d8e36: movq   $0x1,0x1b8(%rbx)
  0x00007f73e07d8e41: jmpq   0x00007f73e07d8e4e
  0x00007f73e07d8e46: addq   $0x1,0x190(%rbx)
  0x00007f73e07d8e4e: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)

  0x00007f73e07d8e51: nopl   0x0(%rax)
  0x00007f73e07d8e55: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d8e5f: callq  0x00007f73e027f820  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {virtual_call}
  0x00007f73e07d8e64: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8e6e: addq   $0x1,0x1c8(%rsi)
  0x00007f73e07d8e76: movabs $0x7f73d350d6f0,%rsi  ;   {metadata(method data for {method} {0x000000080034f198} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8e80: mov    0x104(%rsi),%edi
  0x00007f73e07d8e86: add    $0x8,%edi
  0x00007f73e07d8e89: mov    %edi,0x104(%rsi)
  0x00007f73e07d8e8f: and    $0x7ffff8,%edi
  0x00007f73e07d8e95: cmp    $0x0,%edi
  0x00007f73e07d8e98: je     0x00007f73e07daa31
  0x00007f73e07d8e9e: mov    %rax,%rsi
  0x00007f73e07d8ea1: shr    $0x10,%esi
  0x00007f73e07d8ea4: xor    %rax,%rsi
  0x00007f73e07d8ea7: and    $0x7fffffff,%esi
  0x00007f73e07d8ead: mov    %esi,0xc8(%rsp)
  0x00007f73e07d8eb4: mov    0xa8(%rsp),%rdi
  0x00007f73e07d8ebc: mov    0x28(%rdi),%ebx    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29 (line 1014)

  0x00007f73e07d8ebf: mov    $0x0,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34 (line 1016)

  0x00007f73e07d8ec4: mov    %eax,0xc4(%rsp)
  0x00007f73e07d8ecb: nopl   0x0(%rax,%rax,1)
  0x00007f73e07d8ed0: cmp    $0x0,%rbx
  0x00007f73e07d8ed4: movabs $0x7f73d350d850,%r9  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8ede: movabs $0x1d8,%r11
  0x00007f73e07d8ee8: je     0x00007f73e07d8ef8
  0x00007f73e07d8eee: movabs $0x1e8,%r11
  0x00007f73e07d8ef8: mov    (%r9,%r11,1),%r13
  0x00007f73e07d8efc: lea    0x1(%r13),%r13
  0x00007f73e07d8f00: mov    %r13,(%r9,%r11,1)
  0x00007f73e07d8f04: je     0x00007f73e07d8f48  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36 (line 1016)

  0x00007f73e07d8f0a: mov    0xc(%rbx),%r9d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ; implicit exception: dispatches to 0x00007f73e07daa52
  0x00007f73e07d8f0e: cmp    $0x0,%r9d
  0x00007f73e07d8f12: movabs $0x7f73d350d850,%r11  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8f1c: movabs $0x1f8,%r13
  0x00007f73e07d8f26: jne    0x00007f73e07d8f36
  0x00007f73e07d8f2c: movabs $0x208,%r13
  0x00007f73e07d8f36: mov    (%r11,%r13,1),%r14
  0x00007f73e07d8f3a: lea    0x1(%r14),%r14
  0x00007f73e07d8f3e: mov    %r14,(%r11,%r13,1)
  0x00007f73e07d8f42: jne    0x00007f73e07d8f98  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45 (line 1016)

  0x00007f73e07d8f48: mov    %rdi,%rbx
  0x00007f73e07d8f4b: movabs $0x7f73d350d850,%r9  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8f55: addq   $0x1,0x218(%r9)
  0x00007f73e07d8f5d: mov    %rdi,%rsi          ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)

  0x00007f73e07d8f60: nopl   0x0(%rax)
  0x00007f73e07d8f67: callq  0x00007f73e0269100  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }
                                                ;*invokevirtual initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49 (line 1017)
                                                ;   {optimized virtual_call}
  0x00007f73e07d8f6c: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8f76: incl   0x250(%rcx)
  0x00007f73e07d8f7c: mov    0xc4(%rsp),%esi
  0x00007f73e07d8f83: mov    0xc0(%rsp),%r8d
  0x00007f73e07d8f8b: mov    0xb8(%rsp),%rcx
  0x00007f73e07d8f93: jmpq   0x00007f73e07da687  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54 (line 1017)

  0x00007f73e07d8f98: dec    %r9d
  0x00007f73e07d8f9b: and    0xc8(%rsp),%r9d
  0x00007f73e07d8fa3: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8fad: addq   $0x1,0x268(%rcx)
  0x00007f73e07d8fb5: movabs $0x7f73d3505990,%rcx  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8fbf: mov    0x104(%rcx),%edx
  0x00007f73e07d8fc5: add    $0x8,%edx
  0x00007f73e07d8fc8: mov    %edx,0x104(%rcx)
  0x00007f73e07d8fce: and    $0x7ffff8,%edx
  0x00007f73e07d8fd4: cmp    $0x0,%edx
  0x00007f73e07d8fd7: je     0x00007f73e07daa57
  0x00007f73e07d8fdd: movslq %r9d,%rdx
  0x00007f73e07d8fe0: mov    $0x2,%ecx
  0x00007f73e07d8fe5: shl    %cl,%rdx
  0x00007f73e07d8fe8: movabs $0x10,%r10
  0x00007f73e07d8ff2: add    %r10,%rdx
  0x00007f73e07d8ff5: movabs $0x7f73d3505990,%rsi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d8fff: lea    0x178(%rsi),%rsi
  0x00007f73e07d9006: mov    %rbx,%rdi
  0x00007f73e07d9009: mov    0x8(%rdi),%edi
  0x00007f73e07d900c: shl    $0x3,%rdi
  0x00007f73e07d9010: movabs $0x800000000,%r12
  0x00007f73e07d901a: add    %r12,%rdi
  0x00007f73e07d901d: xor    %r12,%r12
  0x00007f73e07d9020: xor    0x8(%rsi),%rdi
  0x00007f73e07d9024: test   $0xfffffffffffffffc,%rdi
  0x00007f73e07d902b: je     0x00007f73e07d903e
  0x00007f73e07d902d: test   $0x2,%rdi
  0x00007f73e07d9034: jne    0x00007f73e07d903e
  0x00007f73e07d9036: orq    $0x2,0x8(%rsi)
  0x00007f73e07d903e: movabs $0xe2d02100,%rsi   ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000000e2d02100})}
  0x00007f73e07d9048: movabs $0x7f73d3505990,%rdi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9052: addq   $0x1,0x140(%rdi)
  0x00007f73e07d905a: movabs $0x7f73d3505ba0,%rsi  ;   {metadata(method data for {method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07d9064: mov    0x104(%rsi),%edi
  0x00007f73e07d906a: add    $0x8,%edi
  0x00007f73e07d906d: mov    %edi,0x104(%rsi)
  0x00007f73e07d9073: and    $0x7ffff8,%edi
  0x00007f73e07d9079: cmp    $0x0,%edi
  0x00007f73e07d907c: je     0x00007f73e07daa78
  0x00007f73e07d9082: mov    (%rbx,%rdx,1),%esi
  0x00007f73e07d9085: mov    %rbx,%rdi
  0x00007f73e07d9088: movabs $0xc,%rax
  0x00007f73e07d9092: cmp    %rax,%rdx
  0x00007f73e07d9095: jne    0x00007f73e07d90da
  0x00007f73e07d909b: cmp    $0x0,%rdi
  0x00007f73e07d909f: je     0x00007f73e07d90da
  0x00007f73e07d90a5: mov    0x8(%rdi),%edi
  0x00007f73e07d90a8: shl    $0x3,%rdi
  0x00007f73e07d90ac: movabs $0x800000000,%r12
  0x00007f73e07d90b6: add    %r12,%rdi
  0x00007f73e07d90b9: xor    %r12,%r12
  0x00007f73e07d90bc: movsbl 0x18b(%rdi),%edi
  0x00007f73e07d90c3: cmp    $0x0,%edi
  0x00007f73e07d90c6: je     0x00007f73e07d90da
  0x00007f73e07d90cc: movsbl 0x30(%r15),%edi
  0x00007f73e07d90d1: cmp    $0x0,%edi
  0x00007f73e07d90d4: jne    0x00007f73e07daa99
  0x00007f73e07d90da: cmp    $0x0,%rsi
  0x00007f73e07d90de: jne    0x00007f73e07d90f6
  0x00007f73e07d90e0: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d90ea: orb    $0x1,0x189(%rax)
  0x00007f73e07d90f1: jmpq   0x00007f73e07d91d7
  0x00007f73e07d90f6: movabs $0x80029e7d8,%rcx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d9100: mov    0x8(%rsi),%eax
  0x00007f73e07d9103: shl    $0x3,%rax
  0x00007f73e07d9107: movabs $0x800000000,%r12
  0x00007f73e07d9111: add    %r12,%rax
  0x00007f73e07d9114: xor    %r12,%r12
  0x00007f73e07d9117: cmp    0x38(%rax),%rcx
  0x00007f73e07d911b: jne    0x00007f73e07d91bb
  0x00007f73e07d9121: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d912b: mov    0x8(%rsi),%ecx
  0x00007f73e07d912e: shl    $0x3,%rcx
  0x00007f73e07d9132: movabs $0x800000000,%r12
  0x00007f73e07d913c: add    %r12,%rcx
  0x00007f73e07d913f: xor    %r12,%r12
  0x00007f73e07d9142: cmp    0x1a0(%rax),%rcx
  0x00007f73e07d9149: jne    0x00007f73e07d9158
  0x00007f73e07d914b: addq   $0x1,0x1a8(%rax)
  0x00007f73e07d9153: jmpq   0x00007f73e07d91d7
  0x00007f73e07d9158: cmp    0x1b0(%rax),%rcx
  0x00007f73e07d915f: jne    0x00007f73e07d916e
  0x00007f73e07d9161: addq   $0x1,0x1b8(%rax)
  0x00007f73e07d9169: jmpq   0x00007f73e07d91d7
  0x00007f73e07d916e: cmpq   $0x0,0x1a0(%rax)
  0x00007f73e07d9179: jne    0x00007f73e07d9192
  0x00007f73e07d917b: mov    %rcx,0x1a0(%rax)
  0x00007f73e07d9182: movq   $0x1,0x1a8(%rax)
  0x00007f73e07d918d: jmpq   0x00007f73e07d91d7
  0x00007f73e07d9192: cmpq   $0x0,0x1b0(%rax)
  0x00007f73e07d919d: jne    0x00007f73e07d91b6
  0x00007f73e07d919f: mov    %rcx,0x1b0(%rax)
  0x00007f73e07d91a6: movq   $0x1,0x1b8(%rax)
  0x00007f73e07d91b1: jmpq   0x00007f73e07d91d7
  0x00007f73e07d91b6: jmpq   0x00007f73e07d91d7
  0x00007f73e07d91bb: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d91c5: subq   $0x1,0x190(%rax)
  0x00007f73e07d91cd: jmpq   0x00007f73e07daab1
  0x00007f73e07d91d2: jmpq   0x00007f73e07d91d7
  0x00007f73e07d91d7: mov    %rsi,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)

  0x00007f73e07d91da: mov    %rdi,0xd0(%rsp)
  0x00007f73e07d91e2: cmp    $0x0,%rdi
  0x00007f73e07d91e6: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d91f0: movabs $0x278,%rax
  0x00007f73e07d91fa: jne    0x00007f73e07d920a
  0x00007f73e07d9200: movabs $0x288,%rax
  0x00007f73e07d920a: mov    (%rsi,%rax,1),%rcx
  0x00007f73e07d920e: lea    0x1(%rcx),%rcx
  0x00007f73e07d9212: mov    %rcx,(%rsi,%rax,1)
  0x00007f73e07d9216: mov    %rdx,%r8
  0x00007f73e07d9219: jne    0x00007f73e07d944e  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75 (line 1018)

  0x00007f73e07d921f: mov    0xc8(%rsp),%esi
  0x00007f73e07d9226: mov    0xb8(%rsp),%rcx
  0x00007f73e07d922e: mov    0xb0(%rsp),%rdx
  0x00007f73e07d9236: mov    %rdx,%r11
  0x00007f73e07d9239: movabs $0x80029e7d8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d9243: mov    %rcx,%r14
  0x00007f73e07d9246: mov    %rsi,%r13
  0x00007f73e07d9249: mov    0x118(%r15),%rax
  0x00007f73e07d9250: lea    0x20(%rax),%rdi
  0x00007f73e07d9254: cmp    0x128(%r15),%rdi
  0x00007f73e07d925b: ja     0x00007f73e07daaba
  0x00007f73e07d9261: mov    %rdi,0x118(%r15)
  0x00007f73e07d9268: mov    0xb8(%rdx),%rcx
  0x00007f73e07d926f: mov    %rcx,(%rax)
  0x00007f73e07d9272: mov    %rdx,%rcx
  0x00007f73e07d9275: movabs $0x800000000,%r12
  0x00007f73e07d927f: sub    %r12,%rcx
  0x00007f73e07d9282: shr    $0x3,%rcx
  0x00007f73e07d9286: xor    %r12,%r12
  0x00007f73e07d9289: mov    %ecx,0x8(%rax)
  0x00007f73e07d928c: xor    %rcx,%rcx
  0x00007f73e07d928f: mov    %ecx,0xc(%rax)
  0x00007f73e07d9292: xor    %rcx,%rcx
  0x00007f73e07d9295: mov    %rcx,0x10(%rax)
  0x00007f73e07d9299: mov    %rcx,0x18(%rax)
  0x00007f73e07d929d: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)

  0x00007f73e07d92a0: mov    %rdx,%rax
  0x00007f73e07d92a3: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d92ad: addq   $0x1,0x298(%rcx)
  0x00007f73e07d92b5: movabs $0x7f73d350e158,%rax  ;   {metadata(method data for {method} {0x000000080029efd8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d92bf: mov    0x104(%rax),%ecx
  0x00007f73e07d92c5: add    $0x8,%ecx
  0x00007f73e07d92c8: mov    %ecx,0x104(%rax)
  0x00007f73e07d92ce: and    $0x7ffff8,%ecx
  0x00007f73e07d92d4: cmp    $0x0,%ecx
  0x00007f73e07d92d7: je     0x00007f73e07daac7
  0x00007f73e07d92dd: mov    %rdx,%rax
  0x00007f73e07d92e0: movabs $0x7f73d350e158,%rcx  ;   {metadata(method data for {method} {0x000000080029efd8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d92ea: addq   $0x1,0x140(%rcx)
  0x00007f73e07d92f2: movabs $0x7f73d350be50,%rax  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07d92fc: mov    0x104(%rax),%ecx
  0x00007f73e07d9302: add    $0x8,%ecx
  0x00007f73e07d9305: mov    %ecx,0x104(%rax)
  0x00007f73e07d930b: and    $0x7ffff8,%ecx
  0x00007f73e07d9311: cmp    $0x0,%ecx
  0x00007f73e07d9314: je     0x00007f73e07daae8
  0x00007f73e07d931a: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x00007f73e07d931e: movsbl 0x30(%r15),%eax
  0x00007f73e07d9323: cmp    $0x0,%eax
  0x00007f73e07d9326: jne    0x00007f73e07dab09
  0x00007f73e07d932c: mov    %r11,%r10
  0x00007f73e07d932f: mov    %r10d,0x10(%rdx)
  0x00007f73e07d9333: mov    %rdx,%rax
  0x00007f73e07d9336: xor    %r11,%rax
  0x00007f73e07d9339: shr    $0x14,%rax
  0x00007f73e07d933d: cmp    $0x0,%rax
  0x00007f73e07d9341: jne    0x00007f73e07dab24  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x00007f73e07d9347: movsbl 0x30(%r15),%eax
  0x00007f73e07d934c: cmp    $0x0,%eax
  0x00007f73e07d934f: jne    0x00007f73e07dab3c
  0x00007f73e07d9355: mov    %r14,%r10
  0x00007f73e07d9358: mov    %r10d,0x14(%rdx)
  0x00007f73e07d935c: lock addl $0x0,-0x40(%rsp)
  0x00007f73e07d9362: mov    %rdx,%rax
  0x00007f73e07d9365: xor    %r14,%rax
  0x00007f73e07d9368: shr    $0x14,%rax
  0x00007f73e07d936c: cmp    $0x0,%rax
  0x00007f73e07d9370: jne    0x00007f73e07dab57  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)

  0x00007f73e07d9376: movabs $0x7f73d350d850,%rax  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9380: addq   $0x1,0x2a8(%rax)
  0x00007f73e07d9388: movabs $0x7f73d350eb38,%rax  ;   {metadata(method data for {method} {0x000000080034f248} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9392: mov    0x104(%rax),%ecx
  0x00007f73e07d9398: add    $0x8,%ecx
  0x00007f73e07d939b: mov    %ecx,0x104(%rax)
  0x00007f73e07d93a1: and    $0x7ffff8,%ecx
  0x00007f73e07d93a7: cmp    $0x0,%ecx
  0x00007f73e07d93aa: je     0x00007f73e07dab6f
  0x00007f73e07d93b0: lea    (%rbx,%r8,1),%rcx
  0x00007f73e07d93b4: movsbl 0x30(%r15),%eax
  0x00007f73e07d93b9: cmp    $0x0,%eax
  0x00007f73e07d93bc: jne    0x00007f73e07dab90
  0x00007f73e07d93c2: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07d93cc: mov    %rdx,%r10
  0x00007f73e07d93cf: lock cmpxchg %r10d,(%rcx)
  0x00007f73e07d93d4: mov    $0x1,%esi
  0x00007f73e07d93d9: je     0x00007f73e07d93e4
  0x00007f73e07d93df: mov    $0x0,%esi
  0x00007f73e07d93e4: mov    %rcx,%rdi
  0x00007f73e07d93e7: xor    %rdx,%rdi
  0x00007f73e07d93ea: shr    $0x14,%rdi
  0x00007f73e07d93ee: cmp    $0x0,%rdi
  0x00007f73e07d93f2: jne    0x00007f73e07dabaa  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17 (line 765)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)

  0x00007f73e07d93f8: and    $0x1,%esi
  0x00007f73e07d93fb: cmp    $0x0,%esi
  0x00007f73e07d93fe: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9408: movabs $0x2c8,%rcx
  0x00007f73e07d9412: jne    0x00007f73e07d9422
  0x00007f73e07d9418: movabs $0x2b8,%rcx
  0x00007f73e07d9422: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07d9426: lea    0x1(%rsi),%rsi
  0x00007f73e07d942a: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07d942e: jne    0x00007f73e07da7ee  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@97 (line 1019)

  0x00007f73e07d9434: mov    %rbx,%rax
  0x00007f73e07d9437: mov    0xc4(%rsp),%esi
  0x00007f73e07d943e: mov    0xc0(%rsp),%r8d
  0x00007f73e07d9446: mov    %r14,%rcx
  0x00007f73e07d9449: jmpq   0x00007f73e07da687  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007f73e07d944e: mov    0xc8(%rsp),%r13d
  0x00007f73e07d9456: mov    0xb8(%rsp),%r14
  0x00007f73e07d945e: mov    0xb0(%rsp),%r11
  0x00007f73e07d9466: mov    0xc(%rdi),%eax     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ; implicit exception: dispatches to 0x00007f73e07dabc2
  0x00007f73e07d9469: cmp    $0xffffffff,%eax
  0x00007f73e07d946c: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9476: movabs $0x2f0,%rcx
  0x00007f73e07d9480: jne    0x00007f73e07d9490
  0x00007f73e07d9486: movabs $0x300,%rcx
  0x00007f73e07d9490: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07d9494: lea    0x1(%rsi),%rsi
  0x00007f73e07d9498: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07d949c: jne    0x00007f73e07d9500  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@112 (line 1022)

  0x00007f73e07d94a2: mov    0xa8(%rsp),%rax
  0x00007f73e07d94aa: movabs $0x7f73d350d850,%r8  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d94b4: addq   $0x1,0x310(%r8)
  0x00007f73e07d94bc: mov    %rbx,%rdx
  0x00007f73e07d94bf: mov    %rdi,%rcx
  0x00007f73e07d94c2: mov    0xa8(%rsp),%rsi    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)

  0x00007f73e07d94ca: nopl   0x0(%rax,%rax,1)
  0x00007f73e07d94cf: callq  0x00007f73e0269100  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120 (line 1023)
                                                ;   {optimized virtual_call}
  0x00007f73e07d94d4: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d94de: incl   0x348(%rdx)
  0x00007f73e07d94e4: mov    0xc4(%rsp),%esi
  0x00007f73e07d94eb: mov    0xc0(%rsp),%r8d
  0x00007f73e07d94f3: mov    0xb8(%rsp),%rcx
  0x00007f73e07d94fb: jmpq   0x00007f73e07da687  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@125 (line 1023)

  0x00007f73e07d9500: mov    0xc0(%rsp),%ecx
  0x00007f73e07d9507: cmp    $0x0,%ecx
  0x00007f73e07d950a: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9514: movabs $0x370,%rsi
  0x00007f73e07d951e: jne    0x00007f73e07d952e
  0x00007f73e07d9524: movabs $0x360,%rsi
  0x00007f73e07d952e: mov    (%rdx,%rsi,1),%r11
  0x00007f73e07d9532: lea    0x1(%r11),%r11
  0x00007f73e07d9536: mov    %r11,(%rdx,%rsi,1)
  0x00007f73e07d953a: jne    0x00007f73e07d9564  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@129 (line 1024)

  0x00007f73e07d9540: mov    %eax,0xcc(%rsp)
  0x00007f73e07d9547: mov    %r8,0xe0(%rsp)
  0x00007f73e07d954f: mov    %r9d,0xe8(%rsp)
  0x00007f73e07d9557: mov    %rbx,0xd8(%rsp)
  0x00007f73e07d955f: jmpq   0x00007f73e07d97c2  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x00007f73e07d9564: cmp    0xc8(%rsp),%eax
  0x00007f73e07d956b: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9575: movabs $0x390,%rsi
  0x00007f73e07d957f: je     0x00007f73e07d958f
  0x00007f73e07d9585: movabs $0x380,%rsi
  0x00007f73e07d958f: mov    (%rdx,%rsi,1),%r11
  0x00007f73e07d9593: lea    0x1(%r11),%r11
  0x00007f73e07d9597: mov    %r11,(%rdx,%rsi,1)
  0x00007f73e07d959b: je     0x00007f73e07d95c5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@136 (line 1024)

  0x00007f73e07d95a1: mov    %eax,0xcc(%rsp)
  0x00007f73e07d95a8: mov    %r8,0xe0(%rsp)
  0x00007f73e07d95b0: mov    %r9d,0xe8(%rsp)
  0x00007f73e07d95b8: mov    %rbx,0xd8(%rsp)
  0x00007f73e07d95c0: jmpq   0x00007f73e07d97c2  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179 (line 1030)

  0x00007f73e07d95c5: mov    0xb0(%rsp),%rdx
  0x00007f73e07d95cd: mov    0x10(%rdi),%esi    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@141 (line 1024)

  0x00007f73e07d95d0: cmp    %rdx,%rsi
  0x00007f73e07d95d3: movabs $0x7f73d350d850,%r11  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d95dd: movabs $0x3b0,%r13
  0x00007f73e07d95e7: jne    0x00007f73e07d95f7
  0x00007f73e07d95ed: movabs $0x3a0,%r13
  0x00007f73e07d95f7: mov    (%r11,%r13,1),%r14
  0x00007f73e07d95fb: lea    0x1(%r14),%r14
  0x00007f73e07d95ff: mov    %r14,(%r11,%r13,1)
  0x00007f73e07d9603: jne    0x00007f73e07d962d  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@148 (line 1024)

  0x00007f73e07d9609: mov    %eax,0xcc(%rsp)
  0x00007f73e07d9610: mov    %r8,0xe0(%rsp)
  0x00007f73e07d9618: mov    %r9d,0xe8(%rsp)
  0x00007f73e07d9620: mov    %rbx,0xd8(%rsp)
  0x00007f73e07d9628: jmpq   0x00007f73e07d9785  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@165 (line 1026)

  0x00007f73e07d962d: cmp    $0x0,%rsi
  0x00007f73e07d9631: movabs $0x7f73d350d850,%r11  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d963b: movabs $0x3c0,%r13
  0x00007f73e07d9645: je     0x00007f73e07d9655
  0x00007f73e07d964b: movabs $0x3d0,%r13
  0x00007f73e07d9655: mov    (%r11,%r13,1),%r14
  0x00007f73e07d9659: lea    0x1(%r14),%r14
  0x00007f73e07d965d: mov    %r14,(%r11,%r13,1)
  0x00007f73e07d9661: mov    %eax,0xcc(%rsp)
  0x00007f73e07d9668: mov    %r8,0xe0(%rsp)
  0x00007f73e07d9670: mov    %r9d,0xe8(%rsp)
  0x00007f73e07d9678: mov    %rbx,0xd8(%rsp)
  0x00007f73e07d9680: je     0x00007f73e07d97c2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@153 (line 1024)

  0x00007f73e07d9686: mov    %rdx,%r11
  0x00007f73e07d9689: movabs $0x7f73d350d850,%r13  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9693: mov    0x8(%r11),%r11d
  0x00007f73e07d9697: shl    $0x3,%r11
  0x00007f73e07d969b: movabs $0x800000000,%r12
  0x00007f73e07d96a5: add    %r12,%r11
  0x00007f73e07d96a8: xor    %r12,%r12
  0x00007f73e07d96ab: cmp    0x3f0(%r13),%r11
  0x00007f73e07d96b2: jne    0x00007f73e07d96c1
  0x00007f73e07d96b4: addq   $0x1,0x3f8(%r13)
  0x00007f73e07d96bc: jmpq   0x00007f73e07d9727
  0x00007f73e07d96c1: cmp    0x400(%r13),%r11
  0x00007f73e07d96c8: jne    0x00007f73e07d96d7
  0x00007f73e07d96ca: addq   $0x1,0x408(%r13)
  0x00007f73e07d96d2: jmpq   0x00007f73e07d9727
  0x00007f73e07d96d7: cmpq   $0x0,0x3f0(%r13)
  0x00007f73e07d96e2: jne    0x00007f73e07d96fb
  0x00007f73e07d96e4: mov    %r11,0x3f0(%r13)
  0x00007f73e07d96eb: movq   $0x1,0x3f8(%r13)
  0x00007f73e07d96f6: jmpq   0x00007f73e07d9727
  0x00007f73e07d96fb: cmpq   $0x0,0x400(%r13)
  0x00007f73e07d9706: jne    0x00007f73e07d971f
  0x00007f73e07d9708: mov    %r11,0x400(%r13)
  0x00007f73e07d970f: movq   $0x1,0x408(%r13)
  0x00007f73e07d971a: jmpq   0x00007f73e07d9727
  0x00007f73e07d971f: addq   $0x1,0x3e0(%r13)
  0x00007f73e07d9727: mov    %rdx,%r11
  0x00007f73e07d972a: mov    %rsi,%rdx
  0x00007f73e07d972d: mov    %r11,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)

  0x00007f73e07d9730: nopl   0x0(%rax,%rax,1)
  0x00007f73e07d9735: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d973f: callq  0x00007f73e0269380  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159 (line 1026)
                                                ;   {virtual_call}
  0x00007f73e07d9744: cmp    $0x0,%eax
  0x00007f73e07d9747: movabs $0x7f73d350d850,%rax  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9751: movabs $0x418,%rdx
  0x00007f73e07d975b: je     0x00007f73e07d976b
  0x00007f73e07d9761: movabs $0x428,%rdx
  0x00007f73e07d976b: mov    (%rax,%rdx,1),%rsi
  0x00007f73e07d976f: lea    0x1(%rsi),%rsi
  0x00007f73e07d9773: mov    %rsi,(%rax,%rdx,1)
  0x00007f73e07d9777: mov    0xd0(%rsp),%rdi
  0x00007f73e07d977f: je     0x00007f73e07d97c2  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162 (line 1026)

  0x00007f73e07d9785: mov    0x14(%rdi),%esi    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@167 (line 1026)

  0x00007f73e07d9788: cmp    $0x0,%rsi
  0x00007f73e07d978c: movabs $0x7f73d350d850,%rax  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9796: movabs $0x448,%rdx
  0x00007f73e07d97a0: jne    0x00007f73e07d97b0
  0x00007f73e07d97a6: movabs $0x438,%rdx
  0x00007f73e07d97b0: mov    (%rax,%rdx,1),%rbx
  0x00007f73e07d97b4: lea    0x1(%rbx),%rbx
  0x00007f73e07d97b8: mov    %rbx,(%rax,%rdx,1)
  0x00007f73e07d97bc: jne    0x00007f73e07da7d8  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@173 (line 1026)

  0x00007f73e07d97c2: lea    0x118(%rsp),%rdx
  0x00007f73e07d97ca: mov    %rdi,0x8(%rdx)
  0x00007f73e07d97ce: mov    (%rdi),%rax
  0x00007f73e07d97d1: mov    %rax,%rsi
  0x00007f73e07d97d4: and    $0x7,%rsi
  0x00007f73e07d97d8: cmp    $0x5,%rsi
  0x00007f73e07d97dc: jne    0x00007f73e07d9897
  0x00007f73e07d97e2: mov    0x8(%rdi),%esi
  0x00007f73e07d97e5: shl    $0x3,%rsi
  0x00007f73e07d97e9: movabs $0x800000000,%r12
  0x00007f73e07d97f3: add    %r12,%rsi
  0x00007f73e07d97f6: xor    %r12,%r12
  0x00007f73e07d97f9: mov    0xb8(%rsi),%rsi
  0x00007f73e07d9800: or     %r15,%rsi
  0x00007f73e07d9803: xor    %rax,%rsi
  0x00007f73e07d9806: and    $0xffffffffffffff87,%rsi
  0x00007f73e07d980a: je     0x00007f73e07d98bf
  0x00007f73e07d9810: test   $0x7,%rsi
  0x00007f73e07d9817: jne    0x00007f73e07d9874
  0x00007f73e07d981d: test   $0x300,%rsi
  0x00007f73e07d9824: jne    0x00007f73e07d9843
  0x00007f73e07d9826: and    $0x37f,%rax
  0x00007f73e07d982d: mov    %rax,%rsi
  0x00007f73e07d9830: or     %r15,%rsi
  0x00007f73e07d9833: lock cmpxchg %rsi,(%rdi)
  0x00007f73e07d9838: jne    0x00007f73e07dabc7
  0x00007f73e07d983e: jmpq   0x00007f73e07d98bf
  0x00007f73e07d9843: mov    0x8(%rdi),%esi
  0x00007f73e07d9846: shl    $0x3,%rsi
  0x00007f73e07d984a: movabs $0x800000000,%r12
  0x00007f73e07d9854: add    %r12,%rsi
  0x00007f73e07d9857: xor    %r12,%r12
  0x00007f73e07d985a: mov    0xb8(%rsi),%rsi
  0x00007f73e07d9861: or     %r15,%rsi
  0x00007f73e07d9864: lock cmpxchg %rsi,(%rdi)
  0x00007f73e07d9869: jne    0x00007f73e07dabc7
  0x00007f73e07d986f: jmpq   0x00007f73e07d98bf
  0x00007f73e07d9874: mov    0x8(%rdi),%esi
  0x00007f73e07d9877: shl    $0x3,%rsi
  0x00007f73e07d987b: movabs $0x800000000,%r12
  0x00007f73e07d9885: add    %r12,%rsi
  0x00007f73e07d9888: xor    %r12,%r12
  0x00007f73e07d988b: mov    0xb8(%rsi),%rsi
  0x00007f73e07d9892: lock cmpxchg %rsi,(%rdi)
  0x00007f73e07d9897: mov    (%rdi),%rax
  0x00007f73e07d989a: or     $0x1,%rax
  0x00007f73e07d989e: mov    %rax,(%rdx)
  0x00007f73e07d98a1: lock cmpxchg %rdx,(%rdi)
  0x00007f73e07d98a6: je     0x00007f73e07d98bf
  0x00007f73e07d98ac: sub    %rsp,%rax
  0x00007f73e07d98af: and    $0xfffffffffffff007,%rax
  0x00007f73e07d98b6: mov    %rax,(%rdx)
  0x00007f73e07d98b9: jne    0x00007f73e07dabc7  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)

  0x00007f73e07d98bf: mov    0xe0(%rsp),%rdx
  0x00007f73e07d98c7: mov    0xd8(%rsp),%rbx
  0x00007f73e07d98cf: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d98d9: addq   $0x1,0x458(%rsi)
  0x00007f73e07d98e1: movabs $0x7f73d3505990,%rsi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d98eb: mov    0x104(%rsi),%eax
  0x00007f73e07d98f1: add    $0x8,%eax
  0x00007f73e07d98f4: mov    %eax,0x104(%rsi)
  0x00007f73e07d98fa: and    $0x7ffff8,%eax
  0x00007f73e07d9900: cmp    $0x0,%eax
  0x00007f73e07d9903: je     0x00007f73e07dabda
  0x00007f73e07d9909: movabs $0x7f73d3505990,%rsi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9913: lea    0x178(%rsi),%rsi
  0x00007f73e07d991a: mov    %rbx,%rax
  0x00007f73e07d991d: mov    0x8(%rax),%eax
  0x00007f73e07d9920: shl    $0x3,%rax
  0x00007f73e07d9924: movabs $0x800000000,%r12
  0x00007f73e07d992e: add    %r12,%rax
  0x00007f73e07d9931: xor    %r12,%r12
  0x00007f73e07d9934: xor    0x8(%rsi),%rax
  0x00007f73e07d9938: test   $0xfffffffffffffffc,%rax
  0x00007f73e07d993e: je     0x00007f73e07d9950
  0x00007f73e07d9940: test   $0x2,%rax
  0x00007f73e07d9946: jne    0x00007f73e07d9950
  0x00007f73e07d9948: orq    $0x2,0x8(%rsi)
  0x00007f73e07d9950: movabs $0xe2d02100,%rsi   ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000000e2d02100})}
  0x00007f73e07d995a: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9964: addq   $0x1,0x140(%rax)
  0x00007f73e07d996c: movabs $0x7f73d3505ba0,%rsi  ;   {metadata(method data for {method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07d9976: mov    0x104(%rsi),%eax
  0x00007f73e07d997c: add    $0x8,%eax
  0x00007f73e07d997f: mov    %eax,0x104(%rsi)
  0x00007f73e07d9985: and    $0x7ffff8,%eax
  0x00007f73e07d998b: cmp    $0x0,%eax
  0x00007f73e07d998e: je     0x00007f73e07dabfb
  0x00007f73e07d9994: mov    (%rbx,%rdx,1),%esi
  0x00007f73e07d9997: mov    %rbx,%rax
  0x00007f73e07d999a: movabs $0xc,%rcx
  0x00007f73e07d99a4: cmp    %rcx,%rdx
  0x00007f73e07d99a7: jne    0x00007f73e07d99ec
  0x00007f73e07d99ad: cmp    $0x0,%rax
  0x00007f73e07d99b1: je     0x00007f73e07d99ec
  0x00007f73e07d99b7: mov    0x8(%rax),%edx
  0x00007f73e07d99ba: shl    $0x3,%rdx
  0x00007f73e07d99be: movabs $0x800000000,%r12
  0x00007f73e07d99c8: add    %r12,%rdx
  0x00007f73e07d99cb: xor    %r12,%r12
  0x00007f73e07d99ce: movsbl 0x18b(%rdx),%edx
  0x00007f73e07d99d5: cmp    $0x0,%edx
  0x00007f73e07d99d8: je     0x00007f73e07d99ec
  0x00007f73e07d99de: movsbl 0x30(%r15),%edx
  0x00007f73e07d99e3: cmp    $0x0,%edx
  0x00007f73e07d99e6: jne    0x00007f73e07dac1c
  0x00007f73e07d99ec: cmp    $0x0,%rsi
  0x00007f73e07d99f0: jne    0x00007f73e07d9a08
  0x00007f73e07d99f2: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d99fc: orb    $0x1,0x189(%rax)
  0x00007f73e07d9a03: jmpq   0x00007f73e07d9ae9
  0x00007f73e07d9a08: movabs $0x80029e7d8,%rcx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d9a12: mov    0x8(%rsi),%eax
  0x00007f73e07d9a15: shl    $0x3,%rax
  0x00007f73e07d9a19: movabs $0x800000000,%r12
  0x00007f73e07d9a23: add    %r12,%rax
  0x00007f73e07d9a26: xor    %r12,%r12
  0x00007f73e07d9a29: cmp    0x38(%rax),%rcx
  0x00007f73e07d9a2d: jne    0x00007f73e07d9acd
  0x00007f73e07d9a33: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9a3d: mov    0x8(%rsi),%ecx
  0x00007f73e07d9a40: shl    $0x3,%rcx
  0x00007f73e07d9a44: movabs $0x800000000,%r12
  0x00007f73e07d9a4e: add    %r12,%rcx
  0x00007f73e07d9a51: xor    %r12,%r12
  0x00007f73e07d9a54: cmp    0x1a0(%rax),%rcx
  0x00007f73e07d9a5b: jne    0x00007f73e07d9a6a
  0x00007f73e07d9a5d: addq   $0x1,0x1a8(%rax)
  0x00007f73e07d9a65: jmpq   0x00007f73e07d9ae9
  0x00007f73e07d9a6a: cmp    0x1b0(%rax),%rcx
  0x00007f73e07d9a71: jne    0x00007f73e07d9a80
  0x00007f73e07d9a73: addq   $0x1,0x1b8(%rax)
  0x00007f73e07d9a7b: jmpq   0x00007f73e07d9ae9
  0x00007f73e07d9a80: cmpq   $0x0,0x1a0(%rax)
  0x00007f73e07d9a8b: jne    0x00007f73e07d9aa4
  0x00007f73e07d9a8d: mov    %rcx,0x1a0(%rax)
  0x00007f73e07d9a94: movq   $0x1,0x1a8(%rax)
  0x00007f73e07d9a9f: jmpq   0x00007f73e07d9ae9
  0x00007f73e07d9aa4: cmpq   $0x0,0x1b0(%rax)
  0x00007f73e07d9aaf: jne    0x00007f73e07d9ac8
  0x00007f73e07d9ab1: mov    %rcx,0x1b0(%rax)
  0x00007f73e07d9ab8: movq   $0x1,0x1b8(%rax)
  0x00007f73e07d9ac3: jmpq   0x00007f73e07d9ae9
  0x00007f73e07d9ac8: jmpq   0x00007f73e07d9ae9
  0x00007f73e07d9acd: movabs $0x7f73d3505990,%rax  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9ad7: subq   $0x1,0x190(%rax)
  0x00007f73e07d9adf: jmpq   0x00007f73e07dac34
  0x00007f73e07d9ae4: jmpq   0x00007f73e07d9ae9
  0x00007f73e07d9ae9: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)

  0x00007f73e07d9aec: cmp    %rdi,%rdx
  0x00007f73e07d9aef: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9af9: movabs $0x478,%rsi
  0x00007f73e07d9b03: je     0x00007f73e07d9b13
  0x00007f73e07d9b09: movabs $0x468,%rsi
  0x00007f73e07d9b13: mov    (%rdx,%rsi,1),%rax
  0x00007f73e07d9b17: lea    0x1(%rax),%rax
  0x00007f73e07d9b1b: mov    %rax,(%rdx,%rsi,1)
  0x00007f73e07d9b1f: je     0x00007f73e07d9b53  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@197 (line 1032)

  0x00007f73e07d9b25: mov    0xc4(%rsp),%eax
  0x00007f73e07d9b2c: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x00007f73e07d9b36: mov    %rbx,0xd8(%rsp)
  0x00007f73e07d9b3e: mov    0xc0(%rsp),%r8d
  0x00007f73e07d9b46: mov    0xb8(%rsp),%rcx
  0x00007f73e07d9b4e: jmpq   0x00007f73e07da5fc  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)

  0x00007f73e07d9b53: mov    0xcc(%rsp),%eax
  0x00007f73e07d9b5a: cmp    $0x0,%eax
  0x00007f73e07d9b5d: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9b67: movabs $0x488,%rsi
  0x00007f73e07d9b71: jl     0x00007f73e07d9b81
  0x00007f73e07d9b77: movabs $0x498,%rsi
  0x00007f73e07d9b81: mov    (%rdx,%rsi,1),%rax
  0x00007f73e07d9b85: lea    0x1(%rax),%rax
  0x00007f73e07d9b89: mov    %rax,(%rdx,%rsi,1)
  0x00007f73e07d9b8d: jl     0x00007f73e07da0bc  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@202 (line 1033)

  0x00007f73e07d9b93: mov    %rdi,%rax
  0x00007f73e07d9b96: mov    $0x1,%ecx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212 (line 1037)

  0x00007f73e07d9b9b: mov    %ecx,0xec(%rsp)
  0x00007f73e07d9ba2: mov    %rbx,0xd8(%rsp)
  0x00007f73e07d9baa: nopw   0x0(%rax,%rax,1)
  0x00007f73e07d9bb0: mov    0xc8(%rsp),%esi
  0x00007f73e07d9bb7: mov    0xb0(%rsp),%rdx
  0x00007f73e07d9bbf: mov    0xc(%rax),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ; implicit exception: dispatches to 0x00007f73e07dac3d
  0x00007f73e07d9bc3: cmp    %esi,%r8d
  0x00007f73e07d9bc6: movabs $0x7f73d350d850,%r8  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9bd0: movabs $0x4b8,%r9
  0x00007f73e07d9bda: je     0x00007f73e07d9bea
  0x00007f73e07d9be0: movabs $0x4a8,%r9
  0x00007f73e07d9bea: mov    (%r8,%r9,1),%r11
  0x00007f73e07d9bee: lea    0x1(%r11),%r11
  0x00007f73e07d9bf2: mov    %r11,(%r8,%r9,1)
  0x00007f73e07d9bf6: je     0x00007f73e07d9c04  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@219 (line 1037)

  0x00007f73e07d9bfc: mov    %rax,%r8
  0x00007f73e07d9bff: jmpq   0x00007f73e07d9d85  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x00007f73e07d9c04: mov    0x10(%rax),%r8d    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224 (line 1037)

  0x00007f73e07d9c08: cmp    %rdx,%r8
  0x00007f73e07d9c0b: movabs $0x7f73d350d850,%r9  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9c15: movabs $0x4c8,%r11
  0x00007f73e07d9c1f: je     0x00007f73e07d9c2f
  0x00007f73e07d9c25: movabs $0x4d8,%r11
  0x00007f73e07d9c2f: mov    (%r9,%r11,1),%r13
  0x00007f73e07d9c33: lea    0x1(%r13),%r13
  0x00007f73e07d9c37: mov    %r13,(%r9,%r11,1)
  0x00007f73e07d9c3b: je     0x00007f73e07d9e23  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@231 (line 1037)

  0x00007f73e07d9c41: cmp    $0x0,%r8
  0x00007f73e07d9c45: movabs $0x7f73d350d850,%r9  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9c4f: movabs $0x4f8,%r11
  0x00007f73e07d9c59: jne    0x00007f73e07d9c69
  0x00007f73e07d9c5f: movabs $0x4e8,%r11
  0x00007f73e07d9c69: mov    (%r9,%r11,1),%r13
  0x00007f73e07d9c6d: lea    0x1(%r13),%r13
  0x00007f73e07d9c71: mov    %r13,(%r9,%r11,1)
  0x00007f73e07d9c75: jne    0x00007f73e07d9c83  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@236 (line 1037)

  0x00007f73e07d9c7b: mov    %rax,%r8
  0x00007f73e07d9c7e: jmpq   0x00007f73e07d9d85  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@268 (line 1045)

  0x00007f73e07d9c83: mov    %rax,0xf0(%rsp)
  0x00007f73e07d9c8b: mov    %rdx,%r9
  0x00007f73e07d9c8e: movabs $0x7f73d350d850,%r11  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9c98: mov    0x8(%r9),%r9d
  0x00007f73e07d9c9c: shl    $0x3,%r9
  0x00007f73e07d9ca0: movabs $0x800000000,%r12
  0x00007f73e07d9caa: add    %r12,%r9
  0x00007f73e07d9cad: xor    %r12,%r12
  0x00007f73e07d9cb0: cmp    0x518(%r11),%r9
  0x00007f73e07d9cb7: jne    0x00007f73e07d9cc6
  0x00007f73e07d9cb9: addq   $0x1,0x520(%r11)
  0x00007f73e07d9cc1: jmpq   0x00007f73e07d9d2c
  0x00007f73e07d9cc6: cmp    0x528(%r11),%r9
  0x00007f73e07d9ccd: jne    0x00007f73e07d9cdc
  0x00007f73e07d9ccf: addq   $0x1,0x530(%r11)
  0x00007f73e07d9cd7: jmpq   0x00007f73e07d9d2c
  0x00007f73e07d9cdc: cmpq   $0x0,0x518(%r11)
  0x00007f73e07d9ce7: jne    0x00007f73e07d9d00
  0x00007f73e07d9ce9: mov    %r9,0x518(%r11)
  0x00007f73e07d9cf0: movq   $0x1,0x520(%r11)
  0x00007f73e07d9cfb: jmpq   0x00007f73e07d9d2c
  0x00007f73e07d9d00: cmpq   $0x0,0x528(%r11)
  0x00007f73e07d9d0b: jne    0x00007f73e07d9d24
  0x00007f73e07d9d0d: mov    %r9,0x528(%r11)
  0x00007f73e07d9d14: movq   $0x1,0x530(%r11)
  0x00007f73e07d9d1f: jmpq   0x00007f73e07d9d2c
  0x00007f73e07d9d24: addq   $0x1,0x508(%r11)
  0x00007f73e07d9d2c: mov    %rdx,%r9
  0x00007f73e07d9d2f: mov    %r8,%rdx
  0x00007f73e07d9d32: mov    %r9,%rsi           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)

  0x00007f73e07d9d35: movabs $0xffffffffffffffff,%rax
  0x00007f73e07d9d3f: callq  0x00007f73e0269380  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop [240]=Oop [288]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242 (line 1039)
                                                ;   {virtual_call}
  0x00007f73e07d9d44: cmp    $0x0,%eax
  0x00007f73e07d9d47: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9d51: movabs $0x550,%rsi
  0x00007f73e07d9d5b: jne    0x00007f73e07d9d6b
  0x00007f73e07d9d61: movabs $0x540,%rsi
  0x00007f73e07d9d6b: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07d9d6f: lea    0x1(%rdi),%rdi
  0x00007f73e07d9d73: mov    %rdi,(%rdx,%rsi,1)
  0x00007f73e07d9d77: mov    0xf0(%rsp),%r8
  0x00007f73e07d9d7f: jne    0x00007f73e07d9e26  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@245 (line 1039)

  0x00007f73e07d9d85: mov    0x18(%r8),%edx     ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@274 (line 1046)

  0x00007f73e07d9d89: cmp    $0x0,%rdx
  0x00007f73e07d9d8d: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9d97: movabs $0x5a8,%rdi
  0x00007f73e07d9da1: je     0x00007f73e07d9db1
  0x00007f73e07d9da7: movabs $0x598,%rdi
  0x00007f73e07d9db1: mov    (%rsi,%rdi,1),%rax
  0x00007f73e07d9db5: lea    0x1(%rax),%rax
  0x00007f73e07d9db9: mov    %rax,(%rsi,%rdi,1)
  0x00007f73e07d9dbd: je     0x00007f73e07d9eef  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@280 (line 1046)

  0x00007f73e07d9dc3: mov    0xec(%rsp),%ecx
  0x00007f73e07d9dca: inc    %ecx
  0x00007f73e07d9dcc: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9dd6: mov    0x108(%rsi),%edi
  0x00007f73e07d9ddc: add    $0x8,%edi
  0x00007f73e07d9ddf: mov    %edi,0x108(%rsi)
  0x00007f73e07d9de5: and    $0xfff8,%edi
  0x00007f73e07d9deb: cmp    $0x0,%edi
  0x00007f73e07d9dee: je     0x00007f73e07dac42  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x00007f73e07d9df4: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x00007f73e07d9dfb: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07d9dfe: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9e08: incl   0x5e0(%rsi)
  0x00007f73e07d9e0e: mov    %rdx,%r8
  0x00007f73e07d9e11: mov    %rcx,%rbx
  0x00007f73e07d9e14: mov    %r8,%rax
  0x00007f73e07d9e17: mov    %ebx,0xec(%rsp)
  0x00007f73e07d9e1e: jmpq   0x00007f73e07d9bb0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)

  0x00007f73e07d9e23: mov    %rax,%r8
  0x00007f73e07d9e26: mov    0xec(%rsp),%ebx
  0x00007f73e07d9e2d: mov    0xc0(%rsp),%r9d
  0x00007f73e07d9e35: mov    0x14(%r8),%edx     ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250 (line 1040)

  0x00007f73e07d9e39: cmp    $0x0,%r9d
  0x00007f73e07d9e3d: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9e47: movabs $0x570,%rdi
  0x00007f73e07d9e51: je     0x00007f73e07d9e61
  0x00007f73e07d9e57: movabs $0x560,%rdi
  0x00007f73e07d9e61: mov    (%rsi,%rdi,1),%rax
  0x00007f73e07d9e65: lea    0x1(%rax),%rax
  0x00007f73e07d9e69: mov    %rax,(%rsi,%rdi,1)
  0x00007f73e07d9e6d: je     0x00007f73e07d9e90  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256 (line 1041)

  0x00007f73e07d9e73: mov    0xc8(%rsp),%r13d
  0x00007f73e07d9e7b: mov    0xb8(%rsp),%r14
  0x00007f73e07d9e83: mov    0xb0(%rsp),%r11
  0x00007f73e07d9e8b: jmpq   0x00007f73e07da09b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x00007f73e07d9e90: mov    0xb8(%rsp),%rcx
  0x00007f73e07d9e98: movsbl 0x30(%r15),%esi
  0x00007f73e07d9e9d: cmp    $0x0,%esi
  0x00007f73e07d9ea0: jne    0x00007f73e07dac63
  0x00007f73e07d9ea6: mov    %rcx,%r10
  0x00007f73e07d9ea9: mov    %r10d,0x14(%r8)
  0x00007f73e07d9ead: lock addl $0x0,-0x40(%rsp)
  0x00007f73e07d9eb3: mov    %r8,%rax
  0x00007f73e07d9eb6: xor    %rcx,%rax
  0x00007f73e07d9eb9: shr    $0x14,%rax
  0x00007f73e07d9ebd: cmp    $0x0,%rax
  0x00007f73e07d9ec1: jne    0x00007f73e07dac7f  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@262 (line 1042)

  0x00007f73e07d9ec7: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9ed1: incl   0x580(%rsi)
  0x00007f73e07d9ed7: mov    0xc8(%rsp),%r13d
  0x00007f73e07d9edf: mov    %rcx,%r14
  0x00007f73e07d9ee2: mov    0xb0(%rsp),%r11
  0x00007f73e07d9eea: jmpq   0x00007f73e07da09b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@265 (line 1042)

  0x00007f73e07d9eef: mov    0xec(%rsp),%ebx
  0x00007f73e07d9ef6: mov    0xc8(%rsp),%esi
  0x00007f73e07d9efd: mov    0xc0(%rsp),%r9d
  0x00007f73e07d9f05: mov    0xb8(%rsp),%rcx
  0x00007f73e07d9f0d: mov    0xb0(%rsp),%rdx
  0x00007f73e07d9f15: mov    %rdx,%r11
  0x00007f73e07d9f18: movabs $0x80029e7d8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d9f22: mov    %rcx,%r14
  0x00007f73e07d9f25: mov    %rsi,%r13
  0x00007f73e07d9f28: mov    0x118(%r15),%rax
  0x00007f73e07d9f2f: lea    0x20(%rax),%rdi
  0x00007f73e07d9f33: cmp    0x128(%r15),%rdi
  0x00007f73e07d9f3a: ja     0x00007f73e07dac97
  0x00007f73e07d9f40: mov    %rdi,0x118(%r15)
  0x00007f73e07d9f47: mov    0xb8(%rdx),%rcx
  0x00007f73e07d9f4e: mov    %rcx,(%rax)
  0x00007f73e07d9f51: mov    %rdx,%rcx
  0x00007f73e07d9f54: movabs $0x800000000,%r12
  0x00007f73e07d9f5e: sub    %r12,%rcx
  0x00007f73e07d9f61: shr    $0x3,%rcx
  0x00007f73e07d9f65: xor    %r12,%r12
  0x00007f73e07d9f68: mov    %ecx,0x8(%rax)
  0x00007f73e07d9f6b: xor    %rcx,%rcx
  0x00007f73e07d9f6e: mov    %ecx,0xc(%rax)
  0x00007f73e07d9f71: xor    %rcx,%rcx
  0x00007f73e07d9f74: mov    %rcx,0x10(%rax)
  0x00007f73e07d9f78: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)

  0x00007f73e07d9f7c: mov    %rax,%rdx
  0x00007f73e07d9f7f: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07d9f89: addq   $0x1,0x5b8(%rcx)
  0x00007f73e07d9f91: movabs $0x7f73d350e158,%rdx  ;   {metadata(method data for {method} {0x000000080029efd8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d9f9b: mov    0x104(%rdx),%ecx
  0x00007f73e07d9fa1: add    $0x8,%ecx
  0x00007f73e07d9fa4: mov    %ecx,0x104(%rdx)
  0x00007f73e07d9faa: and    $0x7ffff8,%ecx
  0x00007f73e07d9fb0: cmp    $0x0,%ecx
  0x00007f73e07d9fb3: je     0x00007f73e07daca4
  0x00007f73e07d9fb9: mov    %rax,%rdx
  0x00007f73e07d9fbc: movabs $0x7f73d350e158,%rcx  ;   {metadata(method data for {method} {0x000000080029efd8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07d9fc6: addq   $0x1,0x140(%rcx)
  0x00007f73e07d9fce: movabs $0x7f73d350be50,%rdx  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07d9fd8: mov    0x104(%rdx),%ecx
  0x00007f73e07d9fde: add    $0x8,%ecx
  0x00007f73e07d9fe1: mov    %ecx,0x104(%rdx)
  0x00007f73e07d9fe7: and    $0x7ffff8,%ecx
  0x00007f73e07d9fed: cmp    $0x0,%ecx
  0x00007f73e07d9ff0: je     0x00007f73e07dacc5
  0x00007f73e07d9ff6: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6 (line 632)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x00007f73e07d9ffa: movsbl 0x30(%r15),%edx
  0x00007f73e07d9fff: cmp    $0x0,%edx
  0x00007f73e07da002: jne    0x00007f73e07dace6
  0x00007f73e07da008: mov    %r11,%r10
  0x00007f73e07da00b: mov    %r10d,0x10(%rax)
  0x00007f73e07da00f: mov    %rax,%rdx
  0x00007f73e07da012: xor    %r11,%rdx
  0x00007f73e07da015: shr    $0x14,%rdx
  0x00007f73e07da019: cmp    $0x0,%rdx
  0x00007f73e07da01d: jne    0x00007f73e07dad01  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@11 (line 633)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x00007f73e07da023: movsbl 0x30(%r15),%edx
  0x00007f73e07da028: cmp    $0x0,%edx
  0x00007f73e07da02b: jne    0x00007f73e07dad19
  0x00007f73e07da031: mov    %r14,%r10
  0x00007f73e07da034: mov    %r10d,0x14(%rax)
  0x00007f73e07da038: lock addl $0x0,-0x40(%rsp)
  0x00007f73e07da03e: mov    %rax,%rdx
  0x00007f73e07da041: xor    %r14,%rdx
  0x00007f73e07da044: shr    $0x14,%rdx
  0x00007f73e07da048: cmp    $0x0,%rdx
  0x00007f73e07da04c: jne    0x00007f73e07dad34  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16 (line 634)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)

  0x00007f73e07da052: movsbl 0x30(%r15),%edx
  0x00007f73e07da057: cmp    $0x0,%edx
  0x00007f73e07da05a: jne    0x00007f73e07dad4c
  0x00007f73e07da060: mov    %rax,%r10
  0x00007f73e07da063: mov    %r10d,0x18(%r8)
  0x00007f73e07da067: lock addl $0x0,-0x40(%rsp)
  0x00007f73e07da06d: mov    %r8,%rdx
  0x00007f73e07da070: xor    %rax,%rdx
  0x00007f73e07da073: shr    $0x14,%rdx
  0x00007f73e07da077: cmp    $0x0,%rdx
  0x00007f73e07da07b: jne    0x00007f73e07dad68  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@296 (line 1047)

  0x00007f73e07da081: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da08b: incl   0x5c8(%rdx)
  0x00007f73e07da091: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299 (line 1048)
                                                ;   {oop(NULL)}
  0x00007f73e07da09b: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da0a5: incl   0x5f8(%rcx)
  0x00007f73e07da0ab: mov    %rdx,%rdi
  0x00007f73e07da0ae: mov    %rbx,%rax
  0x00007f73e07da0b1: mov    %r9,%r8
  0x00007f73e07da0b4: mov    %r14,%rcx
  0x00007f73e07da0b7: jmpq   0x00007f73e07da5fc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308 (line 1035)

  0x00007f73e07da0bc: mov    %rbx,0xd8(%rsp)
  0x00007f73e07da0c4: mov    0xc8(%rsp),%r13d
  0x00007f73e07da0cc: mov    0xc0(%rsp),%r9d
  0x00007f73e07da0d4: mov    0xb8(%rsp),%r14
  0x00007f73e07da0dc: mov    0xb0(%rsp),%r11
  0x00007f73e07da0e4: cmp    $0x0,%rdi
  0x00007f73e07da0e8: jne    0x00007f73e07da101
  0x00007f73e07da0ea: movabs $0x7f73d350d850,%r8  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da0f4: orb    $0x1,0x609(%r8)
  0x00007f73e07da0fc: jmpq   0x00007f73e07da213
  0x00007f73e07da101: nopl   0x0(%rax)
  0x00007f73e07da108: jmpq   0x00007f73e07dad8f  ;   {no_reloc}
  0x00007f73e07da10d: add    %al,(%rax)
  0x00007f73e07da10f: add    %al,(%rax)
  0x00007f73e07da111: add    %al,0x47(%rbx,%rcx,4)
  0x00007f73e07da115: or     %cl,-0x3f(%rcx)
  0x00007f73e07da118: loopne 0x00007f73e07da11d
  0x00007f73e07da11a: movabs $0x800000000,%r12
  0x00007f73e07da124: add    %r12,%r8
  0x00007f73e07da127: xor    %r12,%r12
  0x00007f73e07da12a: cmp    %rsi,%r8
  0x00007f73e07da12d: je     0x00007f73e07da15d
  0x00007f73e07da133: mov    0x10(%rsi),%ecx
  0x00007f73e07da136: cmp    (%r8,%rcx,1),%rsi
  0x00007f73e07da13a: je     0x00007f73e07da15d
  0x00007f73e07da140: cmp    $0x20,%ecx
  0x00007f73e07da143: jne    0x00007f73e07da1f7
  0x00007f73e07da149: push   %r8
  0x00007f73e07da14b: push   %rsi
  0x00007f73e07da14c: callq  0x00007f73e0332c00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007f73e07da151: pop    %r8
  0x00007f73e07da153: pop    %rsi
  0x00007f73e07da154: cmp    $0x0,%esi
  0x00007f73e07da157: je     0x00007f73e07da1f7
  0x00007f73e07da15d: movabs $0x7f73d350d850,%r8  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da167: mov    0x8(%rdi),%esi
  0x00007f73e07da16a: shl    $0x3,%rsi
  0x00007f73e07da16e: movabs $0x800000000,%r12
  0x00007f73e07da178: add    %r12,%rsi
  0x00007f73e07da17b: xor    %r12,%r12
  0x00007f73e07da17e: cmp    0x620(%r8),%rsi
  0x00007f73e07da185: jne    0x00007f73e07da194
  0x00007f73e07da187: addq   $0x1,0x628(%r8)
  0x00007f73e07da18f: jmpq   0x00007f73e07da218
  0x00007f73e07da194: cmp    0x630(%r8),%rsi
  0x00007f73e07da19b: jne    0x00007f73e07da1aa
  0x00007f73e07da19d: addq   $0x1,0x638(%r8)
  0x00007f73e07da1a5: jmpq   0x00007f73e07da218
  0x00007f73e07da1aa: cmpq   $0x0,0x620(%r8)
  0x00007f73e07da1b5: jne    0x00007f73e07da1ce
  0x00007f73e07da1b7: mov    %rsi,0x620(%r8)
  0x00007f73e07da1be: movq   $0x1,0x628(%r8)
  0x00007f73e07da1c9: jmpq   0x00007f73e07da218
  0x00007f73e07da1ce: cmpq   $0x0,0x630(%r8)
  0x00007f73e07da1d9: jne    0x00007f73e07da1f2
  0x00007f73e07da1db: mov    %rsi,0x630(%r8)
  0x00007f73e07da1e2: movq   $0x1,0x638(%r8)
  0x00007f73e07da1ed: jmpq   0x00007f73e07da218
  0x00007f73e07da1f2: jmpq   0x00007f73e07da218
  0x00007f73e07da1f7: movabs $0x7f73d350d850,%r8  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da201: subq   $0x1,0x610(%r8)
  0x00007f73e07da209: jmpq   0x00007f73e07da213
  0x00007f73e07da20e: jmpq   0x00007f73e07da218
  0x00007f73e07da213: xor    %rdx,%rdx
  0x00007f73e07da216: jmp    0x00007f73e07da222
  0x00007f73e07da218: movabs $0x1,%rdx          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)

  0x00007f73e07da222: cmp    $0x0,%edx
  0x00007f73e07da225: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da22f: movabs $0x648,%rcx
  0x00007f73e07da239: je     0x00007f73e07da249
  0x00007f73e07da23f: movabs $0x658,%rcx
  0x00007f73e07da249: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07da24d: lea    0x1(%r8),%r8
  0x00007f73e07da251: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07da255: je     0x00007f73e07da4a1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@316 (line 1052)

  0x00007f73e07da25b: cmp    $0x0,%rdi
  0x00007f73e07da25f: jne    0x00007f73e07da277
  0x00007f73e07da261: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da26b: orb    $0x1,0x661(%rcx)
  0x00007f73e07da272: jmpq   0x00007f73e07da380
  0x00007f73e07da277: nop
  0x00007f73e07da278: jmpq   0x00007f73e07dada8  ;   {no_reloc}
  0x00007f73e07da27d: add    %al,(%rax)
  0x00007f73e07da27f: add    %al,(%rax)
  0x00007f73e07da281: add    %cl,-0x3eb7f7b1(%rbx)
  0x00007f73e07da287: loope  0x00007f73e07da28c
  0x00007f73e07da289: movabs $0x800000000,%r12
  0x00007f73e07da293: add    %r12,%rcx
  0x00007f73e07da296: xor    %r12,%r12
  0x00007f73e07da299: cmp    %rbx,%rcx
  0x00007f73e07da29c: je     0x00007f73e07da2ca
  0x00007f73e07da2a2: mov    0x10(%rbx),%edx
  0x00007f73e07da2a5: cmp    (%rcx,%rdx,1),%rbx
  0x00007f73e07da2a9: je     0x00007f73e07da2ca
  0x00007f73e07da2af: cmp    $0x20,%edx
  0x00007f73e07da2b2: jne    0x00007f73e07da364
  0x00007f73e07da2b8: push   %rcx
  0x00007f73e07da2b9: push   %rbx
  0x00007f73e07da2ba: callq  0x00007f73e0332c00  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00007f73e07da2bf: pop    %rcx
  0x00007f73e07da2c0: pop    %rbx
  0x00007f73e07da2c1: cmp    $0x0,%ebx
  0x00007f73e07da2c4: je     0x00007f73e07da364
  0x00007f73e07da2ca: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da2d4: mov    0x8(%rdi),%ebx
  0x00007f73e07da2d7: shl    $0x3,%rbx
  0x00007f73e07da2db: movabs $0x800000000,%r12
  0x00007f73e07da2e5: add    %r12,%rbx
  0x00007f73e07da2e8: xor    %r12,%r12
  0x00007f73e07da2eb: cmp    0x678(%rcx),%rbx
  0x00007f73e07da2f2: jne    0x00007f73e07da301
  0x00007f73e07da2f4: addq   $0x1,0x680(%rcx)
  0x00007f73e07da2fc: jmpq   0x00007f73e07da380
  0x00007f73e07da301: cmp    0x688(%rcx),%rbx
  0x00007f73e07da308: jne    0x00007f73e07da317
  0x00007f73e07da30a: addq   $0x1,0x690(%rcx)
  0x00007f73e07da312: jmpq   0x00007f73e07da380
  0x00007f73e07da317: cmpq   $0x0,0x678(%rcx)
  0x00007f73e07da322: jne    0x00007f73e07da33b
  0x00007f73e07da324: mov    %rbx,0x678(%rcx)
  0x00007f73e07da32b: movq   $0x1,0x680(%rcx)
  0x00007f73e07da336: jmpq   0x00007f73e07da380
  0x00007f73e07da33b: cmpq   $0x0,0x688(%rcx)
  0x00007f73e07da346: jne    0x00007f73e07da35f
  0x00007f73e07da348: mov    %rbx,0x688(%rcx)
  0x00007f73e07da34f: movq   $0x1,0x690(%rcx)
  0x00007f73e07da35a: jmpq   0x00007f73e07da380
  0x00007f73e07da35f: jmpq   0x00007f73e07da380
  0x00007f73e07da364: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da36e: subq   $0x1,0x668(%rcx)
  0x00007f73e07da376: jmpq   0x00007f73e07dadb2
  0x00007f73e07da37b: jmpq   0x00007f73e07da380
  0x00007f73e07da380: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)

  0x00007f73e07da383: mov    %r13,%rdx
  0x00007f73e07da386: mov    %r11,%rcx
  0x00007f73e07da389: mov    %r14,%r8           ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)

  0x00007f73e07da38c: nop
  0x00007f73e07da38d: movabs $0xffffffffffffffff,%rax
  0x00007f73e07da397: callq  0x00007f73e0269380  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331 (line 1055)
                                                ;   {virtual_call}
  0x00007f73e07da39c: cmp    $0x0,%rax
  0x00007f73e07da3a0: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da3aa: movabs $0x6e8,%rcx
  0x00007f73e07da3b4: jne    0x00007f73e07da3c4
  0x00007f73e07da3ba: movabs $0x6d8,%rcx
  0x00007f73e07da3c4: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07da3c8: lea    0x1(%rsi),%rsi
  0x00007f73e07da3cc: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07da3d0: jne    0x00007f73e07da3f5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@337 (line 1055)

  0x00007f73e07da3d6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07da3e0: mov    0xc0(%rsp),%r8d
  0x00007f73e07da3e8: mov    0xb8(%rsp),%rcx
  0x00007f73e07da3f0: jmpq   0x00007f73e07da484  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x00007f73e07da3f5: mov    0xc0(%rsp),%r8d
  0x00007f73e07da3fd: mov    0x14(%rax),%edx    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)
                                                ; implicit exception: dispatches to 0x00007f73e07dadbb
  0x00007f73e07da400: cmp    $0x0,%r8d
  0x00007f73e07da404: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da40e: movabs $0x708,%rsi
  0x00007f73e07da418: je     0x00007f73e07da428
  0x00007f73e07da41e: movabs $0x6f8,%rsi
  0x00007f73e07da428: mov    (%rcx,%rsi,1),%rdi
  0x00007f73e07da42c: lea    0x1(%rdi),%rdi
  0x00007f73e07da430: mov    %rdi,(%rcx,%rsi,1)
  0x00007f73e07da434: je     0x00007f73e07da44a  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@348 (line 1058)

  0x00007f73e07da43a: mov    %rdx,%rax
  0x00007f73e07da43d: mov    0xb8(%rsp),%rcx
  0x00007f73e07da445: jmpq   0x00007f73e07da484  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x00007f73e07da44a: mov    0xb8(%rsp),%rcx
  0x00007f73e07da452: movsbl 0x30(%r15),%esi
  0x00007f73e07da457: cmp    $0x0,%esi
  0x00007f73e07da45a: jne    0x00007f73e07dadc0
  0x00007f73e07da460: mov    %rcx,%r10
  0x00007f73e07da463: mov    %r10d,0x14(%rax)
  0x00007f73e07da467: lock addl $0x0,-0x40(%rsp)
  0x00007f73e07da46d: mov    %rax,%rsi
  0x00007f73e07da470: xor    %rcx,%rsi
  0x00007f73e07da473: shr    $0x14,%rsi
  0x00007f73e07da477: cmp    $0x0,%rsi
  0x00007f73e07da47b: jne    0x00007f73e07daddb  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@354 (line 1059)

  0x00007f73e07da481: mov    %rdx,%rax
  0x00007f73e07da484: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da48e: incl   0x718(%rdx)
  0x00007f73e07da494: mov    %rax,%rdi
  0x00007f73e07da497: mov    $0x2,%eax
  0x00007f73e07da49c: jmpq   0x00007f73e07da5fc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357 (line 1061)

  0x00007f73e07da4a1: mov    %r9,%r8
  0x00007f73e07da4a4: mov    %r14,%rcx
  0x00007f73e07da4a7: cmp    $0x0,%rdi
  0x00007f73e07da4ab: jne    0x00007f73e07da4c3
  0x00007f73e07da4ad: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da4b7: orb    $0x1,0x729(%rsi)
  0x00007f73e07da4be: jmpq   0x00007f73e07da5a3
  0x00007f73e07da4c3: movabs $0x800346ec0,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$ReservationNode')}
  0x00007f73e07da4cd: mov    0x8(%rdi),%edx
  0x00007f73e07da4d0: shl    $0x3,%rdx
  0x00007f73e07da4d4: movabs $0x800000000,%r12
  0x00007f73e07da4de: add    %r12,%rdx
  0x00007f73e07da4e1: xor    %r12,%r12
  0x00007f73e07da4e4: cmp    %rdx,%rbx
  0x00007f73e07da4e7: jne    0x00007f73e07da587
  0x00007f73e07da4ed: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da4f7: mov    0x8(%rdi),%ebx
  0x00007f73e07da4fa: shl    $0x3,%rbx
  0x00007f73e07da4fe: movabs $0x800000000,%r12
  0x00007f73e07da508: add    %r12,%rbx
  0x00007f73e07da50b: xor    %r12,%r12
  0x00007f73e07da50e: cmp    0x740(%rsi),%rbx
  0x00007f73e07da515: jne    0x00007f73e07da524
  0x00007f73e07da517: addq   $0x1,0x748(%rsi)
  0x00007f73e07da51f: jmpq   0x00007f73e07da5a8
  0x00007f73e07da524: cmp    0x750(%rsi),%rbx
  0x00007f73e07da52b: jne    0x00007f73e07da53a
  0x00007f73e07da52d: addq   $0x1,0x758(%rsi)
  0x00007f73e07da535: jmpq   0x00007f73e07da5a8
  0x00007f73e07da53a: cmpq   $0x0,0x740(%rsi)
  0x00007f73e07da545: jne    0x00007f73e07da55e
  0x00007f73e07da547: mov    %rbx,0x740(%rsi)
  0x00007f73e07da54e: movq   $0x1,0x748(%rsi)
  0x00007f73e07da559: jmpq   0x00007f73e07da5a8
  0x00007f73e07da55e: cmpq   $0x0,0x750(%rsi)
  0x00007f73e07da569: jne    0x00007f73e07da582
  0x00007f73e07da56b: mov    %rbx,0x750(%rsi)
  0x00007f73e07da572: movq   $0x1,0x758(%rsi)
  0x00007f73e07da57d: jmpq   0x00007f73e07da5a8
  0x00007f73e07da582: jmpq   0x00007f73e07da5a8
  0x00007f73e07da587: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da591: subq   $0x1,0x730(%rsi)
  0x00007f73e07da599: jmpq   0x00007f73e07da5a3
  0x00007f73e07da59e: jmpq   0x00007f73e07da5a8
  0x00007f73e07da5a3: xor    %rax,%rax
  0x00007f73e07da5a6: jmp    0x00007f73e07da5b2
  0x00007f73e07da5a8: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362 (line 1062)

  0x00007f73e07da5b2: cmp    $0x0,%eax
  0x00007f73e07da5b5: movabs $0x7f73d350d850,%rax  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da5bf: movabs $0x778,%rdx
  0x00007f73e07da5c9: jne    0x00007f73e07da5d9
  0x00007f73e07da5cf: movabs $0x768,%rdx
  0x00007f73e07da5d9: mov    (%rax,%rdx,1),%rsi
  0x00007f73e07da5dd: lea    0x1(%rsi),%rsi
  0x00007f73e07da5e1: mov    %rsi,(%rax,%rdx,1)
  0x00007f73e07da5e5: jne    0x00007f73e07da851  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@365 (line 1062)

  0x00007f73e07da5eb: mov    0xc4(%rsp),%eax
  0x00007f73e07da5f2: movabs $0x0,%rdi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378 (line 1065)
                                                ;   {oop(NULL)}
  0x00007f73e07da5fc: mov    %rax,%rbx
  0x00007f73e07da5ff: lea    0x118(%rsp),%rax
  0x00007f73e07da607: mov    0x8(%rax),%rsi
  0x00007f73e07da60b: mov    (%rsi),%rdx
  0x00007f73e07da60e: and    $0x7,%rdx
  0x00007f73e07da612: cmp    $0x5,%rdx
  0x00007f73e07da616: je     0x00007f73e07da633
  0x00007f73e07da61c: mov    (%rax),%rdx
  0x00007f73e07da61f: test   %rdx,%rdx
  0x00007f73e07da622: je     0x00007f73e07da633
  0x00007f73e07da628: lock cmpxchg %rdx,(%rsi)
  0x00007f73e07da62d: jne    0x00007f73e07dadf3  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@380 (line 1065)

  0x00007f73e07da633: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da63d: incl   0x798(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@381 (line 1065)

  0x00007f73e07da643: cmp    $0x0,%ebx
  0x00007f73e07da646: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da650: movabs $0x7c0,%rsi
  0x00007f73e07da65a: jne    0x00007f73e07da66a
  0x00007f73e07da660: movabs $0x7b0,%rsi
  0x00007f73e07da66a: mov    (%rdx,%rsi,1),%rax
  0x00007f73e07da66e: lea    0x1(%rax),%rax
  0x00007f73e07da672: mov    %rax,(%rdx,%rsi,1)
  0x00007f73e07da676: jne    0x00007f73e07da6e6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@394 (line 1066)

  0x00007f73e07da67c: mov    0xd8(%rsp),%rax
  0x00007f73e07da684: mov    %rbx,%rsi
  0x00007f73e07da687: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da691: mov    0x108(%rdx),%edi
  0x00007f73e07da697: add    $0x8,%edi
  0x00007f73e07da69a: mov    %edi,0x108(%rdx)
  0x00007f73e07da6a0: and    $0xfff8,%edi
  0x00007f73e07da6a6: cmp    $0x0,%edi
  0x00007f73e07da6a9: je     0x00007f73e07dae09  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007f73e07da6af: mov    0x108(%r15),%r10   ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007f73e07da6b6: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07da6b9: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da6c3: incl   0x848(%rdx)
  0x00007f73e07da6c9: mov    %rax,%rdx
  0x00007f73e07da6cc: mov    %rsi,%rax
  0x00007f73e07da6cf: mov    %rdx,%rbx
  0x00007f73e07da6d2: mov    %eax,0xc4(%rsp)
  0x00007f73e07da6d9: mov    0xa8(%rsp),%rdi
  0x00007f73e07da6e1: jmpq   0x00007f73e07d8ed0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)

  0x00007f73e07da6e6: mov    0xd8(%rsp),%rdx
  0x00007f73e07da6ee: cmp    $0x8,%ebx
  0x00007f73e07da6f1: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da6fb: movabs $0x7e0,%rsi
  0x00007f73e07da705: jge    0x00007f73e07da715
  0x00007f73e07da70b: movabs $0x7d0,%rsi
  0x00007f73e07da715: mov    (%rcx,%rsi,1),%rax
  0x00007f73e07da719: lea    0x1(%rax),%rax
  0x00007f73e07da71d: mov    %rax,(%rcx,%rsi,1)
  0x00007f73e07da721: jge    0x00007f73e07da733  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@401 (line 1067)

  0x00007f73e07da727: mov    %ebx,0x100(%rsp)
  0x00007f73e07da72e: jmpq   0x00007f73e07da77c  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@412 (line 1069)

  0x00007f73e07da733: mov    %rdi,0xf8(%rsp)
  0x00007f73e07da73b: mov    %ebx,0x100(%rsp)
  0x00007f73e07da742: mov    0xe8(%rsp),%r9d
  0x00007f73e07da74a: mov    0xa8(%rsp),%rsi
  0x00007f73e07da752: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da75c: addq   $0x1,0x7f0(%rcx)
  0x00007f73e07da764: mov    %r9,%rcx
  0x00007f73e07da767: mov    0xa8(%rsp),%rsi    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)

  0x00007f73e07da76f: callq  0x00007f73e0269100  ; ImmutableOopMap{[168]=Oop [248]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@409 (line 1068)
                                                ;   {optimized virtual_call}
  0x00007f73e07da774: mov    0xf8(%rsp),%rdi
  0x00007f73e07da77c: cmp    $0x0,%rdi
  0x00007f73e07da780: movabs $0x7f73d350d850,%rax  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da78a: movabs $0x838,%rdx
  0x00007f73e07da794: jne    0x00007f73e07da7a4
  0x00007f73e07da79a: movabs $0x828,%rdx
  0x00007f73e07da7a4: mov    (%rax,%rdx,1),%rcx
  0x00007f73e07da7a8: lea    0x1(%rcx),%rcx
  0x00007f73e07da7ac: mov    %rcx,(%rax,%rdx,1)
  0x00007f73e07da7b0: jne    0x00007f73e07da7c2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@414 (line 1069)

  0x00007f73e07da7b6: mov    0x100(%rsp),%eax
  0x00007f73e07da7bd: jmpq   0x00007f73e07da805  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@423 (line 1075)

  0x00007f73e07da7c2: mov    %rdi,%rax
  0x00007f73e07da7c5: add    $0x130,%rsp
  0x00007f73e07da7cc: pop    %rbp
  0x00007f73e07da7cd: mov    0x108(%r15),%r10
  0x00007f73e07da7d4: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07da7d7: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@419 (line 1070)

  0x00007f73e07da7d8: mov    %rsi,%rax
  0x00007f73e07da7db: add    $0x130,%rsp
  0x00007f73e07da7e2: pop    %rbp
  0x00007f73e07da7e3: mov    0x108(%r15),%r10
  0x00007f73e07da7ea: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07da7ed: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@178 (line 1028)

  0x00007f73e07da7ee: mov    0xc4(%rsp),%eax
  0x00007f73e07da7f5: movabs $0x7f73d350d850,%rdx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da7ff: incl   0x2d8(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@100 (line 1020)

  0x00007f73e07da805: mov    0xa8(%rsp),%rsi
  0x00007f73e07da80d: mov    %rsi,%rdx
  0x00007f73e07da810: movabs $0x7f73d350d850,%rcx  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da81a: addq   $0x1,0x860(%rcx)
  0x00007f73e07da822: movabs $0x1,%rdx
  0x00007f73e07da82c: mov    %rax,%rcx          ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)

  0x00007f73e07da82f: callq  0x00007f73e07daf55  ; ImmutableOopMap{}
                                                ;*invokevirtual addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@427 (line 1075)
                                                ;   {optimized virtual_call}
  0x00007f73e07da834: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07da83e: add    $0x130,%rsp
  0x00007f73e07da845: pop    %rbp
  0x00007f73e07da846: mov    0x108(%r15),%r10
  0x00007f73e07da84d: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07da850: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@431 (line 1076)

  0x00007f73e07da851: nopl   0x0(%rax)
  0x00007f73e07da858: jmpq   0x00007f73e07dae39  ;   {no_reloc}
  0x00007f73e07da85d: add    %al,(%rax)
  0x00007f73e07da85f: add    %al,(%rax)
  0x00007f73e07da861: add    %al,0x18aba(%rax)
  0x00007f73e07da867: add    %al,(%rdi,%rcx,1)
  0x00007f73e07da86a: test   %ebx,%ecx
  0x00007f73e07da86c: add    $0x8b490000,%eax
  0x00007f73e07da871: xchg   %ebx,(%rax)
  0x00007f73e07da873: add    %eax,(%rax)
  0x00007f73e07da875: add    %cl,-0x73(%rax)
  0x00007f73e07da878: js     0x00007f73e07da8a2
  0x00007f73e07da87a: cmp    0x128(%r15),%rdi
  0x00007f73e07da881: ja     0x00007f73e07dae48
  0x00007f73e07da887: mov    %rdi,0x118(%r15)
  0x00007f73e07da88e: mov    0xb8(%rdx),%rcx
  0x00007f73e07da895: mov    %rcx,(%rax)
  0x00007f73e07da898: mov    %rdx,%rcx
  0x00007f73e07da89b: movabs $0x800000000,%r12
  0x00007f73e07da8a5: sub    %r12,%rcx
  0x00007f73e07da8a8: shr    $0x3,%rcx
  0x00007f73e07da8ac: xor    %r12,%r12
  0x00007f73e07da8af: mov    %ecx,0x8(%rax)
  0x00007f73e07da8b2: xor    %rcx,%rcx
  0x00007f73e07da8b5: mov    %ecx,0xc(%rax)
  0x00007f73e07da8b8: xor    %rcx,%rcx
  0x00007f73e07da8bb: mov    %rcx,0x10(%rax)
  0x00007f73e07da8bf: mov    %rcx,0x18(%rax)
  0x00007f73e07da8c3: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)

  0x00007f73e07da8c7: mov    %rax,%rdx
  0x00007f73e07da8ca: movabs $0x7f73d350d850,%rsi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da8d4: addq   $0x1,0x788(%rsi)
  0x00007f73e07da8dc: movabs $0xfff51ad0,%rdx   ;   {oop("Recursive update"{0x00000000fff51ad0})}
  0x00007f73e07da8e6: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)

  0x00007f73e07da8e9: mov    %rax,0x108(%rsp)
  0x00007f73e07da8f1: nopw   0x0(%rax,%rax,1)
  0x00007f73e07da8f7: callq  0x00007f73e0269100  ; ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@374 (line 1063)
                                                ;   {optimized virtual_call}
  0x00007f73e07da8fc: mov    0x108(%rsp),%rax   ; ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x00007f73e07da904: movabs $0x7f73e07da904,%rdx  ;   {section_word}
  0x00007f73e07da90e: callq  0x00007f73e0331f80  ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x00007f73e07da913: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@377 (line 1063)

  0x00007f73e07da914: nopl   0x0(%rax)
  0x00007f73e07da918: jmpq   0x00007f73e07dae64  ;   {no_reloc}
  0x00007f73e07da91d: add    %al,(%rax)
  0x00007f73e07da91f: add    %al,(%rax)
  0x00007f73e07da921: add    %cl,-0x75(%rcx)
  0x00007f73e07da924: xchg   %ebx,(%rax)
  0x00007f73e07da926: add    %eax,(%rax)
  0x00007f73e07da928: add    %cl,-0x73(%rax)
  0x00007f73e07da92b: js     0x00007f73e07da955
  0x00007f73e07da92d: cmp    0x128(%r15),%rdi
  0x00007f73e07da934: ja     0x00007f73e07dae6e
  0x00007f73e07da93a: mov    %rdi,0x118(%r15)
  0x00007f73e07da941: mov    0xb8(%rdx),%rcx
  0x00007f73e07da948: mov    %rcx,(%rax)
  0x00007f73e07da94b: mov    %rdx,%rcx
  0x00007f73e07da94e: movabs $0x800000000,%r12
  0x00007f73e07da958: sub    %r12,%rcx
  0x00007f73e07da95b: shr    $0x3,%rcx
  0x00007f73e07da95f: xor    %r12,%r12
  0x00007f73e07da962: mov    %ecx,0x8(%rax)
  0x00007f73e07da965: xor    %rcx,%rcx
  0x00007f73e07da968: mov    %ecx,0xc(%rax)
  0x00007f73e07da96b: xor    %rcx,%rcx
  0x00007f73e07da96e: mov    %rcx,0x10(%rax)
  0x00007f73e07da972: mov    %rcx,0x18(%rax)
  0x00007f73e07da976: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)

  0x00007f73e07da97a: mov    %rax,%rsi
  0x00007f73e07da97d: movabs $0x7f73d350d850,%rdi  ;   {metadata(method data for {method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07da987: addq   $0x1,0x180(%rdi)
  0x00007f73e07da98f: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)

  0x00007f73e07da992: mov    %rax,0x110(%rsp)
  0x00007f73e07da99a: nopl   0x0(%rax,%rax,1)
  0x00007f73e07da99f: callq  0x00007f73e0269100  ; ImmutableOopMap{[272]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12 (line 1011)
                                                ;   {optimized virtual_call}
  0x00007f73e07da9a4: mov    0x110(%rsp),%rax
  0x00007f73e07da9ac: jmpq   0x00007f73e07daebc  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15 (line 1011)

  0x00007f73e07da9b1: mov    0x428(%r15),%rax
  0x00007f73e07da9b8: xor    %r10,%r10
  0x00007f73e07da9bb: mov    %r10,0x428(%r15)
  0x00007f73e07da9c2: xor    %r10,%r10
  0x00007f73e07da9c5: mov    %r10,0x430(%r15)
  0x00007f73e07da9cc: mov    %rax,%rsi
  0x00007f73e07da9cf: lea    0x118(%rsp),%rax
  0x00007f73e07da9d7: mov    0x8(%rax),%rbx
  0x00007f73e07da9db: mov    (%rbx),%rdi
  0x00007f73e07da9de: and    $0x7,%rdi
  0x00007f73e07da9e2: cmp    $0x5,%rdi
  0x00007f73e07da9e6: je     0x00007f73e07daa03
  0x00007f73e07da9ec: mov    (%rax),%rdi
  0x00007f73e07da9ef: test   %rdi,%rdi
  0x00007f73e07da9f2: je     0x00007f73e07daa03
  0x00007f73e07da9f8: lock cmpxchg %rdi,(%rbx)
  0x00007f73e07da9fd: jne    0x00007f73e07dae7b  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@388 (line 1065)

  0x00007f73e07daa03: mov    %rsi,%rax
  0x00007f73e07daa06: jmpq   0x00007f73e07daebc
  0x00007f73e07daa0b: movabs $0x80034f0e8,%r10  ;   {metadata({method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07daa15: mov    %r10,0x8(%rsp)
  0x00007f73e07daa1a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07daa22: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1 (line 1011)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07daa27: jmpq   0x00007f73e07d8d37
  0x00007f73e07daa2c: callq  0x00007f73e03308a0  ; ImmutableOopMap{[184]=Oop [168]=Oop rdx=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17 (line 1012)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07daa31: movabs $0x80034f198,%r10  ;   {metadata({method} {0x000000080034f198} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07daa3b: mov    %r10,0x8(%rsp)
  0x00007f73e07daa40: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07daa48: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20 (line 1012)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07daa4d: jmpq   0x00007f73e07d8e9e
  0x00007f73e07daa52: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41 (line 1016)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07daa57: movabs $0x80034f1f0,%r10  ;   {metadata({method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07daa61: mov    %r10,0x8(%rsp)
  0x00007f73e07daa66: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07daa6e: callq  0x00007f73e0334d80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07daa73: jmpq   0x00007f73e07d8fdd
  0x00007f73e07daa78: movabs $0x80037a7a0,%r10  ;   {metadata({method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07daa82: mov    %r10,0x8(%rsp)
  0x00007f73e07daa87: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07daa8f: callq  0x00007f73e0334d80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07daa94: jmpq   0x00007f73e07d9082
  0x00007f73e07daa99: cmp    $0x0,%rsi
  0x00007f73e07daa9d: je     0x00007f73e07d90da
  0x00007f73e07daaa3: mov    %rsi,(%rsp)
  0x00007f73e07daaa7: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07daaac: jmpq   0x00007f73e07d90da
  0x00007f73e07daab1: mov    %rsi,(%rsp)
  0x00007f73e07daab5: callq  0x00007f73e0332820  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69 (line 1018)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07daaba: mov    %rdx,%rdx
  0x00007f73e07daabd: callq  0x00007f73e0331080  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83 (line 1019)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07daac2: jmpq   0x00007f73e07d929d
  0x00007f73e07daac7: movabs $0x80029efd8,%r10  ;   {metadata({method} {0x000000080029efd8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07daad1: mov    %r10,0x8(%rsp)
  0x00007f73e07daad6: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07daade: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07daae3: jmpq   0x00007f73e07d92dd
  0x00007f73e07daae8: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07daaf2: mov    %r10,0x8(%rsp)
  0x00007f73e07daaf7: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07daaff: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dab04: jmpq   0x00007f73e07d931a
  0x00007f73e07dab09: mov    0x10(%rdx),%eax
  0x00007f73e07dab0c: cmp    $0x0,%rax
  0x00007f73e07dab10: je     0x00007f73e07d932c
  0x00007f73e07dab16: mov    %rax,(%rsp)
  0x00007f73e07dab1a: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dab1f: jmpq   0x00007f73e07d932c
  0x00007f73e07dab24: cmp    $0x0,%r11
  0x00007f73e07dab28: je     0x00007f73e07d9347
  0x00007f73e07dab2e: mov    %rdx,(%rsp)
  0x00007f73e07dab32: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dab37: jmpq   0x00007f73e07d9347
  0x00007f73e07dab3c: mov    0x14(%rdx),%eax
  0x00007f73e07dab3f: cmp    $0x0,%rax
  0x00007f73e07dab43: je     0x00007f73e07d9355
  0x00007f73e07dab49: mov    %rax,(%rsp)
  0x00007f73e07dab4d: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dab52: jmpq   0x00007f73e07d9355
  0x00007f73e07dab57: cmp    $0x0,%r14
  0x00007f73e07dab5b: je     0x00007f73e07d9376
  0x00007f73e07dab61: mov    %rdx,(%rsp)
  0x00007f73e07dab65: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dab6a: jmpq   0x00007f73e07d9376
  0x00007f73e07dab6f: movabs $0x80034f248,%r10  ;   {metadata({method} {0x000000080034f248} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07dab79: mov    %r10,0x8(%rsp)
  0x00007f73e07dab7e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dab86: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1 (line 765)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94 (line 1019)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dab8b: jmpq   0x00007f73e07d93b0
  0x00007f73e07dab90: mov    (%rcx),%eax
  0x00007f73e07dab92: cmp    $0x0,%rax
  0x00007f73e07dab96: je     0x00007f73e07d93c2
  0x00007f73e07dab9c: mov    %rax,(%rsp)
  0x00007f73e07daba0: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07daba5: jmpq   0x00007f73e07d93c2
  0x00007f73e07dabaa: cmp    $0x0,%rdx
  0x00007f73e07dabae: je     0x00007f73e07d93f8
  0x00007f73e07dabb4: mov    %rcx,(%rsp)
  0x00007f73e07dabb8: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dabbd: jmpq   0x00007f73e07d93f8
  0x00007f73e07dabc2: callq  0x00007f73e03308a0  ; ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105 (line 1022)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07dabc7: mov    %rdi,0x8(%rsp)
  0x00007f73e07dabcc: mov    %rdx,(%rsp)
  0x00007f73e07dabd0: callq  0x00007f73e0333080  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187 (line 1031)
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x00007f73e07dabd5: jmpq   0x00007f73e07d98bf
  0x00007f73e07dabda: movabs $0x80034f1f0,%r10  ;   {metadata({method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07dabe4: mov    %r10,0x8(%rsp)
  0x00007f73e07dabe9: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dabf1: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dabf6: jmpq   0x00007f73e07d9909
  0x00007f73e07dabfb: movabs $0x80037a7a0,%r10  ;   {metadata({method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07dac05: mov    %r10,0x8(%rsp)
  0x00007f73e07dac0a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dac12: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dac17: jmpq   0x00007f73e07d9994
  0x00007f73e07dac1c: cmp    $0x0,%rsi
  0x00007f73e07dac20: je     0x00007f73e07d99ec
  0x00007f73e07dac26: mov    %rsi,(%rsp)
  0x00007f73e07dac2a: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dac2f: jmpq   0x00007f73e07d99ec
  0x00007f73e07dac34: mov    %rsi,(%rsp)
  0x00007f73e07dac38: callq  0x00007f73e0332820  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192 (line 1032)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07dac3d: callq  0x00007f73e03308a0  ; ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214 (line 1037)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07dac42: movabs $0x80034f0e8,%r10  ;   {metadata({method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07dac4c: mov    %r10,0x8(%rsp)
  0x00007f73e07dac51: movq   $0x131,(%rsp)
  0x00007f73e07dac59: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305 (line 1035)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dac5e: jmpq   0x00007f73e07d9df4
  0x00007f73e07dac63: mov    0x14(%r8),%esi
  0x00007f73e07dac67: cmp    $0x0,%rsi
  0x00007f73e07dac6b: je     0x00007f73e07d9ea6
  0x00007f73e07dac71: mov    %rsi,(%rsp)
  0x00007f73e07dac75: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dac7a: jmpq   0x00007f73e07d9ea6
  0x00007f73e07dac7f: cmp    $0x0,%rcx
  0x00007f73e07dac83: je     0x00007f73e07d9ec7
  0x00007f73e07dac89: mov    %r8,(%rsp)
  0x00007f73e07dac8d: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dac92: jmpq   0x00007f73e07d9ec7
  0x00007f73e07dac97: mov    %rdx,%rdx
  0x00007f73e07dac9a: callq  0x00007f73e0331080  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285 (line 1047)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07dac9f: jmpq   0x00007f73e07d9f7c
  0x00007f73e07daca4: movabs $0x80029efd8,%r10  ;   {metadata({method} {0x000000080029efd8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07dacae: mov    %r10,0x8(%rsp)
  0x00007f73e07dacb3: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dacbb: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dacc0: jmpq   0x00007f73e07d9fb9
  0x00007f73e07dacc5: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07daccf: mov    %r10,0x8(%rsp)
  0x00007f73e07dacd4: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dacdc: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1 (line 631)
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293 (line 1047)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dace1: jmpq   0x00007f73e07d9ff6
  0x00007f73e07dace6: mov    0x10(%rax),%edx
  0x00007f73e07dace9: cmp    $0x0,%rdx
  0x00007f73e07daced: je     0x00007f73e07da008
  0x00007f73e07dacf3: mov    %rdx,(%rsp)
  0x00007f73e07dacf7: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dacfc: jmpq   0x00007f73e07da008
  0x00007f73e07dad01: cmp    $0x0,%r11
  0x00007f73e07dad05: je     0x00007f73e07da023
  0x00007f73e07dad0b: mov    %rax,(%rsp)
  0x00007f73e07dad0f: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dad14: jmpq   0x00007f73e07da023
  0x00007f73e07dad19: mov    0x14(%rax),%edx
  0x00007f73e07dad1c: cmp    $0x0,%rdx
  0x00007f73e07dad20: je     0x00007f73e07da031
  0x00007f73e07dad26: mov    %rdx,(%rsp)
  0x00007f73e07dad2a: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dad2f: jmpq   0x00007f73e07da031
  0x00007f73e07dad34: cmp    $0x0,%r14
  0x00007f73e07dad38: je     0x00007f73e07da052
  0x00007f73e07dad3e: mov    %rax,(%rsp)
  0x00007f73e07dad42: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dad47: jmpq   0x00007f73e07da052
  0x00007f73e07dad4c: mov    0x18(%r8),%edx
  0x00007f73e07dad50: cmp    $0x0,%rdx
  0x00007f73e07dad54: je     0x00007f73e07da060
  0x00007f73e07dad5a: mov    %rdx,(%rsp)
  0x00007f73e07dad5e: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dad63: jmpq   0x00007f73e07da060
  0x00007f73e07dad68: cmp    $0x0,%rax
  0x00007f73e07dad6c: je     0x00007f73e07da081
  0x00007f73e07dad72: mov    %r8,(%rsp)
  0x00007f73e07dad76: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dad7b: jmpq   0x00007f73e07da081
  0x00007f73e07dad80: movabs $0x0,%rsi          ;   {metadata(NULL)}
  0x00007f73e07dad8a: mov    $0xa050f00,%eax
  0x00007f73e07dad8f: callq  0x00007f73e0333e00  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313 (line 1052)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07dad94: jmpq   0x00007f73e07da108
  0x00007f73e07dad99: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x00007f73e07dada3: mov    $0xa050f00,%eax
  0x00007f73e07dada8: callq  0x00007f73e0333e00  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07dadad: jmpq   0x00007f73e07da278
  0x00007f73e07dadb2: mov    %rdi,(%rsp)
  0x00007f73e07dadb6: callq  0x00007f73e0332820  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324 (line 1055)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07dadbb: callq  0x00007f73e03308a0  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342 (line 1057)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07dadc0: mov    0x14(%rax),%esi
  0x00007f73e07dadc3: cmp    $0x0,%rsi
  0x00007f73e07dadc7: je     0x00007f73e07da460
  0x00007f73e07dadcd: mov    %rsi,(%rsp)
  0x00007f73e07dadd1: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07dadd6: jmpq   0x00007f73e07da460
  0x00007f73e07daddb: cmp    $0x0,%rcx
  0x00007f73e07daddf: je     0x00007f73e07da481
  0x00007f73e07dade5: mov    %rax,(%rsp)
  0x00007f73e07dade9: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07dadee: jmpq   0x00007f73e07da481
  0x00007f73e07dadf3: lea    0x118(%rsp),%rax
  0x00007f73e07dadfb: mov    %rax,(%rsp)
  0x00007f73e07dadff: callq  0x00007f73e0333500  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x00007f73e07dae04: jmpq   0x00007f73e07da633
  0x00007f73e07dae09: movabs $0x80034f0e8,%r10  ;   {metadata({method} {0x000000080034f0e8} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07dae13: mov    %r10,0x8(%rsp)
  0x00007f73e07dae18: movq   $0x1a4,(%rsp)
  0x00007f73e07dae20: callq  0x00007f73e0334d80  ; ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420 (line 1074)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dae25: jmpq   0x00007f73e07da6af
  0x00007f73e07dae2a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f73e07dae34: mov    $0xa050f00,%eax
  0x00007f73e07dae39: callq  0x00007f73e0333e00  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07dae3e: jmpq   0x00007f73e07da858
  0x00007f73e07dae43: callq  0x00007f73e03308a0  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07dae48: mov    %rdx,%rdx
  0x00007f73e07dae4b: callq  0x00007f73e0331380  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368 (line 1063)
                                                ;   {runtime_call fast_new_instance_init_check Runtime1 stub}
  0x00007f73e07dae50: jmpq   0x00007f73e07da8c7
  0x00007f73e07dae55: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f73e07dae5f: mov    $0xa050f00,%eax
  0x00007f73e07dae64: callq  0x00007f73e0333e00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07dae69: jmpq   0x00007f73e07da918
  0x00007f73e07dae6e: mov    %rdx,%rdx
  0x00007f73e07dae71: callq  0x00007f73e0331080  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8 (line 1011)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07dae76: jmpq   0x00007f73e07da97a
  0x00007f73e07dae7b: lea    0x118(%rsp),%rax
  0x00007f73e07dae83: mov    %rax,(%rsp)
  0x00007f73e07dae87: callq  0x00007f73e0333500  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x00007f73e07dae8c: jmpq   0x00007f73e07daa03
  0x00007f73e07dae91: nop
  0x00007f73e07dae92: nop
  0x00007f73e07dae93: mov    0x428(%r15),%rax
  0x00007f73e07dae9a: movabs $0x0,%r10
  0x00007f73e07daea4: mov    %r10,0x428(%r15)
  0x00007f73e07daeab: movabs $0x0,%r10
  0x00007f73e07daeb5: mov    %r10,0x430(%r15)
  0x00007f73e07daebc: add    $0x130,%rsp
  0x00007f73e07daec3: pop    %rbp
  0x00007f73e07daec4: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07daec9: hlt    
  0x00007f73e07daeca: hlt    
  0x00007f73e07daecb: hlt    
  0x00007f73e07daecc: hlt    
  0x00007f73e07daecd: hlt    
  0x00007f73e07daece: hlt    
  0x00007f73e07daecf: hlt    
  0x00007f73e07daed0: hlt    
  0x00007f73e07daed1: hlt    
  0x00007f73e07daed2: hlt    
  0x00007f73e07daed3: hlt    
  0x00007f73e07daed4: hlt    
  0x00007f73e07daed5: hlt    
  0x00007f73e07daed6: hlt    
  0x00007f73e07daed7: hlt    
  0x00007f73e07daed8: hlt    
  0x00007f73e07daed9: hlt    
  0x00007f73e07daeda: hlt    
  0x00007f73e07daedb: hlt    
  0x00007f73e07daedc: hlt    
  0x00007f73e07daedd: hlt    
  0x00007f73e07daede: hlt    
  0x00007f73e07daedf: hlt    
[Stub Code]
  0x00007f73e07daee0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07daee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daeef: jmpq   0x00007f73e07daeef  ;   {runtime_call}
  0x00007f73e07daef4: nop
  0x00007f73e07daef5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daeff: jmpq   0x00007f73e07daeff  ;   {runtime_call}
  0x00007f73e07daf04: nop
  0x00007f73e07daf05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daf0f: jmpq   0x00007f73e07daf0f  ;   {runtime_call}
  0x00007f73e07daf14: nop
  0x00007f73e07daf15: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daf1f: jmpq   0x00007f73e07daf1f  ;   {runtime_call}
  0x00007f73e07daf24: nop
  0x00007f73e07daf25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daf2f: jmpq   0x00007f73e07daf2f  ;   {runtime_call}
  0x00007f73e07daf34: nop
  0x00007f73e07daf35: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daf3f: jmpq   0x00007f73e07daf3f  ;   {runtime_call}
  0x00007f73e07daf44: nop
  0x00007f73e07daf45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daf4f: jmpq   0x00007f73e07daf4f  ;   {runtime_call}
  0x00007f73e07daf54: nop
  0x00007f73e07daf55: movabs $0x80034f4b0,%rbx  ;   {static_stub}
  0x00007f73e07daf5f: jmpq   0x00007f73e026aae7  ;   {runtime_call I2C/C2I adapters}
  0x00007f73e07daf64: nop
  0x00007f73e07daf65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daf6f: jmpq   0x00007f73e07daf6f  ;   {runtime_call}
  0x00007f73e07daf74: nop
  0x00007f73e07daf75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07daf7f: jmpq   0x00007f73e07daf7f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07daf84: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07daf89: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07daf93: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07daf97: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07daf9c: hlt    
[Deopt Handler Code]
  0x00007f73e07daf9d: movabs $0x7f73e07daf9d,%r10  ;   {section_word}
  0x00007f73e07dafa7: push   %r10
  0x00007f73e07dafa9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07dafae: hlt    
  0x00007f73e07dafaf: hlt    

ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 452 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }pc offsets: 716 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 2100 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop }pc offsets: 2724 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop [240]=Oop [288]=Oop }pc offsets: 4260 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 4443 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop [184]=Oop [176]=Oop [288]=Oop }pc offsets: 5884 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 6678 
ImmutableOopMap{[168]=Oop [248]=Oop }pc offsets: 6868 
ImmutableOopMap{}pc offsets: 7060 
ImmutableOopMap{[264]=Oop [208]=Oop [288]=Oop }pc offsets: 7260 
ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }pc offsets: 7268 
ImmutableOopMap{[272]=Oop }pc offsets: 7428 
ImmutableOopMap{rsi=Oop [168]=Oop rdx=Oop [176]=Oop rcx=Oop [184]=Oop }pc offsets: 7559 
ImmutableOopMap{[184]=Oop [168]=Oop rdx=Oop [176]=Oop }pc offsets: 7569 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 7597 
ImmutableOopMap{rdi=Oop [168]=Oop [184]=Oop [176]=Oop rbx=Oop }pc offsets: 7607 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rbx=Oop }pc offsets: 7635 7668 7706 
ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop }pc offsets: 7714 
ImmutableOopMap{[168]=Oop rbx=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdx=Oop }pc offsets: 7747 7780 7915 
ImmutableOopMap{[168]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop rbx=Oop }pc offsets: 7975 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop rdi=Oop [208]=Oop [288]=Oop }pc offsets: 7989 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rdi=Oop [208]=Oop rbx=Oop [288]=Oop }pc offsets: 8022 8055 8093 
ImmutableOopMap{[168]=Oop [184]=Oop rax=Oop [216]=Oop [208]=Oop rdx=Oop [176]=Oop [288]=Oop }pc offsets: 8098 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop [216]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 8126 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop [288]=Oop }pc offsets: 8191 
ImmutableOopMap{[168]=Oop [216]=Oop [208]=Oop r8=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rax=Oop [288]=Oop }pc offsets: 8224 8257 
ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop r14=Oop [184]=Oop rdi=Oop [208]=Oop [288]=Oop }pc offsets: 8436 8461 8475 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }pc offsets: 8480 
ImmutableOopMap{[168]=Oop [176]=Oop rcx=Oop [184]=Oop rax=Oop }pc offsets: 8581 
ImmutableOopMap{[208]=Oop [288]=Oop }pc offsets: 8606 8616 8624 
ImmutableOopMap{}pc offsets: 8649 8662 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0d720, 0x00007f73e7d0d740]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d355bb38} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x00007f73e7d0d720: mov    0x10(%rsp),%rbx
  0x00007f73e7d0d725: cmp    (%rsi),%rax
  0x00007f73e7d0d728: mov    0x24(%rbx),%ebx
  0x00007f73e7d0d72b: mov    0x10(%rbx),%rbx
  0x00007f73e7d0d72f: test   %rbx,%rbx
  0x00007f73e7d0d732: je     0x00007f73e7d0d73b
  0x00007f73e7d0d738: jmpq   *0x38(%rbx)
  0x00007f73e7d0d73b: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)   29753    8       2       java.lang.String::coder (15 bytes)
 total in heap  [0x00007f73e07dc310,0x00007f73e07dc648] = 824
 relocation     [0x00007f73e07dc488,0x00007f73e07dc4b0] = 40
 main code      [0x00007f73e07dc4c0,0x00007f73e07dc5a0] = 224
 stub code      [0x00007f73e07dc5a0,0x00007f73e07dc5d0] = 48
 metadata       [0x00007f73e07dc5d0,0x00007f73e07dc5d8] = 8
 scopes data    [0x00007f73e07dc5d8,0x00007f73e07dc5f0] = 24
 scopes pcs     [0x00007f73e07dc5f0,0x00007f73e07dc640] = 80
 dependencies   [0x00007f73e07dc640,0x00007f73e07dc648] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x00007f73e07dc4c0, 0x00007f73e07dc5d0]  272 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07dc4c0: mov    0x8(%rsi),%r10d
  0x00007f73e07dc4c4: shl    $0x3,%r10
  0x00007f73e07dc4c8: movabs $0x800000000,%r12
  0x00007f73e07dc4d2: add    %r12,%r10
  0x00007f73e07dc4d5: xor    %r12,%r12
  0x00007f73e07dc4d8: cmp    %rax,%r10
  0x00007f73e07dc4db: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07dc4e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dc4ec: data16 data16 xchg %ax,%ax
  0x00007f73e07dc4f0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dc4fb: data16 data16 xchg %ax,%ax
  0x00007f73e07dc4ff: nop
[Verified Entry Point]
  0x00007f73e07dc500: mov    %eax,-0x14000(%rsp)
  0x00007f73e07dc507: push   %rbp
  0x00007f73e07dc508: sub    $0x30,%rsp
  0x00007f73e07dc50c: movabs $0x7f73d34fe910,%rax
  0x00007f73e07dc516: mov    0x18(%rax),%edi
  0x00007f73e07dc519: add    $0x8,%edi
  0x00007f73e07dc51c: mov    %edi,0x18(%rax)
  0x00007f73e07dc51f: and    $0x3ff8,%edi
  0x00007f73e07dc525: cmp    $0x0,%edi
  0x00007f73e07dc528: je     0x00007f73e07dc548  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@0 (line 3258)

  0x00007f73e07dc52e: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)

  0x00007f73e07dc532: shl    $0x18,%eax
  0x00007f73e07dc535: sar    $0x18,%eax
  0x00007f73e07dc538: add    $0x30,%rsp
  0x00007f73e07dc53c: pop    %rbp
  0x00007f73e07dc53d: mov    0x108(%r15),%r10
  0x00007f73e07dc544: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07dc547: retq   
  0x00007f73e07dc548: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07dc552: mov    %r10,0x8(%rsp)
  0x00007f73e07dc557: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dc55f: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dc564: jmp    0x00007f73e07dc52e
  0x00007f73e07dc566: nop
  0x00007f73e07dc567: nop
  0x00007f73e07dc568: mov    0x428(%r15),%rax
  0x00007f73e07dc56f: movabs $0x0,%r10
  0x00007f73e07dc579: mov    %r10,0x428(%r15)
  0x00007f73e07dc580: movabs $0x0,%r10
  0x00007f73e07dc58a: mov    %r10,0x430(%r15)
  0x00007f73e07dc591: add    $0x30,%rsp
  0x00007f73e07dc595: pop    %rbp
  0x00007f73e07dc596: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07dc59b: hlt    
  0x00007f73e07dc59c: hlt    
  0x00007f73e07dc59d: hlt    
  0x00007f73e07dc59e: hlt    
  0x00007f73e07dc59f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07dc5a0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07dc5a5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07dc5af: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07dc5b3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07dc5b8: hlt    
[Deopt Handler Code]
  0x00007f73e07dc5b9: movabs $0x7f73e07dc5b9,%r10  ;   {section_word}
  0x00007f73e07dc5c3: push   %r10
  0x00007f73e07dc5c5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07dc5ca: hlt    
  0x00007f73e07dc5cb: hlt    
  0x00007f73e07dc5cc: hlt    
  0x00007f73e07dc5cd: hlt    
  0x00007f73e07dc5ce: hlt    
  0x00007f73e07dc5cf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 164 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0dd20, 0x00007f73e7d0dd38]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d355e9d0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0dd20: mov    0x24(%rdx),%ebx
  0x00007f73e7d0dd23: mov    0x10(%rbx),%rbx
  0x00007f73e7d0dd27: test   %rbx,%rbx
  0x00007f73e7d0dd2a: je     0x00007f73e7d0dd33
  0x00007f73e7d0dd30: jmpq   *0x38(%rbx)
  0x00007f73e7d0dd33: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c2)   30631   84       4       java.lang.String::charAt (25 bytes)
 total in heap  [0x00007f73e7d0d790,0x00007f73e7d0db08] = 888
 relocation     [0x00007f73e7d0d908,0x00007f73e7d0d918] = 16
 main code      [0x00007f73e7d0d920,0x00007f73e7d0d9c0] = 160
 stub code      [0x00007f73e7d0d9c0,0x00007f73e7d0d9d8] = 24
 metadata       [0x00007f73e7d0d9d8,0x00007f73e7d0d9f0] = 24
 scopes data    [0x00007f73e7d0d9f0,0x00007f73e7d0da50] = 96
 scopes pcs     [0x00007f73e7d0da50,0x00007f73e7d0daf0] = 160
 dependencies   [0x00007f73e7d0daf0,0x00007f73e7d0daf8] = 8
 nul chk table  [0x00007f73e7d0daf8,0x00007f73e7d0db08] = 16
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x00007f73e7d0d920, 0x00007f73e7d0d9d8]  184 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800339868} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007f73e7d0d920: mov    0x8(%rsi),%r10d
  0x00007f73e7d0d924: shl    $0x3,%r10
  0x00007f73e7d0d928: movabs $0x800000000,%r12
  0x00007f73e7d0d932: add    %r12,%r10
  0x00007f73e7d0d935: xor    %r12,%r12
  0x00007f73e7d0d938: cmp    %r10,%rax
  0x00007f73e7d0d93b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0d941: data16 xchg %ax,%ax
  0x00007f73e7d0d944: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d0d94c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0d950: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0d957: push   %rbp
  0x00007f73e7d0d958: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)

  0x00007f73e7d0d95c: movsbl 0x14(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x00007f73e7d0d961: test   %r11d,%r11d
  0x00007f73e7d0d964: jne    0x00007f73e7d0d987  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)

  0x00007f73e7d0d966: mov    0xc(%rsi),%ebp     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)

  0x00007f73e7d0d969: mov    0xc(%rbp),%r11d    ; implicit exception: dispatches to 0x00007f73e7d0d9ac
  0x00007f73e7d0d96d: cmp    %r11d,%edx
  0x00007f73e7d0d970: jae    0x00007f73e7d0d99c
  0x00007f73e7d0d972: movzbl 0x10(%rbp,%rdx,1),%eax  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)

  0x00007f73e7d0d977: add    $0x20,%rsp
  0x00007f73e7d0d97b: pop    %rbp
  0x00007f73e7d0d97c: mov    0x108(%r15),%r10
  0x00007f73e7d0d983: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d0d986: retq   
  0x00007f73e7d0d987: mov    %rsi,%rbp
  0x00007f73e7d0d98a: mov    %edx,(%rsp)
  0x00007f73e7d0d98d: mov    %r11d,0x4(%rsp)
  0x00007f73e7d0d992: mov    $0xffffff4d,%esi
  0x00007f73e7d0d997: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d0d99c: mov    $0xffffffe5,%esi
  0x00007f73e7d0d9a1: mov    %edx,0x4(%rsp)
  0x00007f73e7d0d9a5: xchg   %ax,%ax
  0x00007f73e7d0d9a7: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d0d9ac: mov    $0xfffffff6,%esi
  0x00007f73e7d0d9b1: mov    %edx,0x4(%rsp)
  0x00007f73e7d0d9b5: xchg   %ax,%ax
  0x00007f73e7d0d9b7: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d0d9bc: hlt    
  0x00007f73e7d0d9bd: hlt    
  0x00007f73e7d0d9be: hlt    
  0x00007f73e7d0d9bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d0d9c0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d0d9c5: callq  0x00007f73e7d0d9ca
  0x00007f73e7d0d9ca: subq   $0x5,(%rsp)
  0x00007f73e7d0d9cf: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d0d9d4: hlt    
  0x00007f73e7d0d9d5: hlt    
  0x00007f73e7d0d9d6: hlt    
  0x00007f73e7d0d9d7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 124 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 140 156 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;)Ljava/lang/Object;  [0x00007f73e7d0df20, 0x00007f73e7d0df40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d355ed68} 'invokeBasic' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0df20: mov    0x14(%rsi),%ebx
  0x00007f73e7d0df23: mov    0x28(%rbx),%ebx
  0x00007f73e7d0df26: mov    0x24(%rbx),%ebx
  0x00007f73e7d0df29: mov    0x10(%rbx),%rbx
  0x00007f73e7d0df2d: test   %rbx,%rbx
  0x00007f73e7d0df30: je     0x00007f73e7d0df39
  0x00007f73e7d0df36: jmpq   *0x38(%rbx)
  0x00007f73e7d0df39: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0df3e: hlt    
  0x00007f73e7d0df3f: hlt    
Compiled method (c1)   31358   86       3       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x00007f73e07dc690,0x00007f73e07dcb48] = 1208
 relocation     [0x00007f73e07dc808,0x00007f73e07dc838] = 48
 main code      [0x00007f73e07dc840,0x00007f73e07dc9c0] = 384
 stub code      [0x00007f73e07dc9c0,0x00007f73e07dc9f0] = 48
 metadata       [0x00007f73e07dc9f0,0x00007f73e07dc9f8] = 8
 scopes data    [0x00007f73e07dc9f8,0x00007f73e07dca60] = 104
 scopes pcs     [0x00007f73e07dca60,0x00007f73e07dcb30] = 208
 dependencies   [0x00007f73e07dcb30,0x00007f73e07dcb38] = 8
 nul chk table  [0x00007f73e07dcb38,0x00007f73e07dcb48] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x00007f73e07dc840, 0x00007f73e07dc9f0]  432 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033e558} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07dc840: mov    %eax,-0x14000(%rsp)
  0x00007f73e07dc847: push   %rbp
  0x00007f73e07dc848: sub    $0x30,%rsp
  0x00007f73e07dc84c: movabs $0x7f73d35338f0,%rax  ;   {metadata(method data for {method} {0x000000080033e558} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dc856: mov    0x104(%rax),%edi
  0x00007f73e07dc85c: add    $0x8,%edi
  0x00007f73e07dc85f: mov    %edi,0x104(%rax)
  0x00007f73e07dc865: and    $0x1ff8,%edi
  0x00007f73e07dc86b: cmp    $0x0,%edi
  0x00007f73e07dc86e: je     0x00007f73e07dc92f  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@0 (line 194)

  0x00007f73e07dc874: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ; implicit exception: dispatches to 0x00007f73e07dc950
  0x00007f73e07dc877: mov    $0x0,%edi
  0x00007f73e07dc87c: mov    $0x0,%ebx
  0x00007f73e07dc881: jmpq   0x00007f73e07dc8e4  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10 (line 195)

  0x00007f73e07dc886: xchg   %ax,%ax
  0x00007f73e07dc888: movslq %edi,%rdx
  0x00007f73e07dc88b: movsbl 0x10(%rsi,%rdx,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)

  0x00007f73e07dc890: mov    %rbx,%rcx
  0x00007f73e07dc893: shl    $0x5,%ebx
  0x00007f73e07dc896: sub    %ecx,%ebx
  0x00007f73e07dc898: and    $0xff,%edx
  0x00007f73e07dc89e: add    %edx,%ebx
  0x00007f73e07dc8a0: inc    %edi
  0x00007f73e07dc8a2: movabs $0x7f73d35338f0,%rdx  ;   {metadata(method data for {method} {0x000000080033e558} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dc8ac: mov    0x108(%rdx),%ecx
  0x00007f73e07dc8b2: add    $0x8,%ecx
  0x00007f73e07dc8b5: mov    %ecx,0x108(%rdx)
  0x00007f73e07dc8bb: and    $0xfff8,%ecx
  0x00007f73e07dc8c1: cmp    $0x0,%ecx
  0x00007f73e07dc8c4: je     0x00007f73e07dc955  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x00007f73e07dc8ca: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x00007f73e07dc8d1: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07dc8d4: movabs $0x7f73d35338f0,%rdx  ;   {metadata(method data for {method} {0x000000080033e558} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dc8de: incl   0x160(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)

  0x00007f73e07dc8e4: cmp    %eax,%edi
  0x00007f73e07dc8e6: movabs $0x7f73d35338f0,%rdx  ;   {metadata(method data for {method} {0x000000080033e558} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dc8f0: movabs $0x150,%rcx
  0x00007f73e07dc8fa: jl     0x00007f73e07dc90a
  0x00007f73e07dc900: movabs $0x140,%rcx
  0x00007f73e07dc90a: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07dc90e: lea    0x1(%r8),%r8
  0x00007f73e07dc912: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07dc916: jl     0x00007f73e07dc888  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)

  0x00007f73e07dc91c: mov    %rbx,%rax
  0x00007f73e07dc91f: add    $0x30,%rsp
  0x00007f73e07dc923: pop    %rbp
  0x00007f73e07dc924: mov    0x108(%r15),%r10
  0x00007f73e07dc92b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07dc92e: retq   
  0x00007f73e07dc92f: movabs $0x80033e558,%r10  ;   {metadata({method} {0x000000080033e558} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dc939: mov    %r10,0x8(%rsp)
  0x00007f73e07dc93e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dc946: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1 (line 194)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dc94b: jmpq   0x00007f73e07dc874
  0x00007f73e07dc950: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5 (line 195)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07dc955: movabs $0x80033e558,%r10  ;   {metadata({method} {0x000000080033e558} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dc95f: mov    %r10,0x8(%rsp)
  0x00007f73e07dc964: movq   $0x25,(%rsp)
  0x00007f73e07dc96c: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dc971: jmpq   0x00007f73e07dc8ca
  0x00007f73e07dc976: nop
  0x00007f73e07dc977: nop
  0x00007f73e07dc978: mov    0x428(%r15),%rax
  0x00007f73e07dc97f: movabs $0x0,%r10
  0x00007f73e07dc989: mov    %r10,0x428(%r15)
  0x00007f73e07dc990: movabs $0x0,%r10
  0x00007f73e07dc99a: mov    %r10,0x430(%r15)
  0x00007f73e07dc9a1: add    $0x30,%rsp
  0x00007f73e07dc9a5: pop    %rbp
  0x00007f73e07dc9a6: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07dc9ab: hlt    
  0x00007f73e07dc9ac: hlt    
  0x00007f73e07dc9ad: hlt    
  0x00007f73e07dc9ae: hlt    
  0x00007f73e07dc9af: hlt    
  0x00007f73e07dc9b0: hlt    
  0x00007f73e07dc9b1: hlt    
  0x00007f73e07dc9b2: hlt    
  0x00007f73e07dc9b3: hlt    
  0x00007f73e07dc9b4: hlt    
  0x00007f73e07dc9b5: hlt    
  0x00007f73e07dc9b6: hlt    
  0x00007f73e07dc9b7: hlt    
  0x00007f73e07dc9b8: hlt    
  0x00007f73e07dc9b9: hlt    
  0x00007f73e07dc9ba: hlt    
  0x00007f73e07dc9bb: hlt    
  0x00007f73e07dc9bc: hlt    
  0x00007f73e07dc9bd: hlt    
  0x00007f73e07dc9be: hlt    
  0x00007f73e07dc9bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07dc9c0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07dc9c5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07dc9cf: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07dc9d3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07dc9d8: hlt    
[Deopt Handler Code]
  0x00007f73e07dc9d9: movabs $0x7f73e07dc9d9,%r10  ;   {section_word}
  0x00007f73e07dc9e3: push   %r10
  0x00007f73e07dc9e5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07dc9ea: hlt    
  0x00007f73e07dc9eb: hlt    
  0x00007f73e07dc9ec: hlt    
  0x00007f73e07dc9ed: hlt    
  0x00007f73e07dc9ee: hlt    
  0x00007f73e07dc9ef: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 145 267 277 305 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0e120, 0x00007f73e7d0e140]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d355ee80} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0e120: cmp    (%rsi),%rax
  0x00007f73e7d0e123: mov    0x24(%rcx),%ebx
  0x00007f73e7d0e126: mov    0x10(%rbx),%rbx
  0x00007f73e7d0e12a: test   %rbx,%rbx
  0x00007f73e7d0e12d: je     0x00007f73e7d0e136
  0x00007f73e7d0e133: jmpq   *0x38(%rbx)
  0x00007f73e7d0e136: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0e13b: hlt    
  0x00007f73e7d0e13c: hlt    
  0x00007f73e7d0e13d: hlt    
  0x00007f73e7d0e13e: hlt    
  0x00007f73e7d0e13f: hlt    
Compiled method (c1)   32362    3       2       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x00007f73e07dcb90,0x00007f73e07dcee8] = 856
 relocation     [0x00007f73e07dcd08,0x00007f73e07dcd30] = 40
 main code      [0x00007f73e07dcd40,0x00007f73e07dce40] = 256
 stub code      [0x00007f73e07dce40,0x00007f73e07dce70] = 48
 metadata       [0x00007f73e07dce70,0x00007f73e07dce78] = 8
 scopes data    [0x00007f73e07dce78,0x00007f73e07dce90] = 24
 scopes pcs     [0x00007f73e07dce90,0x00007f73e07dcee0] = 80
 dependencies   [0x00007f73e07dcee0,0x00007f73e07dcee8] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x00007f73e07dcd40, 0x00007f73e07dce70]  304 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07dcd40: mov    0x8(%rsi),%r10d
  0x00007f73e07dcd44: shl    $0x3,%r10
  0x00007f73e07dcd48: movabs $0x800000000,%r12
  0x00007f73e07dcd52: add    %r12,%r10
  0x00007f73e07dcd55: xor    %r12,%r12
  0x00007f73e07dcd58: cmp    %rax,%r10
  0x00007f73e07dcd5b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07dcd61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dcd6c: data16 data16 xchg %ax,%ax
  0x00007f73e07dcd70: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dcd7b: data16 data16 xchg %ax,%ax
  0x00007f73e07dcd7f: nop
[Verified Entry Point]
  0x00007f73e07dcd80: mov    %eax,-0x14000(%rsp)
  0x00007f73e07dcd87: push   %rbp
  0x00007f73e07dcd88: sub    $0x30,%rsp
  0x00007f73e07dcd8c: movabs $0x7f73d34fdd80,%rax
  0x00007f73e07dcd96: mov    0x18(%rax),%edi
  0x00007f73e07dcd99: add    $0x8,%edi
  0x00007f73e07dcd9c: mov    %edi,0x18(%rax)
  0x00007f73e07dcd9f: and    $0x3ff8,%edi
  0x00007f73e07dcda5: cmp    $0x0,%edi
  0x00007f73e07dcda8: je     0x00007f73e07dcdd8  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@0 (line 3266)

  0x00007f73e07dcdae: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)

  0x00007f73e07dcdb2: cmp    $0x0,%eax
  0x00007f73e07dcdb5: mov    $0x0,%eax
  0x00007f73e07dcdba: jne    0x00007f73e07dcdc5
  0x00007f73e07dcdc0: mov    $0x1,%eax
  0x00007f73e07dcdc5: and    $0x1,%eax
  0x00007f73e07dcdc8: add    $0x30,%rsp
  0x00007f73e07dcdcc: pop    %rbp
  0x00007f73e07dcdcd: mov    0x108(%r15),%r10
  0x00007f73e07dcdd4: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07dcdd7: retq   
  0x00007f73e07dcdd8: movabs $0x80033ac68,%r10  ;   {metadata({method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07dcde2: mov    %r10,0x8(%rsp)
  0x00007f73e07dcde7: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dcdef: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dcdf4: jmp    0x00007f73e07dcdae
  0x00007f73e07dcdf6: nop
  0x00007f73e07dcdf7: nop
  0x00007f73e07dcdf8: mov    0x428(%r15),%rax
  0x00007f73e07dcdff: movabs $0x0,%r10
  0x00007f73e07dce09: mov    %r10,0x428(%r15)
  0x00007f73e07dce10: movabs $0x0,%r10
  0x00007f73e07dce1a: mov    %r10,0x430(%r15)
  0x00007f73e07dce21: add    $0x30,%rsp
  0x00007f73e07dce25: pop    %rbp
  0x00007f73e07dce26: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07dce2b: hlt    
  0x00007f73e07dce2c: hlt    
  0x00007f73e07dce2d: hlt    
  0x00007f73e07dce2e: hlt    
  0x00007f73e07dce2f: hlt    
  0x00007f73e07dce30: hlt    
  0x00007f73e07dce31: hlt    
  0x00007f73e07dce32: hlt    
  0x00007f73e07dce33: hlt    
  0x00007f73e07dce34: hlt    
  0x00007f73e07dce35: hlt    
  0x00007f73e07dce36: hlt    
  0x00007f73e07dce37: hlt    
  0x00007f73e07dce38: hlt    
  0x00007f73e07dce39: hlt    
  0x00007f73e07dce3a: hlt    
  0x00007f73e07dce3b: hlt    
  0x00007f73e07dce3c: hlt    
  0x00007f73e07dce3d: hlt    
  0x00007f73e07dce3e: hlt    
  0x00007f73e07dce3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07dce40: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07dce45: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07dce4f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07dce53: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07dce58: hlt    
[Deopt Handler Code]
  0x00007f73e07dce59: movabs $0x7f73e07dce59,%r10  ;   {section_word}
  0x00007f73e07dce63: push   %r10
  0x00007f73e07dce65: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07dce6a: hlt    
  0x00007f73e07dce6b: hlt    
  0x00007f73e07dce6c: hlt    
  0x00007f73e07dce6d: hlt    
  0x00007f73e07dce6e: hlt    
  0x00007f73e07dce6f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 180 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z  [0x00007f73e7d0e340, 0x00007f73e7d0e578]  568 bytes
[Entry Point]
  # {method} {0x000000080037b350} 'compareAndSetObject' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = 'java/lang/Object'
  # parm3:    r9:r9     = 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d0e340: mov    0x8(%rsi),%r10d
  0x00007f73e7d0e344: shl    $0x3,%r10
  0x00007f73e7d0e348: movabs $0x800000000,%r12
  0x00007f73e7d0e352: add    %r12,%r10
  0x00007f73e7d0e355: xor    %r12,%r12
  0x00007f73e7d0e358: cmp    %r10,%rax
  0x00007f73e7d0e35b: je     0x00007f73e7d0e368
  0x00007f73e7d0e361: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0e366: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0e368: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0e36f: push   %rbp
  0x00007f73e7d0e370: mov    %rsp,%rbp
  0x00007f73e7d0e373: sub    $0x40,%rsp
  0x00007f73e7d0e377: mov    %r9,0x20(%rsp)
  0x00007f73e7d0e37c: cmp    $0x0,%r9
  0x00007f73e7d0e380: lea    0x20(%rsp),%r9
  0x00007f73e7d0e385: cmove  0x20(%rsp),%r9
  0x00007f73e7d0e38b: mov    %r8,0x18(%rsp)
  0x00007f73e7d0e390: cmp    $0x0,%r8
  0x00007f73e7d0e394: lea    0x18(%rsp),%r8
  0x00007f73e7d0e399: cmove  0x18(%rsp),%r8
  0x00007f73e7d0e39f: mov    %rdx,0x8(%rsp)
  0x00007f73e7d0e3a4: cmp    $0x0,%rdx
  0x00007f73e7d0e3a8: lea    0x8(%rsp),%rdx
  0x00007f73e7d0e3ad: cmove  0x8(%rsp),%rdx
  0x00007f73e7d0e3b3: mov    %rsi,(%rsp)
  0x00007f73e7d0e3b7: cmp    $0x0,%rsi
  0x00007f73e7d0e3bb: lea    (%rsp),%rsi
  0x00007f73e7d0e3bf: cmove  (%rsp),%rsi        ; ImmutableOopMap{[32]=Oop [24]=Oop [8]=Oop [0]=Oop }
  0x00007f73e7d0e3c4: vzeroupper 
  0x00007f73e7d0e3c7: movabs $0x7f73e7d0e3c4,%r10  ;   {internal_word}
  0x00007f73e7d0e3d1: mov    %r10,0x330(%r15)
  0x00007f73e7d0e3d8: mov    %rsp,0x328(%r15)
  0x00007f73e7d0e3df: cmpb   $0x0,0x16e4fe51(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0e3e6: je     0x00007f73e7d0e42a
  0x00007f73e7d0e3ec: push   %rsi
  0x00007f73e7d0e3ed: push   %rdx
  0x00007f73e7d0e3ee: push   %rcx
  0x00007f73e7d0e3ef: push   %r8
  0x00007f73e7d0e3f1: push   %r9
  0x00007f73e7d0e3f3: movabs $0x80037b350,%rsi  ;   {metadata({method} {0x000000080037b350} 'compareAndSetObject' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d0e3fd: mov    %r15,%rdi
  0x00007f73e7d0e400: test   $0xf,%esp
  0x00007f73e7d0e406: je     0x00007f73e7d0e41e
  0x00007f73e7d0e40c: sub    $0x8,%rsp
  0x00007f73e7d0e410: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0e415: add    $0x8,%rsp
  0x00007f73e7d0e419: jmpq   0x00007f73e7d0e423
  0x00007f73e7d0e41e: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0e423: pop    %r9
  0x00007f73e7d0e425: pop    %r8
  0x00007f73e7d0e427: pop    %rcx
  0x00007f73e7d0e428: pop    %rdx
  0x00007f73e7d0e429: pop    %rsi
  0x00007f73e7d0e42a: lea    0x348(%r15),%rdi
  0x00007f73e7d0e431: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d0e43c: callq  0x00007f73fe54f070  ;   {runtime_call}
  0x00007f73e7d0e441: vzeroupper 
  0x00007f73e7d0e444: and    $0xff,%eax
  0x00007f73e7d0e44a: setne  %al
  0x00007f73e7d0e44d: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d0e458: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d0e45e: testb  $0x8,0x108(%r15)
  0x00007f73e7d0e466: jne    0x00007f73e7d0e47d
  0x00007f73e7d0e46c: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d0e477: je     0x00007f73e7d0e4a1
  0x00007f73e7d0e47d: vzeroupper 
  0x00007f73e7d0e480: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0e484: mov    %r15,%rdi
  0x00007f73e7d0e487: mov    %rsp,%r12
  0x00007f73e7d0e48a: sub    $0x0,%rsp
  0x00007f73e7d0e48e: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0e492: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d0e497: mov    %r12,%rsp
  0x00007f73e7d0e49a: xor    %r12,%r12
  0x00007f73e7d0e49d: mov    -0x8(%rbp),%rax
  0x00007f73e7d0e4a1: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d0e4ac: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d0e4b7: je     0x00007f73e7d0e54d
  0x00007f73e7d0e4bd: cmpb   $0x0,0x16e4fd73(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0e4c4: je     0x00007f73e7d0e502
  0x00007f73e7d0e4ca: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0e4ce: movabs $0x80037b350,%rsi  ;   {metadata({method} {0x000000080037b350} 'compareAndSetObject' '(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d0e4d8: mov    %r15,%rdi
  0x00007f73e7d0e4db: test   $0xf,%esp
  0x00007f73e7d0e4e1: je     0x00007f73e7d0e4f9
  0x00007f73e7d0e4e7: sub    $0x8,%rsp
  0x00007f73e7d0e4eb: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0e4f0: add    $0x8,%rsp
  0x00007f73e7d0e4f4: jmpq   0x00007f73e7d0e4fe
  0x00007f73e7d0e4f9: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0e4fe: mov    -0x8(%rbp),%rax
  0x00007f73e7d0e502: movabs $0x0,%r10
  0x00007f73e7d0e50c: mov    %r10,0x328(%r15)
  0x00007f73e7d0e513: movabs $0x0,%r10
  0x00007f73e7d0e51d: mov    %r10,0x330(%r15)
  0x00007f73e7d0e524: vzeroupper 
  0x00007f73e7d0e527: mov    0xe0(%r15),%rcx
  0x00007f73e7d0e52e: movl   $0x0,0x100(%rcx)
  0x00007f73e7d0e538: leaveq 
  0x00007f73e7d0e539: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d0e541: jne    0x00007f73e7d0e548
  0x00007f73e7d0e547: retq   
  0x00007f73e7d0e548: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d0e54d: vzeroupper 
  0x00007f73e7d0e550: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0e554: mov    %rsp,%r12
  0x00007f73e7d0e557: sub    $0x0,%rsp
  0x00007f73e7d0e55b: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0e55f: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d0e564: mov    %r12,%rsp
  0x00007f73e7d0e567: xor    %r12,%r12
  0x00007f73e7d0e56a: mov    -0x8(%rbp),%rax
  0x00007f73e7d0e56e: jmpq   0x00007f73e7d0e4bd
  0x00007f73e7d0e573: hlt    
  0x00007f73e7d0e574: hlt    
  0x00007f73e7d0e575: hlt    
  0x00007f73e7d0e576: hlt    
  0x00007f73e7d0e577: hlt    
Compiled method (c1)   33803   94       3       java.lang.String::hashCode (49 bytes)
 total in heap  [0x00007f73e07dcf10,0x00007f73e07dd828] = 2328
 relocation     [0x00007f73e07dd088,0x00007f73e07dd0e8] = 96
 main code      [0x00007f73e07dd100,0x00007f73e07dd4e0] = 992
 stub code      [0x00007f73e07dd4e0,0x00007f73e07dd520] = 64
 metadata       [0x00007f73e07dd520,0x00007f73e07dd538] = 24
 scopes data    [0x00007f73e07dd538,0x00007f73e07dd620] = 232
 scopes pcs     [0x00007f73e07dd620,0x00007f73e07dd810] = 496
 dependencies   [0x00007f73e07dd810,0x00007f73e07dd818] = 8
 nul chk table  [0x00007f73e07dd818,0x00007f73e07dd828] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x00007f73e07dd100, 0x00007f73e07dd520]  1056 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x00007f73e07dd100: mov    0x8(%rsi),%r10d
  0x00007f73e07dd104: shl    $0x3,%r10
  0x00007f73e07dd108: movabs $0x800000000,%r12
  0x00007f73e07dd112: add    %r12,%r10
  0x00007f73e07dd115: xor    %r12,%r12
  0x00007f73e07dd118: cmp    %rax,%r10
  0x00007f73e07dd11b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07dd121: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dd12c: data16 data16 xchg %ax,%ax
  0x00007f73e07dd130: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dd13b: data16 data16 xchg %ax,%ax
  0x00007f73e07dd13f: nop
[Verified Entry Point]
  0x00007f73e07dd140: mov    %eax,-0x14000(%rsp)
  0x00007f73e07dd147: push   %rbp
  0x00007f73e07dd148: sub    $0x50,%rsp
  0x00007f73e07dd14c: movabs $0x7f73d350cbf0,%rdi  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd156: mov    0x104(%rdi),%ebx
  0x00007f73e07dd15c: add    $0x8,%ebx
  0x00007f73e07dd15f: mov    %ebx,0x104(%rdi)
  0x00007f73e07dd165: and    $0x1ff8,%ebx
  0x00007f73e07dd16b: cmp    $0x0,%ebx
  0x00007f73e07dd16e: je     0x00007f73e07dd407  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0 (line 1502)

  0x00007f73e07dd174: mov    0x10(%rsi),%edi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x00007f73e07dd177: cmp    $0x0,%edi
  0x00007f73e07dd17a: movabs $0x7f73d350cbf0,%rbx  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd184: movabs $0x140,%rax
  0x00007f73e07dd18e: jne    0x00007f73e07dd19e
  0x00007f73e07dd194: movabs $0x150,%rax
  0x00007f73e07dd19e: mov    (%rbx,%rax,1),%rdx
  0x00007f73e07dd1a2: lea    0x1(%rdx),%rdx
  0x00007f73e07dd1a6: mov    %rdx,(%rbx,%rax,1)
  0x00007f73e07dd1aa: jne    0x00007f73e07dd3f4  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6 (line 1503)

  0x00007f73e07dd1b0: mov    0xc(%rsi),%ebx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x00007f73e07dd1b3: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x00007f73e07dd428
  0x00007f73e07dd1b6: cmp    $0x0,%eax
  0x00007f73e07dd1b9: movabs $0x7f73d350cbf0,%rdx  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd1c3: movabs $0x160,%rcx
  0x00007f73e07dd1cd: jle    0x00007f73e07dd1dd
  0x00007f73e07dd1d3: movabs $0x170,%rcx
  0x00007f73e07dd1dd: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07dd1e1: lea    0x1(%r8),%r8
  0x00007f73e07dd1e5: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07dd1e9: jle    0x00007f73e07dd3f4  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x00007f73e07dd1ef: mov    %rsi,%rdi
  0x00007f73e07dd1f2: movabs $0x7f73d350cbf0,%rdx  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd1fc: addq   $0x1,0x180(%rdx)
  0x00007f73e07dd204: movabs $0x7f73d350b2d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07dd20e: mov    0x104(%rdi),%edx
  0x00007f73e07dd214: add    $0x8,%edx
  0x00007f73e07dd217: mov    %edx,0x104(%rdi)
  0x00007f73e07dd21d: and    $0x7ffff8,%edx
  0x00007f73e07dd223: cmp    $0x0,%edx
  0x00007f73e07dd226: je     0x00007f73e07dd42d
  0x00007f73e07dd22c: movabs $0x7f73d350b2d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07dd236: incl   0x150(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007f73e07dd23c: movsbl 0x14(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007f73e07dd240: cmp    $0x0,%edi
  0x00007f73e07dd243: movabs $0x7f73d350b2d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07dd24d: movabs $0x160,%rdx
  0x00007f73e07dd257: jne    0x00007f73e07dd267
  0x00007f73e07dd25d: movabs $0x170,%rdx
  0x00007f73e07dd267: mov    (%rdi,%rdx,1),%rcx
  0x00007f73e07dd26b: lea    0x1(%rcx),%rcx
  0x00007f73e07dd26f: mov    %rcx,(%rdi,%rdx,1)
  0x00007f73e07dd273: jne    0x00007f73e07dd293  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007f73e07dd279: movabs $0x7f73d350b2d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07dd283: incl   0x180(%rdi)
  0x00007f73e07dd289: mov    $0x1,%edi
  0x00007f73e07dd28e: jmpq   0x00007f73e07dd298  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007f73e07dd293: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007f73e07dd298: and    $0x1,%edi
  0x00007f73e07dd29b: cmp    $0x0,%edi
  0x00007f73e07dd29e: movabs $0x7f73d350cbf0,%rdi  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd2a8: movabs $0x1b8,%rdx
  0x00007f73e07dd2b2: je     0x00007f73e07dd2c2
  0x00007f73e07dd2b8: movabs $0x1c8,%rdx
  0x00007f73e07dd2c2: mov    (%rdi,%rdx,1),%rcx
  0x00007f73e07dd2c6: lea    0x1(%rcx),%rcx
  0x00007f73e07dd2ca: mov    %rcx,(%rdi,%rdx,1)
  0x00007f73e07dd2ce: mov    %rsi,0x40(%rsp)
  0x00007f73e07dd2d3: je     0x00007f73e07dd309  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22 (line 1504)

  0x00007f73e07dd2d9: movabs $0x7f73d350cbf0,%rdi  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd2e3: addq   $0x1,0x1d8(%rdi)
  0x00007f73e07dd2eb: mov    %rbx,%rsi          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e07dd2ee: nop
  0x00007f73e07dd2ef: callq  0x00007f73e07dc840  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {static_call}
  0x00007f73e07dd2f4: movabs $0x7f73d350cbf0,%rsi  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd2fe: incl   0x1e8(%rsi)
  0x00007f73e07dd304: jmpq   0x00007f73e07dd3e9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32 (line 1504)

  0x00007f73e07dd309: movabs $0x7f73d350cbf0,%rsi  ;   {metadata(method data for {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd313: addq   $0x1,0x200(%rsi)
  0x00007f73e07dd31b: movabs $0x7f73d3575cf8,%rsi  ;   {metadata(method data for {method} {0x00000008001eaec8} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07dd325: mov    0x104(%rsi),%edi
  0x00007f73e07dd32b: add    $0x8,%edi
  0x00007f73e07dd32e: mov    %edi,0x104(%rsi)
  0x00007f73e07dd334: and    $0x7ffff8,%edi
  0x00007f73e07dd33a: cmp    $0x0,%edi
  0x00007f73e07dd33d: je     0x00007f73e07dd44e
  0x00007f73e07dd343: sar    %eax
  0x00007f73e07dd345: mov    $0x0,%esi
  0x00007f73e07dd34a: mov    $0x0,%edi
  0x00007f73e07dd34f: jmpq   0x00007f73e07dd3ae  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@9 (line 349)
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007f73e07dd354: nopl   0x0(%rax)
  0x00007f73e07dd358: movslq %esi,%rdx
  0x00007f73e07dd35b: movzwl 0x10(%rbx,%rdx,2),%edx  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@20 (line 350)
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007f73e07dd360: mov    %rdi,%rcx
  0x00007f73e07dd363: shl    $0x5,%edi
  0x00007f73e07dd366: sub    %ecx,%edi
  0x00007f73e07dd368: add    %edx,%edi
  0x00007f73e07dd36a: inc    %esi
  0x00007f73e07dd36c: movabs $0x7f73d3575cf8,%rdx  ;   {metadata(method data for {method} {0x00000008001eaec8} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07dd376: mov    0x108(%rdx),%ecx
  0x00007f73e07dd37c: add    $0x8,%ecx
  0x00007f73e07dd37f: mov    %ecx,0x108(%rdx)
  0x00007f73e07dd385: and    $0xfff8,%ecx
  0x00007f73e07dd38b: cmp    $0x0,%ecx
  0x00007f73e07dd38e: je     0x00007f73e07dd46f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28 (line 349)
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007f73e07dd394: mov    0x108(%r15),%r10   ; ImmutableOopMap{[64]=Oop rbx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28 (line 349)
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007f73e07dd39b: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07dd39e: movabs $0x7f73d3575cf8,%rdx  ;   {metadata(method data for {method} {0x00000008001eaec8} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07dd3a8: incl   0x170(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28 (line 349)
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007f73e07dd3ae: cmp    %eax,%esi
  0x00007f73e07dd3b0: movabs $0x7f73d3575cf8,%rdx  ;   {metadata(method data for {method} {0x00000008001eaec8} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07dd3ba: movabs $0x150,%rcx
  0x00007f73e07dd3c4: jl     0x00007f73e07dd3d4
  0x00007f73e07dd3ca: movabs $0x140,%rcx
  0x00007f73e07dd3d4: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07dd3d8: lea    0x1(%r8),%r8
  0x00007f73e07dd3dc: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07dd3e0: jl     0x00007f73e07dd358  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@11 (line 349)
                                                ; - java.lang.String::hashCode@39 (line 1505)

  0x00007f73e07dd3e6: mov    %rdi,%rax          ;*dup {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@42 (line 1505)

  0x00007f73e07dd3e9: mov    0x40(%rsp),%rsi
  0x00007f73e07dd3ee: mov    %eax,0x10(%rsi)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x00007f73e07dd3f1: mov    %rax,%rdi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47 (line 1507)

  0x00007f73e07dd3f4: mov    %rdi,%rax
  0x00007f73e07dd3f7: add    $0x50,%rsp
  0x00007f73e07dd3fb: pop    %rbp
  0x00007f73e07dd3fc: mov    0x108(%r15),%r10
  0x00007f73e07dd403: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07dd406: retq   
  0x00007f73e07dd407: movabs $0x800338948,%r10  ;   {metadata({method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String')}
  0x00007f73e07dd411: mov    %r10,0x8(%rsp)
  0x00007f73e07dd416: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dd41e: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dd423: jmpq   0x00007f73e07dd174
  0x00007f73e07dd428: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07dd42d: movabs $0x80033ac68,%r10  ;   {metadata({method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07dd437: mov    %r10,0x8(%rsp)
  0x00007f73e07dd43c: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dd444: callq  0x00007f73e0334d80  ; ImmutableOopMap{rbx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dd449: jmpq   0x00007f73e07dd22c
  0x00007f73e07dd44e: movabs $0x8001eaec8,%r10  ;   {metadata({method} {0x00000008001eaec8} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07dd458: mov    %r10,0x8(%rsp)
  0x00007f73e07dd45d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dd465: callq  0x00007f73e0334d80  ; ImmutableOopMap{[64]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::hashCode@-1 (line 347)
                                                ; - java.lang.String::hashCode@39 (line 1505)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dd46a: jmpq   0x00007f73e07dd343
  0x00007f73e07dd46f: movabs $0x8001eaec8,%r10  ;   {metadata({method} {0x00000008001eaec8} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07dd479: mov    %r10,0x8(%rsp)
  0x00007f73e07dd47e: movq   $0x1c,(%rsp)
  0x00007f73e07dd486: callq  0x00007f73e0334d80  ; ImmutableOopMap{[64]=Oop rbx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28 (line 349)
                                                ; - java.lang.String::hashCode@39 (line 1505)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dd48b: jmpq   0x00007f73e07dd394
  0x00007f73e07dd490: nop
  0x00007f73e07dd491: nop
  0x00007f73e07dd492: mov    0x428(%r15),%rax
  0x00007f73e07dd499: movabs $0x0,%r10
  0x00007f73e07dd4a3: mov    %r10,0x428(%r15)
  0x00007f73e07dd4aa: movabs $0x0,%r10
  0x00007f73e07dd4b4: mov    %r10,0x430(%r15)
  0x00007f73e07dd4bb: add    $0x50,%rsp
  0x00007f73e07dd4bf: pop    %rbp
  0x00007f73e07dd4c0: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07dd4c5: hlt    
  0x00007f73e07dd4c6: hlt    
  0x00007f73e07dd4c7: hlt    
  0x00007f73e07dd4c8: hlt    
  0x00007f73e07dd4c9: hlt    
  0x00007f73e07dd4ca: hlt    
  0x00007f73e07dd4cb: hlt    
  0x00007f73e07dd4cc: hlt    
  0x00007f73e07dd4cd: hlt    
  0x00007f73e07dd4ce: hlt    
  0x00007f73e07dd4cf: hlt    
  0x00007f73e07dd4d0: hlt    
  0x00007f73e07dd4d1: hlt    
  0x00007f73e07dd4d2: hlt    
  0x00007f73e07dd4d3: hlt    
  0x00007f73e07dd4d4: hlt    
  0x00007f73e07dd4d5: hlt    
  0x00007f73e07dd4d6: hlt    
  0x00007f73e07dd4d7: hlt    
  0x00007f73e07dd4d8: hlt    
  0x00007f73e07dd4d9: hlt    
  0x00007f73e07dd4da: hlt    
  0x00007f73e07dd4db: hlt    
  0x00007f73e07dd4dc: hlt    
  0x00007f73e07dd4dd: hlt    
  0x00007f73e07dd4de: hlt    
  0x00007f73e07dd4df: hlt    
[Stub Code]
  0x00007f73e07dd4e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07dd4e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07dd4ef: jmpq   0x00007f73e07dd4ef  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07dd4f4: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07dd4f9: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07dd503: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07dd507: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07dd50c: hlt    
[Deopt Handler Code]
  0x00007f73e07dd50d: movabs $0x7f73e07dd50d,%r10  ;   {section_word}
  0x00007f73e07dd517: push   %r10
  0x00007f73e07dd519: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07dd51e: hlt    
  0x00007f73e07dd51f: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 500 
ImmutableOopMap{[64]=Oop rbx=Oop }pc offsets: 667 
ImmutableOopMap{rsi=Oop }pc offsets: 803 
ImmutableOopMap{rsi=Oop rbx=Oop }pc offsets: 813 
ImmutableOopMap{rbx=Oop rsi=Oop }pc offsets: 841 
ImmutableOopMap{[64]=Oop rbx=Oop }pc offsets: 874 907 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0e720, 0x00007f73e7d0e738]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3581128} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0e720: mov    0x24(%rcx),%ebx
  0x00007f73e7d0e723: mov    0x10(%rbx),%rbx
  0x00007f73e7d0e727: test   %rbx,%rbx
  0x00007f73e7d0e72a: je     0x00007f73e7d0e733
  0x00007f73e7d0e730: jmpq   *0x38(%rbx)
  0x00007f73e7d0e733: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)   36028   59       3       java.lang.Math::min (11 bytes)
 total in heap  [0x00007f73e07dd890,0x00007f73e07ddc18] = 904
 relocation     [0x00007f73e07dda08,0x00007f73e07dda30] = 40
 main code      [0x00007f73e07dda40,0x00007f73e07ddb40] = 256
 stub code      [0x00007f73e07ddb40,0x00007f73e07ddb70] = 48
 metadata       [0x00007f73e07ddb70,0x00007f73e07ddb78] = 8
 scopes data    [0x00007f73e07ddb78,0x00007f73e07ddba0] = 40
 scopes pcs     [0x00007f73e07ddba0,0x00007f73e07ddc10] = 112
 dependencies   [0x00007f73e07ddc10,0x00007f73e07ddc18] = 8
----------------------------------------------------------------------
java/lang/Math.min(II)I  [0x00007f73e07dda40, 0x00007f73e07ddb70]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07dda40: mov    %eax,-0x14000(%rsp)
  0x00007f73e07dda47: push   %rbp
  0x00007f73e07dda48: sub    $0x30,%rsp
  0x00007f73e07dda4c: movabs $0x7f73d3532fe8,%rax  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07dda56: mov    0x104(%rax),%edi
  0x00007f73e07dda5c: add    $0x8,%edi
  0x00007f73e07dda5f: mov    %edi,0x104(%rax)
  0x00007f73e07dda65: and    $0x1ff8,%edi
  0x00007f73e07dda6b: cmp    $0x0,%edi
  0x00007f73e07dda6e: je     0x00007f73e07ddad7  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@0 (line 1518)

  0x00007f73e07dda74: cmp    %edx,%esi
  0x00007f73e07dda76: movabs $0x7f73d3532fe8,%rax  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07dda80: movabs $0x140,%rdi
  0x00007f73e07dda8a: jg     0x00007f73e07dda9a
  0x00007f73e07dda90: movabs $0x150,%rdi
  0x00007f73e07dda9a: mov    (%rax,%rdi,1),%rbx
  0x00007f73e07dda9e: lea    0x1(%rbx),%rbx
  0x00007f73e07ddaa2: mov    %rbx,(%rax,%rdi,1)
  0x00007f73e07ddaa6: jg     0x00007f73e07ddac1  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1518)

  0x00007f73e07ddaac: movabs $0x7f73d3532fe8,%rax  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07ddab6: incl   0x160(%rax)
  0x00007f73e07ddabc: jmpq   0x00007f73e07ddac4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1518)

  0x00007f73e07ddac1: mov    %rdx,%rsi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1518)

  0x00007f73e07ddac4: mov    %rsi,%rax
  0x00007f73e07ddac7: add    $0x30,%rsp
  0x00007f73e07ddacb: pop    %rbp
  0x00007f73e07ddacc: mov    0x108(%r15),%r10
  0x00007f73e07ddad3: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ddad6: retq   
  0x00007f73e07ddad7: movabs $0x80032c750,%r10  ;   {metadata({method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07ddae1: mov    %r10,0x8(%rsp)
  0x00007f73e07ddae6: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ddaee: callq  0x00007f73e0334d80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1518)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ddaf3: jmpq   0x00007f73e07dda74
  0x00007f73e07ddaf8: nop
  0x00007f73e07ddaf9: nop
  0x00007f73e07ddafa: mov    0x428(%r15),%rax
  0x00007f73e07ddb01: movabs $0x0,%r10
  0x00007f73e07ddb0b: mov    %r10,0x428(%r15)
  0x00007f73e07ddb12: movabs $0x0,%r10
  0x00007f73e07ddb1c: mov    %r10,0x430(%r15)
  0x00007f73e07ddb23: add    $0x30,%rsp
  0x00007f73e07ddb27: pop    %rbp
  0x00007f73e07ddb28: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ddb2d: hlt    
  0x00007f73e07ddb2e: hlt    
  0x00007f73e07ddb2f: hlt    
  0x00007f73e07ddb30: hlt    
  0x00007f73e07ddb31: hlt    
  0x00007f73e07ddb32: hlt    
  0x00007f73e07ddb33: hlt    
  0x00007f73e07ddb34: hlt    
  0x00007f73e07ddb35: hlt    
  0x00007f73e07ddb36: hlt    
  0x00007f73e07ddb37: hlt    
  0x00007f73e07ddb38: hlt    
  0x00007f73e07ddb39: hlt    
  0x00007f73e07ddb3a: hlt    
  0x00007f73e07ddb3b: hlt    
  0x00007f73e07ddb3c: hlt    
  0x00007f73e07ddb3d: hlt    
  0x00007f73e07ddb3e: hlt    
  0x00007f73e07ddb3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07ddb40: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07ddb45: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ddb4f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ddb53: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ddb58: hlt    
[Deopt Handler Code]
  0x00007f73e07ddb59: movabs $0x7f73e07ddb59,%r10  ;   {section_word}
  0x00007f73e07ddb63: push   %r10
  0x00007f73e07ddb65: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ddb6a: hlt    
  0x00007f73e07ddb6b: hlt    
  0x00007f73e07ddb6c: hlt    
  0x00007f73e07ddb6d: hlt    
  0x00007f73e07ddb6e: hlt    
  0x00007f73e07ddb6f: hlt    

ImmutableOopMap{}pc offsets: 179 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0e920, 0x00007f73e7d0e940]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3582808} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0e920: mov    0x24(%r8),%ebx
  0x00007f73e7d0e924: mov    0x10(%rbx),%rbx
  0x00007f73e7d0e928: test   %rbx,%rbx
  0x00007f73e7d0e92b: je     0x00007f73e7d0e934
  0x00007f73e7d0e931: jmpq   *0x38(%rbx)
  0x00007f73e7d0e934: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0e939: hlt    
  0x00007f73e7d0e93a: hlt    
  0x00007f73e7d0e93b: hlt    
  0x00007f73e7d0e93c: hlt    
  0x00007f73e7d0e93d: hlt    
  0x00007f73e7d0e93e: hlt    
  0x00007f73e7d0e93f: hlt    
Compiled method (c1)   36879    2       3       jdk.internal.misc.Unsafe::getObjectAcquire (7 bytes)
 total in heap  [0x00007f73e07ddc90,0x00007f73e07de018] = 904
 relocation     [0x00007f73e07dde08,0x00007f73e07dde30] = 40
 main code      [0x00007f73e07dde40,0x00007f73e07ddf80] = 320
 stub code      [0x00007f73e07ddf80,0x00007f73e07ddfb0] = 48
 metadata       [0x00007f73e07ddfb0,0x00007f73e07ddfb8] = 8
 scopes data    [0x00007f73e07ddfb8,0x00007f73e07ddfd0] = 24
 scopes pcs     [0x00007f73e07ddfd0,0x00007f73e07de010] = 64
 dependencies   [0x00007f73e07de010,0x00007f73e07de018] = 8
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getObjectAcquire(Ljava/lang/Object;J)Ljava/lang/Object;  [0x00007f73e07dde40, 0x00007f73e07ddfb0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07dde40: mov    0x8(%rsi),%r10d
  0x00007f73e07dde44: shl    $0x3,%r10
  0x00007f73e07dde48: movabs $0x800000000,%r12
  0x00007f73e07dde52: add    %r12,%r10
  0x00007f73e07dde55: xor    %r12,%r12
  0x00007f73e07dde58: cmp    %rax,%r10
  0x00007f73e07dde5b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07dde61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dde6c: data16 data16 xchg %ax,%ax
  0x00007f73e07dde70: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07dde7b: data16 data16 xchg %ax,%ax
  0x00007f73e07dde7f: nop
[Verified Entry Point]
  0x00007f73e07dde80: mov    %eax,-0x14000(%rsp)
  0x00007f73e07dde87: push   %rbp
  0x00007f73e07dde88: sub    $0x30,%rsp
  0x00007f73e07dde8c: movabs $0x7f73d3505ba0,%rax  ;   {metadata(method data for {method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07dde96: mov    0x104(%rax),%edi
  0x00007f73e07dde9c: add    $0x8,%edi
  0x00007f73e07dde9f: mov    %edi,0x104(%rax)
  0x00007f73e07ddea5: and    $0x1ff8,%edi
  0x00007f73e07ddeab: cmp    $0x0,%edi
  0x00007f73e07ddeae: je     0x00007f73e07ddf19  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@0 (line 2042)

  0x00007f73e07ddeb4: mov    (%rdx,%rcx,1),%eax
  0x00007f73e07ddeb7: movabs $0xc,%rsi
  0x00007f73e07ddec1: cmp    %rsi,%rcx
  0x00007f73e07ddec4: jne    0x00007f73e07ddf09
  0x00007f73e07ddeca: cmp    $0x0,%rdx
  0x00007f73e07ddece: je     0x00007f73e07ddf09
  0x00007f73e07dded4: mov    0x8(%rdx),%esi
  0x00007f73e07dded7: shl    $0x3,%rsi
  0x00007f73e07ddedb: movabs $0x800000000,%r12
  0x00007f73e07ddee5: add    %r12,%rsi
  0x00007f73e07ddee8: xor    %r12,%r12
  0x00007f73e07ddeeb: movsbl 0x18b(%rsi),%esi
  0x00007f73e07ddef2: cmp    $0x0,%esi
  0x00007f73e07ddef5: je     0x00007f73e07ddf09
  0x00007f73e07ddefb: movsbl 0x30(%r15),%esi
  0x00007f73e07ddf00: cmp    $0x0,%esi
  0x00007f73e07ddf03: jne    0x00007f73e07ddf3a
  0x00007f73e07ddf09: add    $0x30,%rsp
  0x00007f73e07ddf0d: pop    %rbp
  0x00007f73e07ddf0e: mov    0x108(%r15),%r10
  0x00007f73e07ddf15: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ddf18: retq   
  0x00007f73e07ddf19: movabs $0x80037a7a0,%r10  ;   {metadata({method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07ddf23: mov    %r10,0x8(%rsp)
  0x00007f73e07ddf28: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ddf30: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ddf35: jmpq   0x00007f73e07ddeb4
  0x00007f73e07ddf3a: cmp    $0x0,%rax
  0x00007f73e07ddf3e: je     0x00007f73e07ddf09
  0x00007f73e07ddf40: mov    %rax,(%rsp)
  0x00007f73e07ddf44: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07ddf49: jmp    0x00007f73e07ddf09
  0x00007f73e07ddf4b: nop
  0x00007f73e07ddf4c: nop
  0x00007f73e07ddf4d: mov    0x428(%r15),%rax
  0x00007f73e07ddf54: movabs $0x0,%r10
  0x00007f73e07ddf5e: mov    %r10,0x428(%r15)
  0x00007f73e07ddf65: movabs $0x0,%r10
  0x00007f73e07ddf6f: mov    %r10,0x430(%r15)
  0x00007f73e07ddf76: add    $0x30,%rsp
  0x00007f73e07ddf7a: pop    %rbp
  0x00007f73e07ddf7b: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
[Exception Handler]
[Stub Code]
  0x00007f73e07ddf80: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07ddf85: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ddf8f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ddf93: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ddf98: hlt    
[Deopt Handler Code]
  0x00007f73e07ddf99: movabs $0x7f73e07ddf99,%r10  ;   {section_word}
  0x00007f73e07ddfa3: push   %r10
  0x00007f73e07ddfa5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ddfaa: hlt    
  0x00007f73e07ddfab: hlt    
  0x00007f73e07ddfac: hlt    
  0x00007f73e07ddfad: hlt    
  0x00007f73e07ddfae: hlt    
  0x00007f73e07ddfaf: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 245 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic()Ljava/lang/Object;  [0x00007f73e7d0eb20, 0x00007f73e7d0eb40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3586078} 'invokeBasic' '()Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0eb20: mov    0x14(%rsi),%ebx
  0x00007f73e7d0eb23: mov    0x28(%rbx),%ebx
  0x00007f73e7d0eb26: mov    0x24(%rbx),%ebx
  0x00007f73e7d0eb29: mov    0x10(%rbx),%rbx
  0x00007f73e7d0eb2d: test   %rbx,%rbx
  0x00007f73e7d0eb30: je     0x00007f73e7d0eb39
  0x00007f73e7d0eb36: jmpq   *0x38(%rbx)
  0x00007f73e7d0eb39: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0eb3e: hlt    
  0x00007f73e7d0eb3f: hlt    
Compiled method (c1)   37568   65       3       java.lang.String::equals (65 bytes)
 total in heap  [0x00007f73e07de090,0x00007f73e07deca8] = 3096
 relocation     [0x00007f73e07de208,0x00007f73e07de290] = 136
 main code      [0x00007f73e07de2a0,0x00007f73e07de8e0] = 1600
 stub code      [0x00007f73e07de8e0,0x00007f73e07de930] = 80
 metadata       [0x00007f73e07de930,0x00007f73e07de948] = 24
 scopes data    [0x00007f73e07de948,0x00007f73e07dea60] = 280
 scopes pcs     [0x00007f73e07dea60,0x00007f73e07dec90] = 560
 dependencies   [0x00007f73e07dec90,0x00007f73e07dec98] = 8
 nul chk table  [0x00007f73e07dec98,0x00007f73e07deca8] = 16
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x00007f73e07de2a0, 0x00007f73e07de930]  1680 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07de2a0: mov    0x8(%rsi),%r10d
  0x00007f73e07de2a4: shl    $0x3,%r10
  0x00007f73e07de2a8: movabs $0x800000000,%r12
  0x00007f73e07de2b2: add    %r12,%r10
  0x00007f73e07de2b5: xor    %r12,%r12
  0x00007f73e07de2b8: cmp    %rax,%r10
  0x00007f73e07de2bb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07de2c1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07de2cc: data16 data16 xchg %ax,%ax
  0x00007f73e07de2d0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07de2db: data16 data16 xchg %ax,%ax
  0x00007f73e07de2df: nop
[Verified Entry Point]
  0x00007f73e07de2e0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07de2e7: push   %rbp
  0x00007f73e07de2e8: sub    $0x30,%rsp
  0x00007f73e07de2ec: movabs $0x7f73d3512b70,%rdi  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de2f6: mov    0x104(%rdi),%ebx
  0x00007f73e07de2fc: add    $0x8,%ebx
  0x00007f73e07de2ff: mov    %ebx,0x104(%rdi)
  0x00007f73e07de305: and    $0x1ff8,%ebx
  0x00007f73e07de30b: cmp    $0x0,%ebx
  0x00007f73e07de30e: je     0x00007f73e07de811  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0 (line 1003)

  0x00007f73e07de314: cmp    %rdx,%rsi
  0x00007f73e07de317: movabs $0x7f73d3512b70,%rdi  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de321: movabs $0x150,%rbx
  0x00007f73e07de32b: je     0x00007f73e07de33b
  0x00007f73e07de331: movabs $0x140,%rbx
  0x00007f73e07de33b: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07de33f: lea    0x1(%rax),%rax
  0x00007f73e07de343: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07de347: je     0x00007f73e07de7fc  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 1003)

  0x00007f73e07de34d: cmp    $0x0,%rdx
  0x00007f73e07de351: jne    0x00007f73e07de369
  0x00007f73e07de353: movabs $0x7f73d3512b70,%rax  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de35d: orb    $0x1,0x159(%rax)
  0x00007f73e07de364: jmpq   0x00007f73e07de449
  0x00007f73e07de369: movabs $0x800336890,%rcx  ;   {metadata('java/lang/String')}
  0x00007f73e07de373: mov    0x8(%rdx),%ebx
  0x00007f73e07de376: shl    $0x3,%rbx
  0x00007f73e07de37a: movabs $0x800000000,%r12
  0x00007f73e07de384: add    %r12,%rbx
  0x00007f73e07de387: xor    %r12,%r12
  0x00007f73e07de38a: cmp    %rbx,%rcx
  0x00007f73e07de38d: jne    0x00007f73e07de42d
  0x00007f73e07de393: movabs $0x7f73d3512b70,%rax  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de39d: mov    0x8(%rdx),%ecx
  0x00007f73e07de3a0: shl    $0x3,%rcx
  0x00007f73e07de3a4: movabs $0x800000000,%r12
  0x00007f73e07de3ae: add    %r12,%rcx
  0x00007f73e07de3b1: xor    %r12,%r12
  0x00007f73e07de3b4: cmp    0x170(%rax),%rcx
  0x00007f73e07de3bb: jne    0x00007f73e07de3ca
  0x00007f73e07de3bd: addq   $0x1,0x178(%rax)
  0x00007f73e07de3c5: jmpq   0x00007f73e07de44e
  0x00007f73e07de3ca: cmp    0x180(%rax),%rcx
  0x00007f73e07de3d1: jne    0x00007f73e07de3e0
  0x00007f73e07de3d3: addq   $0x1,0x188(%rax)
  0x00007f73e07de3db: jmpq   0x00007f73e07de44e
  0x00007f73e07de3e0: cmpq   $0x0,0x170(%rax)
  0x00007f73e07de3eb: jne    0x00007f73e07de404
  0x00007f73e07de3ed: mov    %rcx,0x170(%rax)
  0x00007f73e07de3f4: movq   $0x1,0x178(%rax)
  0x00007f73e07de3ff: jmpq   0x00007f73e07de44e
  0x00007f73e07de404: cmpq   $0x0,0x180(%rax)
  0x00007f73e07de40f: jne    0x00007f73e07de428
  0x00007f73e07de411: mov    %rcx,0x180(%rax)
  0x00007f73e07de418: movq   $0x1,0x188(%rax)
  0x00007f73e07de423: jmpq   0x00007f73e07de44e
  0x00007f73e07de428: jmpq   0x00007f73e07de44e
  0x00007f73e07de42d: movabs $0x7f73d3512b70,%rax  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de437: subq   $0x1,0x160(%rax)
  0x00007f73e07de43f: jmpq   0x00007f73e07de449
  0x00007f73e07de444: jmpq   0x00007f73e07de44e
  0x00007f73e07de449: xor    %rdi,%rdi
  0x00007f73e07de44c: jmp    0x00007f73e07de458
  0x00007f73e07de44e: movabs $0x1,%rdi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 1006)

  0x00007f73e07de458: cmp    $0x0,%edi
  0x00007f73e07de45b: movabs $0x7f73d3512b70,%rdi  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de465: movabs $0x198,%rbx
  0x00007f73e07de46f: je     0x00007f73e07de47f
  0x00007f73e07de475: movabs $0x1a8,%rbx
  0x00007f73e07de47f: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07de483: lea    0x1(%rax),%rax
  0x00007f73e07de487: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07de48b: je     0x00007f73e07de7e7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11 (line 1006)

  0x00007f73e07de491: cmp    $0x0,%rdx
  0x00007f73e07de495: jne    0x00007f73e07de4ad
  0x00007f73e07de497: movabs $0x7f73d3512b70,%rbx  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de4a1: orb    $0x1,0x1b1(%rbx)
  0x00007f73e07de4a8: jmpq   0x00007f73e07de58d
  0x00007f73e07de4ad: movabs $0x800336890,%rax  ;   {metadata('java/lang/String')}
  0x00007f73e07de4b7: mov    0x8(%rdx),%edi
  0x00007f73e07de4ba: shl    $0x3,%rdi
  0x00007f73e07de4be: movabs $0x800000000,%r12
  0x00007f73e07de4c8: add    %r12,%rdi
  0x00007f73e07de4cb: xor    %r12,%r12
  0x00007f73e07de4ce: cmp    %rdi,%rax
  0x00007f73e07de4d1: jne    0x00007f73e07de571
  0x00007f73e07de4d7: movabs $0x7f73d3512b70,%rbx  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de4e1: mov    0x8(%rdx),%eax
  0x00007f73e07de4e4: shl    $0x3,%rax
  0x00007f73e07de4e8: movabs $0x800000000,%r12
  0x00007f73e07de4f2: add    %r12,%rax
  0x00007f73e07de4f5: xor    %r12,%r12
  0x00007f73e07de4f8: cmp    0x1c8(%rbx),%rax
  0x00007f73e07de4ff: jne    0x00007f73e07de50e
  0x00007f73e07de501: addq   $0x1,0x1d0(%rbx)
  0x00007f73e07de509: jmpq   0x00007f73e07de58d
  0x00007f73e07de50e: cmp    0x1d8(%rbx),%rax
  0x00007f73e07de515: jne    0x00007f73e07de524
  0x00007f73e07de517: addq   $0x1,0x1e0(%rbx)
  0x00007f73e07de51f: jmpq   0x00007f73e07de58d
  0x00007f73e07de524: cmpq   $0x0,0x1c8(%rbx)
  0x00007f73e07de52f: jne    0x00007f73e07de548
  0x00007f73e07de531: mov    %rax,0x1c8(%rbx)
  0x00007f73e07de538: movq   $0x1,0x1d0(%rbx)
  0x00007f73e07de543: jmpq   0x00007f73e07de58d
  0x00007f73e07de548: cmpq   $0x0,0x1d8(%rbx)
  0x00007f73e07de553: jne    0x00007f73e07de56c
  0x00007f73e07de555: mov    %rax,0x1d8(%rbx)
  0x00007f73e07de55c: movq   $0x1,0x1e0(%rbx)
  0x00007f73e07de567: jmpq   0x00007f73e07de58d
  0x00007f73e07de56c: jmpq   0x00007f73e07de58d
  0x00007f73e07de571: movabs $0x7f73d3512b70,%rbx  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de57b: subq   $0x1,0x1b8(%rbx)
  0x00007f73e07de583: jmpq   0x00007f73e07de832
  0x00007f73e07de588: jmpq   0x00007f73e07de58d
  0x00007f73e07de58d: mov    %rdx,%rdi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)

  0x00007f73e07de590: mov    %rsi,%rdx
  0x00007f73e07de593: movabs $0x7f73d3512b70,%rbx  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de59d: addq   $0x1,0x1f0(%rbx)
  0x00007f73e07de5a5: movabs $0x7f73d350d1b0,%rdx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de5af: mov    0x104(%rdx),%ebx
  0x00007f73e07de5b5: add    $0x8,%ebx
  0x00007f73e07de5b8: mov    %ebx,0x104(%rdx)
  0x00007f73e07de5be: and    $0x7ffff8,%ebx
  0x00007f73e07de5c4: cmp    $0x0,%ebx
  0x00007f73e07de5c7: je     0x00007f73e07de83b
  0x00007f73e07de5cd: movabs $0x7f73d350d1b0,%rdx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de5d7: incl   0x150(%rdx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x00007f73e07de5dd: movsbl 0x14(%rsi),%edx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x00007f73e07de5e1: movabs $0x7f73d350d1b0,%rbx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de5eb: incl   0x160(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x00007f73e07de5f1: mov    %rdx,%rbx
  0x00007f73e07de5f4: shl    $0x18,%ebx
  0x00007f73e07de5f7: sar    $0x18,%ebx
  0x00007f73e07de5fa: cmp    (%rdi),%rax        ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ; implicit exception: dispatches to 0x00007f73e07de85c
  0x00007f73e07de5fd: mov    %rdi,%rax
  0x00007f73e07de600: movabs $0x7f73d3512b70,%rcx  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de60a: addq   $0x1,0x228(%rcx)
  0x00007f73e07de612: movabs $0x7f73d350d1b0,%rax  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de61c: mov    0x104(%rax),%ecx
  0x00007f73e07de622: add    $0x8,%ecx
  0x00007f73e07de625: mov    %ecx,0x104(%rax)
  0x00007f73e07de62b: and    $0x7ffff8,%ecx
  0x00007f73e07de631: cmp    $0x0,%ecx
  0x00007f73e07de634: je     0x00007f73e07de861
  0x00007f73e07de63a: movabs $0x7f73d350d1b0,%rax  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de644: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x00007f73e07de64a: movsbl 0x14(%rdi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x00007f73e07de64e: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de658: incl   0x160(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x00007f73e07de65e: shl    $0x18,%eax
  0x00007f73e07de661: sar    $0x18,%eax
  0x00007f73e07de664: cmp    %eax,%ebx
  0x00007f73e07de666: movabs $0x7f73d3512b70,%rbx  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de670: movabs $0x260,%rax
  0x00007f73e07de67a: jne    0x00007f73e07de68a
  0x00007f73e07de680: movabs $0x270,%rax
  0x00007f73e07de68a: mov    (%rbx,%rax,1),%rcx
  0x00007f73e07de68e: lea    0x1(%rcx),%rcx
  0x00007f73e07de692: mov    %rcx,(%rbx,%rax,1)
  0x00007f73e07de696: jne    0x00007f73e07de7e7  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)

  0x00007f73e07de69c: mov    %rsi,%rbx
  0x00007f73e07de69f: movabs $0x7f73d3512b70,%rax  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de6a9: addq   $0x1,0x280(%rax)
  0x00007f73e07de6b1: movabs $0x7f73d350b2d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07de6bb: mov    0x104(%rbx),%eax
  0x00007f73e07de6c1: add    $0x8,%eax
  0x00007f73e07de6c4: mov    %eax,0x104(%rbx)
  0x00007f73e07de6ca: and    $0x7ffff8,%eax
  0x00007f73e07de6d0: cmp    $0x0,%eax
  0x00007f73e07de6d3: je     0x00007f73e07de882
  0x00007f73e07de6d9: movabs $0x7f73d350b2d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07de6e3: incl   0x150(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007f73e07de6e9: cmp    $0x0,%edx
  0x00007f73e07de6ec: movabs $0x7f73d350b2d8,%rdx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07de6f6: movabs $0x160,%rbx
  0x00007f73e07de700: jne    0x00007f73e07de710
  0x00007f73e07de706: movabs $0x170,%rbx
  0x00007f73e07de710: mov    (%rdx,%rbx,1),%rax
  0x00007f73e07de714: lea    0x1(%rax),%rax
  0x00007f73e07de718: mov    %rax,(%rdx,%rbx,1)
  0x00007f73e07de71c: jne    0x00007f73e07de73c  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007f73e07de722: movabs $0x7f73d350b2d8,%rdx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07de72c: incl   0x180(%rdx)
  0x00007f73e07de732: mov    $0x1,%edx
  0x00007f73e07de737: jmpq   0x00007f73e07de741  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007f73e07de73c: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007f73e07de741: and    $0x1,%edx
  0x00007f73e07de744: cmp    $0x0,%edx
  0x00007f73e07de747: movabs $0x7f73d3512b70,%rdx  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de751: movabs $0x2b8,%rbx
  0x00007f73e07de75b: je     0x00007f73e07de76b
  0x00007f73e07de761: movabs $0x2c8,%rbx
  0x00007f73e07de76b: mov    (%rdx,%rbx,1),%rax
  0x00007f73e07de76f: lea    0x1(%rax),%rax
  0x00007f73e07de773: mov    %rax,(%rdx,%rbx,1)
  0x00007f73e07de777: je     0x00007f73e07de7b1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@34 (line 1009)

  0x00007f73e07de77d: mov    0xc(%rsi),%esi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x00007f73e07de780: mov    0xc(%rdi),%edx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x00007f73e07de783: movabs $0x7f73d3512b70,%rdi  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de78d: addq   $0x1,0x2d8(%rdi)
  0x00007f73e07de795: xchg   %ax,%ax
  0x00007f73e07de797: callq  0x00007f73e07d8060  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45 (line 1009)
                                                ;   {static_call}
  0x00007f73e07de79c: movabs $0x7f73d3512b70,%rsi  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de7a6: incl   0x2e8(%rsi)
  0x00007f73e07de7ac: jmpq   0x00007f73e07de7d4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@48 (line 1009)

  0x00007f73e07de7b1: mov    0xc(%rsi),%esi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@52 (line 1010)

  0x00007f73e07de7b4: mov    0xc(%rdi),%edx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@56 (line 1010)

  0x00007f73e07de7b7: movabs $0x7f73d3512b70,%rdi  ;   {metadata(method data for {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de7c1: addq   $0x1,0x300(%rdi)
  0x00007f73e07de7c9: nopw   0x0(%rax,%rax,1)
  0x00007f73e07de7cf: callq  0x00007f73e0269600  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@59 (line 1010)
                                                ;   {static_call}
  0x00007f73e07de7d4: and    $0x1,%eax
  0x00007f73e07de7d7: add    $0x30,%rsp
  0x00007f73e07de7db: pop    %rbp
  0x00007f73e07de7dc: mov    0x108(%r15),%r10
  0x00007f73e07de7e3: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07de7e6: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@62 (line 1009)

  0x00007f73e07de7e7: mov    $0x0,%eax
  0x00007f73e07de7ec: add    $0x30,%rsp
  0x00007f73e07de7f0: pop    %rbp
  0x00007f73e07de7f1: mov    0x108(%r15),%r10
  0x00007f73e07de7f8: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07de7fb: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@64 (line 1013)

  0x00007f73e07de7fc: mov    $0x1,%eax
  0x00007f73e07de801: add    $0x30,%rsp
  0x00007f73e07de805: pop    %rbp
  0x00007f73e07de806: mov    0x108(%r15),%r10
  0x00007f73e07de80d: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07de810: retq   
  0x00007f73e07de811: movabs $0x800336b00,%r10  ;   {metadata({method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00007f73e07de81b: mov    %r10,0x8(%rsp)
  0x00007f73e07de820: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07de828: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07de82d: jmpq   0x00007f73e07de314
  0x00007f73e07de832: mov    %rdx,(%rsp)
  0x00007f73e07de836: callq  0x00007f73e0332820  ; ImmutableOopMap{rsi=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07de83b: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de845: mov    %r10,0x8(%rsp)
  0x00007f73e07de84a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07de852: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07de857: jmpq   0x00007f73e07de5cd
  0x00007f73e07de85c: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07de861: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07de86b: mov    %r10,0x8(%rsp)
  0x00007f73e07de870: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07de878: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07de87d: jmpq   0x00007f73e07de63a
  0x00007f73e07de882: movabs $0x80033ac68,%r10  ;   {metadata({method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07de88c: mov    %r10,0x8(%rsp)
  0x00007f73e07de891: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07de899: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdi=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07de89e: jmpq   0x00007f73e07de6d9
  0x00007f73e07de8a3: nop
  0x00007f73e07de8a4: nop
  0x00007f73e07de8a5: mov    0x428(%r15),%rax
  0x00007f73e07de8ac: movabs $0x0,%r10
  0x00007f73e07de8b6: mov    %r10,0x428(%r15)
  0x00007f73e07de8bd: movabs $0x0,%r10
  0x00007f73e07de8c7: mov    %r10,0x430(%r15)
  0x00007f73e07de8ce: add    $0x30,%rsp
  0x00007f73e07de8d2: pop    %rbp
  0x00007f73e07de8d3: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07de8d8: hlt    
  0x00007f73e07de8d9: hlt    
  0x00007f73e07de8da: hlt    
  0x00007f73e07de8db: hlt    
  0x00007f73e07de8dc: hlt    
  0x00007f73e07de8dd: hlt    
  0x00007f73e07de8de: hlt    
  0x00007f73e07de8df: hlt    
[Stub Code]
  0x00007f73e07de8e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07de8e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07de8ef: jmpq   0x00007f73e07de8ef  ;   {runtime_call}
  0x00007f73e07de8f4: nop
  0x00007f73e07de8f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07de8ff: jmpq   0x00007f73e07de8ff  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07de904: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07de909: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07de913: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07de917: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07de91c: hlt    
[Deopt Handler Code]
  0x00007f73e07de91d: movabs $0x7f73e07de91d,%r10  ;   {section_word}
  0x00007f73e07de927: push   %r10
  0x00007f73e07de929: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07de92e: hlt    
  0x00007f73e07de92f: hlt    

ImmutableOopMap{}pc offsets: 1276 1332 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 1421 
ImmutableOopMap{rsi=Oop }pc offsets: 1435 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 1463 1473 1501 
ImmutableOopMap{rdi=Oop rsi=Oop }pc offsets: 1534 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d0ed20, 0x00007f73e7d0ed40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d35863b0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d0ed20: cmp    (%rsi),%rax
  0x00007f73e7d0ed23: mov    0x24(%rdx),%ebx
  0x00007f73e7d0ed26: mov    0x10(%rbx),%rbx
  0x00007f73e7d0ed2a: test   %rbx,%rbx
  0x00007f73e7d0ed2d: je     0x00007f73e7d0ed36
  0x00007f73e7d0ed33: jmpq   *0x38(%rbx)
  0x00007f73e7d0ed36: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d0ed3b: hlt    
  0x00007f73e7d0ed3c: hlt    
  0x00007f73e7d0ed3d: hlt    
  0x00007f73e7d0ed3e: hlt    
  0x00007f73e7d0ed3f: hlt    
Compiled method (c1)   40139   11       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x00007f73e07ded10,0x00007f73e07df018] = 776
 relocation     [0x00007f73e07dee88,0x00007f73e07deeb0] = 40
 main code      [0x00007f73e07deec0,0x00007f73e07def80] = 192
 stub code      [0x00007f73e07def80,0x00007f73e07defb0] = 48
 metadata       [0x00007f73e07defb0,0x00007f73e07defb8] = 8
 scopes data    [0x00007f73e07defb8,0x00007f73e07defd0] = 24
 scopes pcs     [0x00007f73e07defd0,0x00007f73e07df010] = 64
 dependencies   [0x00007f73e07df010,0x00007f73e07df018] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread(I)I  [0x00007f73e07deec0, 0x00007f73e07defb0]  240 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080034f198} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07deec0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07deec7: push   %rbp
  0x00007f73e07deec8: sub    $0x30,%rsp
  0x00007f73e07deecc: movabs $0x7f73d350d6f0,%rax  ;   {metadata(method data for {method} {0x000000080034f198} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07deed6: mov    0x104(%rax),%edi
  0x00007f73e07deedc: add    $0x8,%edi
  0x00007f73e07deedf: mov    %edi,0x104(%rax)
  0x00007f73e07deee5: and    $0x1ff8,%edi
  0x00007f73e07deeeb: cmp    $0x0,%edi
  0x00007f73e07deeee: je     0x00007f73e07def13  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0 (line 697)

  0x00007f73e07deef4: mov    %rsi,%rax
  0x00007f73e07deef7: shr    $0x10,%eax
  0x00007f73e07deefa: xor    %rsi,%rax
  0x00007f73e07deefd: and    $0x7fffffff,%eax
  0x00007f73e07def03: add    $0x30,%rsp
  0x00007f73e07def07: pop    %rbp
  0x00007f73e07def08: mov    0x108(%r15),%r10
  0x00007f73e07def0f: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07def12: retq   
  0x00007f73e07def13: movabs $0x80034f198,%r10  ;   {metadata({method} {0x000000080034f198} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07def1d: mov    %r10,0x8(%rsp)
  0x00007f73e07def22: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07def2a: callq  0x00007f73e0334d80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07def2f: jmp    0x00007f73e07deef4
  0x00007f73e07def31: nop
  0x00007f73e07def32: nop
  0x00007f73e07def33: mov    0x428(%r15),%rax
  0x00007f73e07def3a: movabs $0x0,%r10
  0x00007f73e07def44: mov    %r10,0x428(%r15)
  0x00007f73e07def4b: movabs $0x0,%r10
  0x00007f73e07def55: mov    %r10,0x430(%r15)
  0x00007f73e07def5c: add    $0x30,%rsp
  0x00007f73e07def60: pop    %rbp
  0x00007f73e07def61: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07def66: hlt    
  0x00007f73e07def67: hlt    
  0x00007f73e07def68: hlt    
  0x00007f73e07def69: hlt    
  0x00007f73e07def6a: hlt    
  0x00007f73e07def6b: hlt    
  0x00007f73e07def6c: hlt    
  0x00007f73e07def6d: hlt    
  0x00007f73e07def6e: hlt    
  0x00007f73e07def6f: hlt    
  0x00007f73e07def70: hlt    
  0x00007f73e07def71: hlt    
  0x00007f73e07def72: hlt    
  0x00007f73e07def73: hlt    
  0x00007f73e07def74: hlt    
  0x00007f73e07def75: hlt    
  0x00007f73e07def76: hlt    
  0x00007f73e07def77: hlt    
  0x00007f73e07def78: hlt    
  0x00007f73e07def79: hlt    
  0x00007f73e07def7a: hlt    
  0x00007f73e07def7b: hlt    
  0x00007f73e07def7c: hlt    
  0x00007f73e07def7d: hlt    
  0x00007f73e07def7e: hlt    
  0x00007f73e07def7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07def80: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07def85: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07def8f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07def93: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07def98: hlt    
[Deopt Handler Code]
  0x00007f73e07def99: movabs $0x7f73e07def99,%r10  ;   {section_word}
  0x00007f73e07defa3: push   %r10
  0x00007f73e07defa5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07defaa: hlt    
  0x00007f73e07defab: hlt    
  0x00007f73e07defac: hlt    
  0x00007f73e07defad: hlt    
  0x00007f73e07defae: hlt    
  0x00007f73e07defaf: hlt    

ImmutableOopMap{}pc offsets: 111 ----------------------------------------------------------------------
java/lang/Class.isPrimitive()Z  [0x00007f73e7d0ef40, 0x00007f73e7d0f130]  496 bytes
[Entry Point]
  # {method} {0x000000080035d6e8} 'isPrimitive' '()Z' in 'java/lang/Class'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d0ef40: mov    0x8(%rsi),%r10d
  0x00007f73e7d0ef44: shl    $0x3,%r10
  0x00007f73e7d0ef48: movabs $0x800000000,%r12
  0x00007f73e7d0ef52: add    %r12,%r10
  0x00007f73e7d0ef55: xor    %r12,%r12
  0x00007f73e7d0ef58: cmp    %r10,%rax
  0x00007f73e7d0ef5b: je     0x00007f73e7d0ef68
  0x00007f73e7d0ef61: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0ef66: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0ef68: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0ef6f: push   %rbp
  0x00007f73e7d0ef70: mov    %rsp,%rbp
  0x00007f73e7d0ef73: sub    $0x40,%rsp
  0x00007f73e7d0ef77: mov    %rsi,(%rsp)
  0x00007f73e7d0ef7b: cmp    $0x0,%rsi
  0x00007f73e7d0ef7f: lea    (%rsp),%rsi
  0x00007f73e7d0ef83: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007f73e7d0ef88: vzeroupper 
  0x00007f73e7d0ef8b: movabs $0x7f73e7d0ef88,%r10  ;   {internal_word}
  0x00007f73e7d0ef95: mov    %r10,0x330(%r15)
  0x00007f73e7d0ef9c: mov    %rsp,0x328(%r15)
  0x00007f73e7d0efa3: cmpb   $0x0,0x16e4f28d(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0efaa: je     0x00007f73e7d0efe2
  0x00007f73e7d0efb0: push   %rsi
  0x00007f73e7d0efb1: movabs $0x80035d6e8,%rsi  ;   {metadata({method} {0x000000080035d6e8} 'isPrimitive' '()Z' in 'java/lang/Class')}
  0x00007f73e7d0efbb: mov    %r15,%rdi
  0x00007f73e7d0efbe: test   $0xf,%esp
  0x00007f73e7d0efc4: je     0x00007f73e7d0efdc
  0x00007f73e7d0efca: sub    $0x8,%rsp
  0x00007f73e7d0efce: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0efd3: add    $0x8,%rsp
  0x00007f73e7d0efd7: jmpq   0x00007f73e7d0efe1
  0x00007f73e7d0efdc: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d0efe1: pop    %rsi
  0x00007f73e7d0efe2: lea    0x348(%r15),%rdi
  0x00007f73e7d0efe9: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d0eff4: callq  0x00007f73fe036050  ;   {runtime_call JVM_IsPrimitiveClass}
  0x00007f73e7d0eff9: vzeroupper 
  0x00007f73e7d0effc: and    $0xff,%eax
  0x00007f73e7d0f002: setne  %al
  0x00007f73e7d0f005: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d0f010: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d0f016: testb  $0x8,0x108(%r15)
  0x00007f73e7d0f01e: jne    0x00007f73e7d0f035
  0x00007f73e7d0f024: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d0f02f: je     0x00007f73e7d0f059
  0x00007f73e7d0f035: vzeroupper 
  0x00007f73e7d0f038: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0f03c: mov    %r15,%rdi
  0x00007f73e7d0f03f: mov    %rsp,%r12
  0x00007f73e7d0f042: sub    $0x0,%rsp
  0x00007f73e7d0f046: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0f04a: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d0f04f: mov    %r12,%rsp
  0x00007f73e7d0f052: xor    %r12,%r12
  0x00007f73e7d0f055: mov    -0x8(%rbp),%rax
  0x00007f73e7d0f059: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d0f064: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d0f06f: je     0x00007f73e7d0f105
  0x00007f73e7d0f075: cmpb   $0x0,0x16e4f1bb(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d0f07c: je     0x00007f73e7d0f0ba
  0x00007f73e7d0f082: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0f086: movabs $0x80035d6e8,%rsi  ;   {metadata({method} {0x000000080035d6e8} 'isPrimitive' '()Z' in 'java/lang/Class')}
  0x00007f73e7d0f090: mov    %r15,%rdi
  0x00007f73e7d0f093: test   $0xf,%esp
  0x00007f73e7d0f099: je     0x00007f73e7d0f0b1
  0x00007f73e7d0f09f: sub    $0x8,%rsp
  0x00007f73e7d0f0a3: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0f0a8: add    $0x8,%rsp
  0x00007f73e7d0f0ac: jmpq   0x00007f73e7d0f0b6
  0x00007f73e7d0f0b1: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d0f0b6: mov    -0x8(%rbp),%rax
  0x00007f73e7d0f0ba: movabs $0x0,%r10
  0x00007f73e7d0f0c4: mov    %r10,0x328(%r15)
  0x00007f73e7d0f0cb: movabs $0x0,%r10
  0x00007f73e7d0f0d5: mov    %r10,0x330(%r15)
  0x00007f73e7d0f0dc: vzeroupper 
  0x00007f73e7d0f0df: mov    0xe0(%r15),%rcx
  0x00007f73e7d0f0e6: movl   $0x0,0x100(%rcx)
  0x00007f73e7d0f0f0: leaveq 
  0x00007f73e7d0f0f1: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d0f0f9: jne    0x00007f73e7d0f100
  0x00007f73e7d0f0ff: retq   
  0x00007f73e7d0f100: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d0f105: vzeroupper 
  0x00007f73e7d0f108: mov    %rax,-0x8(%rbp)
  0x00007f73e7d0f10c: mov    %rsp,%r12
  0x00007f73e7d0f10f: sub    $0x0,%rsp
  0x00007f73e7d0f113: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0f117: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d0f11c: mov    %r12,%rsp
  0x00007f73e7d0f11f: xor    %r12,%r12
  0x00007f73e7d0f122: mov    -0x8(%rbp),%rax
  0x00007f73e7d0f126: jmpq   0x00007f73e7d0f075
  0x00007f73e7d0f12b: hlt    
  0x00007f73e7d0f12c: hlt    
  0x00007f73e7d0f12d: hlt    
  0x00007f73e7d0f12e: hlt    
  0x00007f73e7d0f12f: hlt    
Compiled method (c1)   41080  105       1       java.lang.reflect.Method::getName (5 bytes)
 total in heap  [0x00007f73e7d0f190,0x00007f73e7d0f470] = 736
 relocation     [0x00007f73e7d0f308,0x00007f73e7d0f328] = 32
 main code      [0x00007f73e7d0f340,0x00007f73e7d0f3e0] = 160
 stub code      [0x00007f73e7d0f3e0,0x00007f73e7d0f410] = 48
 metadata       [0x00007f73e7d0f410,0x00007f73e7d0f418] = 8
 scopes data    [0x00007f73e7d0f418,0x00007f73e7d0f428] = 16
 scopes pcs     [0x00007f73e7d0f428,0x00007f73e7d0f468] = 64
 dependencies   [0x00007f73e7d0f468,0x00007f73e7d0f470] = 8
----------------------------------------------------------------------
java/lang/reflect/Method.getName()Ljava/lang/String;  [0x00007f73e7d0f340, 0x00007f73e7d0f410]  208 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008003a12d0} 'getName' '()Ljava/lang/String;' in 'java/lang/reflect/Method'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d0f340: mov    0x8(%rsi),%r10d
  0x00007f73e7d0f344: shl    $0x3,%r10
  0x00007f73e7d0f348: movabs $0x800000000,%r12
  0x00007f73e7d0f352: add    %r12,%r10
  0x00007f73e7d0f355: xor    %r12,%r12
  0x00007f73e7d0f358: cmp    %rax,%r10
  0x00007f73e7d0f35b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0f361: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d0f36c: data16 data16 xchg %ax,%ax
  0x00007f73e7d0f370: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d0f37b: data16 data16 xchg %ax,%ax
  0x00007f73e7d0f37f: nop
[Verified Entry Point]
  0x00007f73e7d0f380: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0f387: push   %rbp
  0x00007f73e7d0f388: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.reflect.Method::getName@0 (line 231)

  0x00007f73e7d0f38c: mov    0x2c(%rsi),%eax    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.reflect.Method::getName@1 (line 231)

  0x00007f73e7d0f38f: add    $0x30,%rsp
  0x00007f73e7d0f393: pop    %rbp
  0x00007f73e7d0f394: mov    0x108(%r15),%r10
  0x00007f73e7d0f39b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d0f39e: retq   
  0x00007f73e7d0f39f: nop
  0x00007f73e7d0f3a0: nop
  0x00007f73e7d0f3a1: mov    0x428(%r15),%rax
  0x00007f73e7d0f3a8: movabs $0x0,%r10
  0x00007f73e7d0f3b2: mov    %r10,0x428(%r15)
  0x00007f73e7d0f3b9: movabs $0x0,%r10
  0x00007f73e7d0f3c3: mov    %r10,0x430(%r15)
  0x00007f73e7d0f3ca: add    $0x30,%rsp
  0x00007f73e7d0f3ce: pop    %rbp
  0x00007f73e7d0f3cf: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e7d0f3d4: hlt    
  0x00007f73e7d0f3d5: hlt    
  0x00007f73e7d0f3d6: hlt    
  0x00007f73e7d0f3d7: hlt    
  0x00007f73e7d0f3d8: hlt    
  0x00007f73e7d0f3d9: hlt    
  0x00007f73e7d0f3da: hlt    
  0x00007f73e7d0f3db: hlt    
  0x00007f73e7d0f3dc: hlt    
  0x00007f73e7d0f3dd: hlt    
  0x00007f73e7d0f3de: hlt    
  0x00007f73e7d0f3df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d0f3e0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e7d0f3e5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e7d0f3ef: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0f3f3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e7d0f3f8: hlt    
[Deopt Handler Code]
  0x00007f73e7d0f3f9: movabs $0x7f73e7d0f3f9,%r10  ;   {section_word}
  0x00007f73e7d0f403: push   %r10
  0x00007f73e7d0f405: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d0f40a: hlt    
  0x00007f73e7d0f40b: hlt    
  0x00007f73e7d0f40c: hlt    
  0x00007f73e7d0f40d: hlt    
  0x00007f73e7d0f40e: hlt    
  0x00007f73e7d0f40f: hlt    
Compiled method (c1)   41413  108       1       java.lang.Class::getModule (5 bytes)
 total in heap  [0x00007f73e7d0f490,0x00007f73e7d0f770] = 736
 relocation     [0x00007f73e7d0f608,0x00007f73e7d0f628] = 32
 main code      [0x00007f73e7d0f640,0x00007f73e7d0f6e0] = 160
 stub code      [0x00007f73e7d0f6e0,0x00007f73e7d0f710] = 48
 metadata       [0x00007f73e7d0f710,0x00007f73e7d0f718] = 8
 scopes data    [0x00007f73e7d0f718,0x00007f73e7d0f728] = 16
 scopes pcs     [0x00007f73e7d0f728,0x00007f73e7d0f768] = 64
 dependencies   [0x00007f73e7d0f768,0x00007f73e7d0f770] = 8
----------------------------------------------------------------------
java/lang/Class.getModule()Ljava/lang/Module;  [0x00007f73e7d0f640, 0x00007f73e7d0f710]  208 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080035d430} 'getModule' '()Ljava/lang/Module;' in 'java/lang/Class'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d0f640: mov    0x8(%rsi),%r10d
  0x00007f73e7d0f644: shl    $0x3,%r10
  0x00007f73e7d0f648: movabs $0x800000000,%r12
  0x00007f73e7d0f652: add    %r12,%r10
  0x00007f73e7d0f655: xor    %r12,%r12
  0x00007f73e7d0f658: cmp    %rax,%r10
  0x00007f73e7d0f65b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0f661: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d0f66c: data16 data16 xchg %ax,%ax
  0x00007f73e7d0f670: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d0f67b: data16 data16 xchg %ax,%ax
  0x00007f73e7d0f67f: nop
[Verified Entry Point]
  0x00007f73e7d0f680: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0f687: push   %rbp
  0x00007f73e7d0f688: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getModule@0 (line 856)

  0x00007f73e7d0f68c: mov    0x18(%rsi),%eax    ;*getfield module {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getModule@1 (line 856)

  0x00007f73e7d0f68f: add    $0x30,%rsp
  0x00007f73e7d0f693: pop    %rbp
  0x00007f73e7d0f694: mov    0x108(%r15),%r10
  0x00007f73e7d0f69b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d0f69e: retq   
  0x00007f73e7d0f69f: nop
  0x00007f73e7d0f6a0: nop
  0x00007f73e7d0f6a1: mov    0x428(%r15),%rax
  0x00007f73e7d0f6a8: movabs $0x0,%r10
  0x00007f73e7d0f6b2: mov    %r10,0x428(%r15)
  0x00007f73e7d0f6b9: movabs $0x0,%r10
  0x00007f73e7d0f6c3: mov    %r10,0x430(%r15)
  0x00007f73e7d0f6ca: add    $0x30,%rsp
  0x00007f73e7d0f6ce: pop    %rbp
  0x00007f73e7d0f6cf: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e7d0f6d4: hlt    
  0x00007f73e7d0f6d5: hlt    
  0x00007f73e7d0f6d6: hlt    
  0x00007f73e7d0f6d7: hlt    
  0x00007f73e7d0f6d8: hlt    
  0x00007f73e7d0f6d9: hlt    
  0x00007f73e7d0f6da: hlt    
  0x00007f73e7d0f6db: hlt    
  0x00007f73e7d0f6dc: hlt    
  0x00007f73e7d0f6dd: hlt    
  0x00007f73e7d0f6de: hlt    
  0x00007f73e7d0f6df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d0f6e0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e7d0f6e5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e7d0f6ef: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d0f6f3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e7d0f6f8: hlt    
[Deopt Handler Code]
  0x00007f73e7d0f6f9: movabs $0x7f73e7d0f6f9,%r10  ;   {section_word}
  0x00007f73e7d0f703: push   %r10
  0x00007f73e7d0f705: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d0f70a: hlt    
  0x00007f73e7d0f70b: hlt    
  0x00007f73e7d0f70c: hlt    
  0x00007f73e7d0f70d: hlt    
  0x00007f73e7d0f70e: hlt    
  0x00007f73e7d0f70f: hlt    
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x00007f73e7d0ffc0, 0x00007f73e7d101d0]  528 bytes
[Entry Point]
  # {method} {0x000000080037b4d0} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d0ffc0: mov    0x8(%rsi),%r10d
  0x00007f73e7d0ffc4: shl    $0x3,%r10
  0x00007f73e7d0ffc8: movabs $0x800000000,%r12
  0x00007f73e7d0ffd2: add    %r12,%r10
  0x00007f73e7d0ffd5: xor    %r12,%r12
  0x00007f73e7d0ffd8: cmp    %r10,%rax
  0x00007f73e7d0ffdb: je     0x00007f73e7d0ffe8
  0x00007f73e7d0ffe1: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0ffe6: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0ffe8: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0ffef: push   %rbp
  0x00007f73e7d0fff0: mov    %rsp,%rbp
  0x00007f73e7d0fff3: sub    $0x40,%rsp
  0x00007f73e7d0fff7: mov    %rdx,0x8(%rsp)
  0x00007f73e7d0fffc: cmp    $0x0,%rdx
  0x00007f73e7d10000: lea    0x8(%rsp),%rdx
  0x00007f73e7d10005: cmove  0x8(%rsp),%rdx
  0x00007f73e7d1000b: mov    %rsi,(%rsp)
  0x00007f73e7d1000f: cmp    $0x0,%rsi
  0x00007f73e7d10013: lea    (%rsp),%rsi
  0x00007f73e7d10017: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x00007f73e7d1001c: vzeroupper 
  0x00007f73e7d1001f: movabs $0x7f73e7d1001c,%r10  ;   {internal_word}
  0x00007f73e7d10029: mov    %r10,0x330(%r15)
  0x00007f73e7d10030: mov    %rsp,0x328(%r15)
  0x00007f73e7d10037: cmpb   $0x0,0x16e4e1f9(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d1003e: je     0x00007f73e7d10082
  0x00007f73e7d10044: push   %rsi
  0x00007f73e7d10045: push   %rdx
  0x00007f73e7d10046: push   %rcx
  0x00007f73e7d10047: push   %r8
  0x00007f73e7d10049: push   %r9
  0x00007f73e7d1004b: movabs $0x80037b4d0,%rsi  ;   {metadata({method} {0x000000080037b4d0} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d10055: mov    %r15,%rdi
  0x00007f73e7d10058: test   $0xf,%esp
  0x00007f73e7d1005e: je     0x00007f73e7d10076
  0x00007f73e7d10064: sub    $0x8,%rsp
  0x00007f73e7d10068: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d1006d: add    $0x8,%rsp
  0x00007f73e7d10071: jmpq   0x00007f73e7d1007b
  0x00007f73e7d10076: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d1007b: pop    %r9
  0x00007f73e7d1007d: pop    %r8
  0x00007f73e7d1007f: pop    %rcx
  0x00007f73e7d10080: pop    %rdx
  0x00007f73e7d10081: pop    %rsi
  0x00007f73e7d10082: lea    0x348(%r15),%rdi
  0x00007f73e7d10089: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d10094: callq  0x00007f73fe54f790  ;   {runtime_call}
  0x00007f73e7d10099: vzeroupper 
  0x00007f73e7d1009c: and    $0xff,%eax
  0x00007f73e7d100a2: setne  %al
  0x00007f73e7d100a5: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d100b0: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d100b6: testb  $0x8,0x108(%r15)
  0x00007f73e7d100be: jne    0x00007f73e7d100d5
  0x00007f73e7d100c4: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d100cf: je     0x00007f73e7d100f9
  0x00007f73e7d100d5: vzeroupper 
  0x00007f73e7d100d8: mov    %rax,-0x8(%rbp)
  0x00007f73e7d100dc: mov    %r15,%rdi
  0x00007f73e7d100df: mov    %rsp,%r12
  0x00007f73e7d100e2: sub    $0x0,%rsp
  0x00007f73e7d100e6: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d100ea: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d100ef: mov    %r12,%rsp
  0x00007f73e7d100f2: xor    %r12,%r12
  0x00007f73e7d100f5: mov    -0x8(%rbp),%rax
  0x00007f73e7d100f9: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d10104: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d1010f: je     0x00007f73e7d101a5
  0x00007f73e7d10115: cmpb   $0x0,0x16e4e11b(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d1011c: je     0x00007f73e7d1015a
  0x00007f73e7d10122: mov    %rax,-0x8(%rbp)
  0x00007f73e7d10126: movabs $0x80037b4d0,%rsi  ;   {metadata({method} {0x000000080037b4d0} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d10130: mov    %r15,%rdi
  0x00007f73e7d10133: test   $0xf,%esp
  0x00007f73e7d10139: je     0x00007f73e7d10151
  0x00007f73e7d1013f: sub    $0x8,%rsp
  0x00007f73e7d10143: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d10148: add    $0x8,%rsp
  0x00007f73e7d1014c: jmpq   0x00007f73e7d10156
  0x00007f73e7d10151: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d10156: mov    -0x8(%rbp),%rax
  0x00007f73e7d1015a: movabs $0x0,%r10
  0x00007f73e7d10164: mov    %r10,0x328(%r15)
  0x00007f73e7d1016b: movabs $0x0,%r10
  0x00007f73e7d10175: mov    %r10,0x330(%r15)
  0x00007f73e7d1017c: vzeroupper 
  0x00007f73e7d1017f: mov    0xe0(%r15),%rcx
  0x00007f73e7d10186: movl   $0x0,0x100(%rcx)
  0x00007f73e7d10190: leaveq 
  0x00007f73e7d10191: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d10199: jne    0x00007f73e7d101a0
  0x00007f73e7d1019f: retq   
  0x00007f73e7d101a0: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d101a5: vzeroupper 
  0x00007f73e7d101a8: mov    %rax,-0x8(%rbp)
  0x00007f73e7d101ac: mov    %rsp,%r12
  0x00007f73e7d101af: sub    $0x0,%rsp
  0x00007f73e7d101b3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d101b7: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d101bc: mov    %r12,%rsp
  0x00007f73e7d101bf: xor    %r12,%r12
  0x00007f73e7d101c2: mov    -0x8(%rbp),%rax
  0x00007f73e7d101c6: jmpq   0x00007f73e7d10115
  0x00007f73e7d101cb: hlt    
  0x00007f73e7d101cc: hlt    
  0x00007f73e7d101cd: hlt    
  0x00007f73e7d101ce: hlt    
  0x00007f73e7d101cf: hlt    
Compiled method (c2)   42300  130       4       java.lang.String::hashCode (49 bytes)
 total in heap  [0x00007f73e7d0f790,0x00007f73e7d0fdb8] = 1576
 relocation     [0x00007f73e7d0f908,0x00007f73e7d0f920] = 24
 main code      [0x00007f73e7d0f920,0x00007f73e7d0fac0] = 416
 stub code      [0x00007f73e7d0fac0,0x00007f73e7d0fad8] = 24
 metadata       [0x00007f73e7d0fad8,0x00007f73e7d0faf0] = 24
 scopes data    [0x00007f73e7d0faf0,0x00007f73e7d0fbd0] = 224
 scopes pcs     [0x00007f73e7d0fbd0,0x00007f73e7d0fda0] = 464
 dependencies   [0x00007f73e7d0fda0,0x00007f73e7d0fda8] = 8
 nul chk table  [0x00007f73e7d0fda8,0x00007f73e7d0fdb8] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x00007f73e7d0f920, 0x00007f73e7d0fad8]  440 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800338948} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x00007f73e7d0f920: mov    0x8(%rsi),%r10d
  0x00007f73e7d0f924: shl    $0x3,%r10
  0x00007f73e7d0f928: movabs $0x800000000,%r12
  0x00007f73e7d0f932: add    %r12,%r10
  0x00007f73e7d0f935: xor    %r12,%r12
  0x00007f73e7d0f938: cmp    %r10,%rax
  0x00007f73e7d0f93b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d0f941: data16 xchg %ax,%ax
  0x00007f73e7d0f944: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d0f94c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d0f950: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d0f957: push   %rbp
  0x00007f73e7d0f958: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x00007f73e7d0f95c: vmovq  %rsi,%xmm0
  0x00007f73e7d0f961: mov    0x10(%rsi),%eax    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1 (line 1502)

  0x00007f73e7d0f964: test   %eax,%eax
  0x00007f73e7d0f966: je     0x00007f73e7d0f978  ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1502)

  0x00007f73e7d0f968: add    $0x20,%rsp
  0x00007f73e7d0f96c: pop    %rbp
  0x00007f73e7d0f96d: mov    0x108(%r15),%r10
  0x00007f73e7d0f974: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d0f977: retq   
  0x00007f73e7d0f978: mov    0xc(%rsi),%ebx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x00007f73e7d0f97b: mov    0xc(%rbx),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ; implicit exception: dispatches to 0x00007f73e7d0fab0
  0x00007f73e7d0f97e: test   %ecx,%ecx
  0x00007f73e7d0f980: jbe    0x00007f73e7d0fa81  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14 (line 1503)

  0x00007f73e7d0f986: movsbl 0x14(%rsi),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007f73e7d0f98a: test   %ebp,%ebp
  0x00007f73e7d0f98c: jne    0x00007f73e7d0faa0  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)

  0x00007f73e7d0f992: mov    %ecx,%r11d
  0x00007f73e7d0f995: dec    %r11d
  0x00007f73e7d0f998: cmp    %ecx,%r11d
  0x00007f73e7d0f99b: jae    0x00007f73e7d0fa88
  0x00007f73e7d0f9a1: movzbl 0x10(%rbx),%esi    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0f9a5: mov    %ecx,%r8d
  0x00007f73e7d0f9a8: add    $0xfffffffd,%r8d
  0x00007f73e7d0f9ac: mov    $0x80000000,%r9d
  0x00007f73e7d0f9b2: cmp    %r8d,%r11d
  0x00007f73e7d0f9b5: cmovl  %r9d,%r8d
  0x00007f73e7d0f9b9: mov    $0x1,%edx
  0x00007f73e7d0f9be: cmp    $0x1,%r8d
  0x00007f73e7d0f9c2: jle    0x00007f73e7d0fa51
  0x00007f73e7d0f9c8: mov    %esi,%edi
  0x00007f73e7d0f9ca: shl    $0x5,%edi
  0x00007f73e7d0f9cd: sub    %esi,%edi          ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0f9cf: mov    %rbx,%rbp          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10 (line 1503)

  0x00007f73e7d0f9d2: mov    $0xfa0,%eax
  0x00007f73e7d0f9d7: mov    %r8d,%r9d
  0x00007f73e7d0f9da: sub    %edx,%r9d
  0x00007f73e7d0f9dd: cmp    %eax,%r9d
  0x00007f73e7d0f9e0: cmovg  %eax,%r9d
  0x00007f73e7d0f9e4: add    %edx,%r9d
  0x00007f73e7d0f9e7: nopw   0x0(%rax,%rax,1)   ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0f9f0: movslq %edx,%rsi          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0f9f3: movzbl 0x10(%rbx,%rsi,1),%r11d
  0x00007f73e7d0f9f9: movzbl 0x13(%rbx,%rsi,1),%r14d
  0x00007f73e7d0f9ff: movzbl 0x11(%rbx,%rsi,1),%r10d
  0x00007f73e7d0fa05: movzbl 0x12(%rbx,%rsi,1),%esi
  0x00007f73e7d0fa0a: add    %r11d,%edi
  0x00007f73e7d0fa0d: mov    %edi,%r13d
  0x00007f73e7d0fa10: shl    $0x5,%r13d
  0x00007f73e7d0fa14: sub    %edi,%r13d
  0x00007f73e7d0fa17: add    %r10d,%r13d
  0x00007f73e7d0fa1a: mov    %r13d,%r10d
  0x00007f73e7d0fa1d: shl    $0x5,%r10d
  0x00007f73e7d0fa21: sub    %r13d,%r10d
  0x00007f73e7d0fa24: add    %esi,%r10d
  0x00007f73e7d0fa27: mov    %r10d,%esi
  0x00007f73e7d0fa2a: shl    $0x5,%esi
  0x00007f73e7d0fa2d: sub    %r10d,%esi
  0x00007f73e7d0fa30: add    %r14d,%esi         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa33: mov    %esi,%edi
  0x00007f73e7d0fa35: shl    $0x5,%edi
  0x00007f73e7d0fa38: sub    %esi,%edi          ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa3a: add    $0x4,%edx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa3d: cmp    %r9d,%edx
  0x00007f73e7d0fa40: jl     0x00007f73e7d0f9f0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa42: mov    0x108(%r15),%r11   ; ImmutableOopMap{rbx=NarrowOop rbp=Oop xmm0=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa49: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {poll}
  0x00007f73e7d0fa4c: cmp    %r8d,%edx
  0x00007f73e7d0fa4f: jl     0x00007f73e7d0f9d7
  0x00007f73e7d0fa51: cmp    %ecx,%edx
  0x00007f73e7d0fa53: jge    0x00007f73e7d0fa7d  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa55: movzbl 0x10(%rbx,%rdx,1),%r11d
  0x00007f73e7d0fa5b: mov    %esi,%eax
  0x00007f73e7d0fa5d: shl    $0x5,%eax
  0x00007f73e7d0fa60: sub    %esi,%eax
  0x00007f73e7d0fa62: add    %r11d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32 (line 196)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa65: inc    %edx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa67: cmp    %ecx,%edx
  0x00007f73e7d0fa69: jge    0x00007f73e7d0fa6f  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)

  0x00007f73e7d0fa6b: mov    %eax,%esi
  0x00007f73e7d0fa6d: jmp    0x00007f73e7d0fa55
  0x00007f73e7d0fa6f: vmovq  %xmm0,%r10
  0x00007f73e7d0fa74: mov    %eax,0x10(%r10)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44 (line 1505)

  0x00007f73e7d0fa78: jmpq   0x00007f73e7d0f968
  0x00007f73e7d0fa7d: mov    %esi,%eax
  0x00007f73e7d0fa7f: jmp    0x00007f73e7d0fa6f
  0x00007f73e7d0fa81: xor    %eax,%eax
  0x00007f73e7d0fa83: jmpq   0x00007f73e7d0f968
  0x00007f73e7d0fa88: mov    $0xffffff7e,%esi
  0x00007f73e7d0fa8d: vmovq  %xmm0,%rbp
  0x00007f73e7d0fa92: mov    %ebx,(%rsp)
  0x00007f73e7d0fa95: mov    %ecx,0x8(%rsp)
  0x00007f73e7d0fa99: xchg   %ax,%ax
  0x00007f73e7d0fa9b: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13 (line 195)
                                                ; - java.lang.String::hashCode@29 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d0faa0: mov    $0xffffff4d,%esi
  0x00007f73e7d0faa5: vmovsd %xmm0,0x8(%rsp)
  0x00007f73e7d0faab: callq  0x00007f73e0269880  ; ImmutableOopMap{[8]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::hashCode@19 (line 1504)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d0fab0: mov    $0xfffffff6,%esi
  0x00007f73e7d0fab5: xchg   %ax,%ax
  0x00007f73e7d0fab7: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13 (line 1503)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d0fabc: hlt    
  0x00007f73e7d0fabd: hlt    
  0x00007f73e7d0fabe: hlt    
  0x00007f73e7d0fabf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d0fac0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d0fac5: callq  0x00007f73e7d0faca
  0x00007f73e7d0faca: subq   $0x5,(%rsp)
  0x00007f73e7d0facf: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d0fad4: hlt    
  0x00007f73e7d0fad5: hlt    
  0x00007f73e7d0fad6: hlt    
  0x00007f73e7d0fad7: hlt    

ImmutableOopMap{rbx=NarrowOop rbp=Oop xmm0=Oop }pc offsets: 297 
ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 384 
ImmutableOopMap{[8]=Oop }pc offsets: 400 
ImmutableOopMap{}pc offsets: 412 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(ILjava/lang/invoke/MemberName;)I  [0x00007f73e7d103a0, 0x00007f73e7d103b8]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d35c5788} 'linkToStatic' '(ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d103a0: mov    0x24(%rdx),%ebx
  0x00007f73e7d103a3: mov    0x10(%rbx),%rbx
  0x00007f73e7d103a7: test   %rbx,%rbx
  0x00007f73e7d103aa: je     0x00007f73e7d103b3
  0x00007f73e7d103b0: jmpq   *0x38(%rbx)
  0x00007f73e7d103b3: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)   43730  136       3       java.lang.StringLatin1::indexOf (61 bytes)
 total in heap  [0x00007f73e07df090,0x00007f73e07df898] = 2056
 relocation     [0x00007f73e07df208,0x00007f73e07df258] = 80
 main code      [0x00007f73e07df260,0x00007f73e07df5e0] = 896
 stub code      [0x00007f73e07df5e0,0x00007f73e07df610] = 48
 metadata       [0x00007f73e07df610,0x00007f73e07df620] = 16
 scopes data    [0x00007f73e07df620,0x00007f73e07df6e0] = 192
 scopes pcs     [0x00007f73e07df6e0,0x00007f73e07df880] = 416
 dependencies   [0x00007f73e07df880,0x00007f73e07df888] = 8
 nul chk table  [0x00007f73e07df888,0x00007f73e07df898] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.indexOf([BII)I  [0x00007f73e07df260, 0x00007f73e07df610]  944 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f73e07df260: mov    %eax,-0x14000(%rsp)
  0x00007f73e07df267: push   %rbp
  0x00007f73e07df268: sub    $0x40,%rsp
  0x00007f73e07df26c: movabs $0x7f73d3533590,%rax  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df276: mov    0x104(%rax),%edi
  0x00007f73e07df27c: add    $0x8,%edi
  0x00007f73e07df27f: mov    %edi,0x104(%rax)
  0x00007f73e07df285: and    $0x1ff8,%edi
  0x00007f73e07df28b: cmp    $0x0,%edi
  0x00007f73e07df28e: je     0x00007f73e07df51c  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@0 (line 202)

  0x00007f73e07df294: movabs $0x7f73d3533590,%rax  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df29e: addq   $0x1,0x140(%rax)
  0x00007f73e07df2a6: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07df2b0: mov    0x104(%rax),%edi
  0x00007f73e07df2b6: add    $0x8,%edi
  0x00007f73e07df2b9: mov    %edi,0x104(%rax)
  0x00007f73e07df2bf: and    $0x7ffff8,%edi
  0x00007f73e07df2c5: cmp    $0x0,%edi
  0x00007f73e07df2c8: je     0x00007f73e07df53d
  0x00007f73e07df2ce: mov    %rdx,%rax
  0x00007f73e07df2d1: shr    $0x8,%eax
  0x00007f73e07df2d4: cmp    $0x0,%eax
  0x00007f73e07df2d7: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07df2e1: movabs $0x140,%rdi
  0x00007f73e07df2eb: jne    0x00007f73e07df2fb
  0x00007f73e07df2f1: movabs $0x150,%rdi
  0x00007f73e07df2fb: mov    (%rax,%rdi,1),%rbx
  0x00007f73e07df2ff: lea    0x1(%rbx),%rbx
  0x00007f73e07df303: mov    %rbx,(%rax,%rdi,1)
  0x00007f73e07df307: jne    0x00007f73e07df327  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007f73e07df30d: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07df317: incl   0x160(%rax)
  0x00007f73e07df31d: mov    $0x1,%eax
  0x00007f73e07df322: jmpq   0x00007f73e07df32c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007f73e07df327: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007f73e07df32c: and    $0x1,%eax
  0x00007f73e07df32f: cmp    $0x0,%eax
  0x00007f73e07df332: movabs $0x7f73d3533590,%rax  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df33c: movabs $0x160,%rdi
  0x00007f73e07df346: je     0x00007f73e07df356
  0x00007f73e07df34c: movabs $0x150,%rdi
  0x00007f73e07df356: mov    (%rax,%rdi,1),%rbx
  0x00007f73e07df35a: lea    0x1(%rbx),%rbx
  0x00007f73e07df35e: mov    %rbx,(%rax,%rdi,1)
  0x00007f73e07df362: je     0x00007f73e07df507  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@4 (line 202)

  0x00007f73e07df368: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ; implicit exception: dispatches to 0x00007f73e07df55e
  0x00007f73e07df36b: cmp    $0x0,%ecx
  0x00007f73e07df36e: movabs $0x7f73d3533590,%rdi  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df378: movabs $0x170,%rbx
  0x00007f73e07df382: jge    0x00007f73e07df392
  0x00007f73e07df388: movabs $0x180,%rbx
  0x00007f73e07df392: mov    (%rdi,%rbx,1),%r8
  0x00007f73e07df396: lea    0x1(%r8),%r8
  0x00007f73e07df39a: mov    %r8,(%rdi,%rbx,1)
  0x00007f73e07df39e: jge    0x00007f73e07df3be  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@13 (line 206)

  0x00007f73e07df3a4: movabs $0x7f73d3533590,%rdi  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df3ae: incl   0x190(%rdi)
  0x00007f73e07df3b4: mov    $0x0,%ecx
  0x00007f73e07df3b9: jmpq   0x00007f73e07df3f6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@18 (line 207)

  0x00007f73e07df3be: cmp    %eax,%ecx
  0x00007f73e07df3c0: movabs $0x7f73d3533590,%rdi  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df3ca: movabs $0x1b8,%rbx
  0x00007f73e07df3d4: jge    0x00007f73e07df3e4
  0x00007f73e07df3da: movabs $0x1a8,%rbx
  0x00007f73e07df3e4: mov    (%rdi,%rbx,1),%r8
  0x00007f73e07df3e8: lea    0x1(%r8),%r8
  0x00007f73e07df3ec: mov    %r8,(%rdi,%rbx,1)
  0x00007f73e07df3f0: jge    0x00007f73e07df4f2  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@23 (line 208)

  0x00007f73e07df3f6: movsbl %dl,%edx
  0x00007f73e07df3f9: jmpq   0x00007f73e07df48d  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@35 (line 213)

  0x00007f73e07df3fe: xchg   %ax,%ax
  0x00007f73e07df400: cmp    0xc(%rsi),%ecx
  0x00007f73e07df403: jae    0x00007f73e07df563
  0x00007f73e07df409: movslq %ecx,%rdi
  0x00007f73e07df40c: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e07df411: cmp    %edx,%edi
  0x00007f73e07df413: movabs $0x7f73d3533590,%rdi  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df41d: movabs $0x1f8,%rbx
  0x00007f73e07df427: je     0x00007f73e07df437
  0x00007f73e07df42d: movabs $0x1e8,%rbx
  0x00007f73e07df437: mov    (%rdi,%rbx,1),%r8
  0x00007f73e07df43b: lea    0x1(%r8),%r8
  0x00007f73e07df43f: mov    %r8,(%rdi,%rbx,1)
  0x00007f73e07df443: je     0x00007f73e07df4ca  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e07df449: inc    %ecx
  0x00007f73e07df44b: movabs $0x7f73d3533590,%rdi  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df455: mov    0x108(%rdi),%ebx
  0x00007f73e07df45b: add    $0x8,%ebx
  0x00007f73e07df45e: mov    %ebx,0x108(%rdi)
  0x00007f73e07df464: and    $0xfff8,%ebx
  0x00007f73e07df46a: cmp    $0x0,%ebx
  0x00007f73e07df46d: je     0x00007f73e07df571  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x00007f73e07df473: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x00007f73e07df47a: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07df47d: movabs $0x7f73d3533590,%rdi  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df487: incl   0x208(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x00007f73e07df48d: cmp    %eax,%ecx
  0x00007f73e07df48f: movabs $0x7f73d3533590,%rdi  ;   {metadata(method data for {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df499: movabs $0x1c8,%rbx
  0x00007f73e07df4a3: jge    0x00007f73e07df4b3
  0x00007f73e07df4a9: movabs $0x1d8,%rbx
  0x00007f73e07df4b3: mov    (%rdi,%rbx,1),%r8
  0x00007f73e07df4b7: lea    0x1(%r8),%r8
  0x00007f73e07df4bb: mov    %r8,(%rdi,%rbx,1)
  0x00007f73e07df4bf: jge    0x00007f73e07df4dd
  0x00007f73e07df4c5: jmpq   0x00007f73e07df400  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)

  0x00007f73e07df4ca: mov    %rcx,%rax
  0x00007f73e07df4cd: add    $0x40,%rsp
  0x00007f73e07df4d1: pop    %rbp
  0x00007f73e07df4d2: mov    0x108(%r15),%r10
  0x00007f73e07df4d9: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07df4dc: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@52 (line 215)

  0x00007f73e07df4dd: mov    $0xffffffff,%eax
  0x00007f73e07df4e2: add    $0x40,%rsp
  0x00007f73e07df4e6: pop    %rbp
  0x00007f73e07df4e7: mov    0x108(%r15),%r10
  0x00007f73e07df4ee: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07df4f1: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@60 (line 218)

  0x00007f73e07df4f2: mov    $0xffffffff,%eax
  0x00007f73e07df4f7: add    $0x40,%rsp
  0x00007f73e07df4fb: pop    %rbp
  0x00007f73e07df4fc: mov    0x108(%r15),%r10
  0x00007f73e07df503: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07df506: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@27 (line 210)

  0x00007f73e07df507: mov    $0xffffffff,%eax
  0x00007f73e07df50c: add    $0x40,%rsp
  0x00007f73e07df510: pop    %rbp
  0x00007f73e07df511: mov    0x108(%r15),%r10
  0x00007f73e07df518: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07df51b: retq   
  0x00007f73e07df51c: movabs $0x80033e920,%r10  ;   {metadata({method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df526: mov    %r10,0x8(%rsp)
  0x00007f73e07df52b: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07df533: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1 (line 202)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07df538: jmpq   0x00007f73e07df294
  0x00007f73e07df53d: movabs $0x80033f1b8,%r10  ;   {metadata({method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07df547: mov    %r10,0x8(%rsp)
  0x00007f73e07df54c: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07df554: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07df559: jmpq   0x00007f73e07df2ce
  0x00007f73e07df55e: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07df563: mov    %rcx,(%rsp)
  0x00007f73e07df567: mov    %rsi,0x8(%rsp)
  0x00007f73e07df56c: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07df571: movabs $0x80033e920,%r10  ;   {metadata({method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07df57b: mov    %r10,0x8(%rsp)
  0x00007f73e07df580: movq   $0x38,(%rsp)
  0x00007f73e07df588: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07df58d: jmpq   0x00007f73e07df473
  0x00007f73e07df592: nop
  0x00007f73e07df593: nop
  0x00007f73e07df594: mov    0x428(%r15),%rax
  0x00007f73e07df59b: movabs $0x0,%r10
  0x00007f73e07df5a5: mov    %r10,0x428(%r15)
  0x00007f73e07df5ac: movabs $0x0,%r10
  0x00007f73e07df5b6: mov    %r10,0x430(%r15)
  0x00007f73e07df5bd: add    $0x40,%rsp
  0x00007f73e07df5c1: pop    %rbp
  0x00007f73e07df5c2: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07df5c7: hlt    
  0x00007f73e07df5c8: hlt    
  0x00007f73e07df5c9: hlt    
  0x00007f73e07df5ca: hlt    
  0x00007f73e07df5cb: hlt    
  0x00007f73e07df5cc: hlt    
  0x00007f73e07df5cd: hlt    
  0x00007f73e07df5ce: hlt    
  0x00007f73e07df5cf: hlt    
  0x00007f73e07df5d0: hlt    
  0x00007f73e07df5d1: hlt    
  0x00007f73e07df5d2: hlt    
  0x00007f73e07df5d3: hlt    
  0x00007f73e07df5d4: hlt    
  0x00007f73e07df5d5: hlt    
  0x00007f73e07df5d6: hlt    
  0x00007f73e07df5d7: hlt    
  0x00007f73e07df5d8: hlt    
  0x00007f73e07df5d9: hlt    
  0x00007f73e07df5da: hlt    
  0x00007f73e07df5db: hlt    
  0x00007f73e07df5dc: hlt    
  0x00007f73e07df5dd: hlt    
  0x00007f73e07df5de: hlt    
  0x00007f73e07df5df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07df5e0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07df5e5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07df5ef: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07df5f3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07df5f8: hlt    
[Deopt Handler Code]
  0x00007f73e07df5f9: movabs $0x7f73e07df5f9,%r10  ;   {section_word}
  0x00007f73e07df603: push   %r10
  0x00007f73e07df605: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07df60a: hlt    
  0x00007f73e07df60b: hlt    
  0x00007f73e07df60c: hlt    
  0x00007f73e07df60d: hlt    
  0x00007f73e07df60e: hlt    
  0x00007f73e07df60f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 538 728 761 771 785 813 Compiled method (c1)   44986  142       3       java.lang.StringLatin1::lastIndexOf (40 bytes)
 total in heap  [0x00007f73e07df910,0x00007f73e07e0118] = 2056
 relocation     [0x00007f73e07dfa88,0x00007f73e07dfae0] = 88
 main code      [0x00007f73e07dfae0,0x00007f73e07dfe60] = 896
 stub code      [0x00007f73e07dfe60,0x00007f73e07dfe90] = 48
 metadata       [0x00007f73e07dfe90,0x00007f73e07dfea8] = 24
 scopes data    [0x00007f73e07dfea8,0x00007f73e07dff70] = 200
 scopes pcs     [0x00007f73e07dff70,0x00007f73e07e0100] = 400
 dependencies   [0x00007f73e07e0100,0x00007f73e07e0108] = 8
 nul chk table  [0x00007f73e07e0108,0x00007f73e07e0118] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.lastIndexOf([BII)I  [0x00007f73e07dfae0, 0x00007f73e07dfe90]  944 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f73e07dfae0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07dfae7: push   %rbp
  0x00007f73e07dfae8: sub    $0x40,%rsp
  0x00007f73e07dfaec: movabs $0x7f73d3533a98,%rax  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfaf6: mov    0x104(%rax),%edi
  0x00007f73e07dfafc: add    $0x8,%edi
  0x00007f73e07dfaff: mov    %edi,0x104(%rax)
  0x00007f73e07dfb05: and    $0x1ff8,%edi
  0x00007f73e07dfb0b: cmp    $0x0,%edi
  0x00007f73e07dfb0e: je     0x00007f73e07dfd8f  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@0 (line 284)

  0x00007f73e07dfb14: movabs $0x7f73d3533a98,%rax  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfb1e: addq   $0x1,0x140(%rax)
  0x00007f73e07dfb26: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07dfb30: mov    0x104(%rax),%edi
  0x00007f73e07dfb36: add    $0x8,%edi
  0x00007f73e07dfb39: mov    %edi,0x104(%rax)
  0x00007f73e07dfb3f: and    $0x7ffff8,%edi
  0x00007f73e07dfb45: cmp    $0x0,%edi
  0x00007f73e07dfb48: je     0x00007f73e07dfdb0
  0x00007f73e07dfb4e: mov    %rdx,%rax
  0x00007f73e07dfb51: shr    $0x8,%eax
  0x00007f73e07dfb54: cmp    $0x0,%eax
  0x00007f73e07dfb57: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07dfb61: movabs $0x140,%rdi
  0x00007f73e07dfb6b: jne    0x00007f73e07dfb7b
  0x00007f73e07dfb71: movabs $0x150,%rdi
  0x00007f73e07dfb7b: mov    (%rax,%rdi,1),%rbx
  0x00007f73e07dfb7f: lea    0x1(%rbx),%rbx
  0x00007f73e07dfb83: mov    %rbx,(%rax,%rdi,1)
  0x00007f73e07dfb87: jne    0x00007f73e07dfba7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007f73e07dfb8d: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07dfb97: incl   0x160(%rax)
  0x00007f73e07dfb9d: mov    $0x1,%eax
  0x00007f73e07dfba2: jmpq   0x00007f73e07dfbac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007f73e07dfba7: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007f73e07dfbac: and    $0x1,%eax
  0x00007f73e07dfbaf: cmp    $0x0,%eax
  0x00007f73e07dfbb2: movabs $0x7f73d3533a98,%rax  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfbbc: movabs $0x160,%rdi
  0x00007f73e07dfbc6: je     0x00007f73e07dfbd6
  0x00007f73e07dfbcc: movabs $0x150,%rdi
  0x00007f73e07dfbd6: mov    (%rax,%rdi,1),%rbx
  0x00007f73e07dfbda: lea    0x1(%rbx),%rbx
  0x00007f73e07dfbde: mov    %rbx,(%rax,%rdi,1)
  0x00007f73e07dfbe2: je     0x00007f73e07dfd7a  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@4 (line 284)

  0x00007f73e07dfbe8: mov    0xc(%rsi),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@11 (line 287)
                                                ; implicit exception: dispatches to 0x00007f73e07dfdd1
  0x00007f73e07dfbeb: dec    %eax
  0x00007f73e07dfbed: movabs $0x7f73d3533a98,%rdi  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfbf7: addq   $0x1,0x170(%rdi)
  0x00007f73e07dfbff: movabs $0x7f73d3532fe8,%rdi  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07dfc09: mov    0x104(%rdi),%ebx
  0x00007f73e07dfc0f: add    $0x8,%ebx
  0x00007f73e07dfc12: mov    %ebx,0x104(%rdi)
  0x00007f73e07dfc18: and    $0x7ffff8,%ebx
  0x00007f73e07dfc1e: cmp    $0x0,%ebx
  0x00007f73e07dfc21: je     0x00007f73e07dfdd6
  0x00007f73e07dfc27: cmp    %eax,%ecx
  0x00007f73e07dfc29: movabs $0x7f73d3532fe8,%rdi  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07dfc33: movabs $0x140,%rbx
  0x00007f73e07dfc3d: jg     0x00007f73e07dfc4d
  0x00007f73e07dfc43: movabs $0x150,%rbx
  0x00007f73e07dfc4d: mov    (%rdi,%rbx,1),%r8
  0x00007f73e07dfc51: lea    0x1(%r8),%r8
  0x00007f73e07dfc55: mov    %r8,(%rdi,%rbx,1)
  0x00007f73e07dfc59: jg     0x00007f73e07dfc74  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1518)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)

  0x00007f73e07dfc5f: movabs $0x7f73d3532fe8,%rax  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07dfc69: incl   0x160(%rax)
  0x00007f73e07dfc6f: jmpq   0x00007f73e07dfd14  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1518)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)

  0x00007f73e07dfc74: mov    %rax,%rcx
  0x00007f73e07dfc77: jmpq   0x00007f73e07dfd14  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1518)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)

  0x00007f73e07dfc7c: nopl   0x0(%rax)
  0x00007f73e07dfc80: cmp    0xc(%rsi),%ecx
  0x00007f73e07dfc83: jae    0x00007f73e07dfdf7
  0x00007f73e07dfc89: movslq %ecx,%rax
  0x00007f73e07dfc8c: movsbl 0x10(%rsi,%rax,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e07dfc91: mov    %rdx,%rdi
  0x00007f73e07dfc94: movsbl %dil,%edi
  0x00007f73e07dfc98: cmp    %edi,%eax
  0x00007f73e07dfc9a: movabs $0x7f73d3533a98,%rax  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfca4: movabs $0x1b0,%rdi
  0x00007f73e07dfcae: je     0x00007f73e07dfcbe
  0x00007f73e07dfcb4: movabs $0x1a0,%rdi
  0x00007f73e07dfcbe: mov    (%rax,%rdi,1),%rbx
  0x00007f73e07dfcc2: lea    0x1(%rbx),%rbx
  0x00007f73e07dfcc6: mov    %rbx,(%rax,%rdi,1)
  0x00007f73e07dfcca: je     0x00007f73e07dfd52  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e07dfcd0: dec    %ecx
  0x00007f73e07dfcd2: movabs $0x7f73d3533a98,%rax  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfcdc: mov    0x108(%rax),%edi
  0x00007f73e07dfce2: add    $0x8,%edi
  0x00007f73e07dfce5: mov    %edi,0x108(%rax)
  0x00007f73e07dfceb: and    $0xfff8,%edi
  0x00007f73e07dfcf1: cmp    $0x0,%edi
  0x00007f73e07dfcf4: je     0x00007f73e07dfe05  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007f73e07dfcfa: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007f73e07dfd01: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07dfd04: movabs $0x7f73d3533a98,%rax  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfd0e: incl   0x1c0(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007f73e07dfd14: cmp    $0x0,%ecx
  0x00007f73e07dfd17: movabs $0x7f73d3533a98,%rax  ;   {metadata(method data for {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfd21: movabs $0x180,%rdi
  0x00007f73e07dfd2b: jl     0x00007f73e07dfd3b
  0x00007f73e07dfd31: movabs $0x190,%rdi
  0x00007f73e07dfd3b: mov    (%rax,%rdi,1),%rbx
  0x00007f73e07dfd3f: lea    0x1(%rbx),%rbx
  0x00007f73e07dfd43: mov    %rbx,(%rax,%rdi,1)
  0x00007f73e07dfd47: jl     0x00007f73e07dfd65
  0x00007f73e07dfd4d: jmpq   0x00007f73e07dfc80  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@19 (line 288)

  0x00007f73e07dfd52: mov    %rcx,%rax
  0x00007f73e07dfd55: add    $0x40,%rsp
  0x00007f73e07dfd59: pop    %rbp
  0x00007f73e07dfd5a: mov    0x108(%r15),%r10
  0x00007f73e07dfd61: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07dfd64: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@31 (line 290)

  0x00007f73e07dfd65: mov    $0xffffffff,%eax
  0x00007f73e07dfd6a: add    $0x40,%rsp
  0x00007f73e07dfd6e: pop    %rbp
  0x00007f73e07dfd6f: mov    0x108(%r15),%r10
  0x00007f73e07dfd76: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07dfd79: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@39 (line 293)

  0x00007f73e07dfd7a: mov    $0xffffffff,%eax
  0x00007f73e07dfd7f: add    $0x40,%rsp
  0x00007f73e07dfd83: pop    %rbp
  0x00007f73e07dfd84: mov    0x108(%r15),%r10
  0x00007f73e07dfd8b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07dfd8e: retq   
  0x00007f73e07dfd8f: movabs $0x80033ec90,%r10  ;   {metadata({method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfd99: mov    %r10,0x8(%rsp)
  0x00007f73e07dfd9e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dfda6: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::lastIndexOf@-1 (line 284)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dfdab: jmpq   0x00007f73e07dfb14
  0x00007f73e07dfdb0: movabs $0x80033f1b8,%r10  ;   {metadata({method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07dfdba: mov    %r10,0x8(%rsp)
  0x00007f73e07dfdbf: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dfdc7: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dfdcc: jmpq   0x00007f73e07dfb4e
  0x00007f73e07dfdd1: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@11 (line 287)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07dfdd6: movabs $0x80032c750,%r10  ;   {metadata({method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07dfde0: mov    %r10,0x8(%rsp)
  0x00007f73e07dfde5: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07dfded: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1518)
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dfdf2: jmpq   0x00007f73e07dfc27
  0x00007f73e07dfdf7: mov    %rcx,(%rsp)
  0x00007f73e07dfdfb: mov    %rsi,0x8(%rsp)
  0x00007f73e07dfe00: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07dfe05: movabs $0x80033ec90,%r10  ;   {metadata({method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x00007f73e07dfe0f: mov    %r10,0x8(%rsp)
  0x00007f73e07dfe14: movq   $0x23,(%rsp)
  0x00007f73e07dfe1c: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07dfe21: jmpq   0x00007f73e07dfcfa
  0x00007f73e07dfe26: nop
  0x00007f73e07dfe27: nop
  0x00007f73e07dfe28: mov    0x428(%r15),%rax
  0x00007f73e07dfe2f: movabs $0x0,%r10
  0x00007f73e07dfe39: mov    %r10,0x428(%r15)
  0x00007f73e07dfe40: movabs $0x0,%r10
  0x00007f73e07dfe4a: mov    %r10,0x430(%r15)
  0x00007f73e07dfe51: add    $0x40,%rsp
  0x00007f73e07dfe55: pop    %rbp
  0x00007f73e07dfe56: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07dfe5b: hlt    
  0x00007f73e07dfe5c: hlt    
  0x00007f73e07dfe5d: hlt    
  0x00007f73e07dfe5e: hlt    
  0x00007f73e07dfe5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07dfe60: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07dfe65: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07dfe6f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07dfe73: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07dfe78: hlt    
[Deopt Handler Code]
  0x00007f73e07dfe79: movabs $0x7f73e07dfe79,%r10  ;   {section_word}
  0x00007f73e07dfe83: push   %r10
  0x00007f73e07dfe85: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07dfe8a: hlt    
  0x00007f73e07dfe8b: hlt    
  0x00007f73e07dfe8c: hlt    
  0x00007f73e07dfe8d: hlt    
  0x00007f73e07dfe8e: hlt    
  0x00007f73e07dfe8f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 545 715 748 758 786 805 833 Compiled method (c2)   46329  151       4       java.lang.StringLatin1::indexOf (61 bytes)
 total in heap  [0x00007f73e7d10410,0x00007f73e7d10b78] = 1896
 relocation     [0x00007f73e7d10588,0x00007f73e7d105a0] = 24
 main code      [0x00007f73e7d105a0,0x00007f73e7d10760] = 448
 stub code      [0x00007f73e7d10760,0x00007f73e7d10778] = 24
 metadata       [0x00007f73e7d10778,0x00007f73e7d10788] = 16
 scopes data    [0x00007f73e7d10788,0x00007f73e7d10860] = 216
 scopes pcs     [0x00007f73e7d10860,0x00007f73e7d10b60] = 768
 dependencies   [0x00007f73e7d10b60,0x00007f73e7d10b68] = 8
 nul chk table  [0x00007f73e7d10b68,0x00007f73e7d10b78] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.indexOf([BII)I  [0x00007f73e7d105a0, 0x00007f73e7d10778]  472 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033e920} 'indexOf' '([BII)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d105a0: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d105a7: push   %rbp
  0x00007f73e7d105a8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1 (line 202)

  0x00007f73e7d105ac: mov    %edx,%ebp
  0x00007f73e7d105ae: shr    $0x8,%ebp          ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@3 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007f73e7d105b1: test   %ebp,%ebp
  0x00007f73e7d105b3: jne    0x00007f73e7d10718  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)

  0x00007f73e7d105b9: mov    0xc(%rsi),%r10d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ; implicit exception: dispatches to 0x00007f73e7d1074c
  0x00007f73e7d105bd: test   %ecx,%ecx
  0x00007f73e7d105bf: jl     0x00007f73e7d10730  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@13 (line 206)

  0x00007f73e7d105c5: mov    $0xffffffff,%eax
  0x00007f73e7d105ca: cmp    %r10d,%ecx
  0x00007f73e7d105cd: jge    0x00007f73e7d106d0  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@23 (line 208)

  0x00007f73e7d105d3: movsbl %dl,%edi           ;*i2b {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@29 (line 212)

  0x00007f73e7d105d6: cmp    %r10d,%ecx
  0x00007f73e7d105d9: jae    0x00007f73e7d106fe
  0x00007f73e7d105df: mov    %r10d,%r8d
  0x00007f73e7d105e2: dec    %r8d
  0x00007f73e7d105e5: cmp    %r10d,%r8d
  0x00007f73e7d105e8: jae    0x00007f73e7d106fe
  0x00007f73e7d105ee: mov    %ecx,%r11d
  0x00007f73e7d105f1: inc    %r11d              ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@41 (line 214)

  0x00007f73e7d105f4: movsbl 0x10(%rsi,%rcx,1),%r9d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d105fa: cmp    %edi,%r9d
  0x00007f73e7d105fd: je     0x00007f73e7d106ce  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d10603: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@53 (line 213)

  0x00007f73e7d10605: cmp    %r11d,%ecx
  0x00007f73e7d10608: jl     0x00007f73e7d105f4  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)

  0x00007f73e7d1060a: mov    %r10d,%r9d
  0x00007f73e7d1060d: add    $0xfffffff9,%r9d
  0x00007f73e7d10611: mov    $0x80000000,%r11d
  0x00007f73e7d10617: cmp    %r9d,%r8d
  0x00007f73e7d1061a: cmovl  %r11d,%r9d
  0x00007f73e7d1061e: cmp    %r9d,%ecx
  0x00007f73e7d10621: jge    0x00007f73e7d106b0
  0x00007f73e7d10627: mov    $0x1f40,%ebx
  0x00007f73e7d1062c: mov    %r9d,%r8d
  0x00007f73e7d1062f: sub    %ecx,%r8d
  0x00007f73e7d10632: cmp    %ebx,%r8d
  0x00007f73e7d10635: cmovg  %ebx,%r8d
  0x00007f73e7d10639: add    %ecx,%r8d
  0x00007f73e7d1063c: nopl   0x0(%rax)          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@41 (line 214)

  0x00007f73e7d10640: movsbl 0x10(%rsi,%rcx,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d10646: cmp    %edi,%r11d
  0x00007f73e7d10649: je     0x00007f73e7d106ce  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d1064f: movslq %ecx,%rbp
  0x00007f73e7d10652: movsbl 0x11(%rsi,%rbp,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d10658: cmp    %edi,%r11d
  0x00007f73e7d1065b: je     0x00007f73e7d106cc  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d1065d: movsbl 0x12(%rsi,%rbp,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d10663: cmp    %edi,%r11d
  0x00007f73e7d10666: je     0x00007f73e7d106e0  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d10668: movsbl 0x13(%rsi,%rbp,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d1066d: cmp    %edi,%edx
  0x00007f73e7d1066f: je     0x00007f73e7d106e5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d10671: movsbl 0x14(%rsi,%rbp,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d10676: cmp    %edi,%edx
  0x00007f73e7d10678: je     0x00007f73e7d106ea  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d1067a: movsbl 0x15(%rsi,%rbp,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d1067f: cmp    %edi,%edx
  0x00007f73e7d10681: je     0x00007f73e7d106ef  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d10683: movsbl 0x16(%rsi,%rbp,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d10688: cmp    %edi,%edx
  0x00007f73e7d1068a: je     0x00007f73e7d106f4  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d1068c: movsbl 0x17(%rsi,%rbp,1),%edx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d10691: cmp    %edi,%edx
  0x00007f73e7d10693: je     0x00007f73e7d106f9  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d10695: add    $0x8,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@53 (line 213)

  0x00007f73e7d10698: cmp    %r8d,%ecx
  0x00007f73e7d1069b: jl     0x00007f73e7d10640  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)

  0x00007f73e7d1069d: mov    0x108(%r15),%r11   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)

  0x00007f73e7d106a4: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56 (line 213)
                                                ;   {poll}
  0x00007f73e7d106a7: cmp    %r9d,%ecx
  0x00007f73e7d106aa: jl     0x00007f73e7d1062c
  0x00007f73e7d106b0: cmp    %r10d,%ecx
  0x00007f73e7d106b3: jge    0x00007f73e7d106d0
  0x00007f73e7d106b5: data16 xchg %ax,%ax       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@41 (line 214)

  0x00007f73e7d106b8: movsbl 0x10(%rsi,%rcx,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44 (line 214)

  0x00007f73e7d106be: cmp    %edi,%r8d
  0x00007f73e7d106c1: je     0x00007f73e7d106ce  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47 (line 214)

  0x00007f73e7d106c3: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@53 (line 213)

  0x00007f73e7d106c5: cmp    %r10d,%ecx
  0x00007f73e7d106c8: jl     0x00007f73e7d106b8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)

  0x00007f73e7d106ca: jmp    0x00007f73e7d106d0
  0x00007f73e7d106cc: inc    %ecx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@53 (line 213)

  0x00007f73e7d106ce: mov    %ecx,%eax          ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1 (line 202)

  0x00007f73e7d106d0: add    $0x30,%rsp
  0x00007f73e7d106d4: pop    %rbp
  0x00007f73e7d106d5: mov    0x108(%r15),%r10
  0x00007f73e7d106dc: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d106df: retq   
  0x00007f73e7d106e0: add    $0x2,%ecx
  0x00007f73e7d106e3: jmp    0x00007f73e7d106ce
  0x00007f73e7d106e5: add    $0x3,%ecx
  0x00007f73e7d106e8: jmp    0x00007f73e7d106ce
  0x00007f73e7d106ea: add    $0x4,%ecx
  0x00007f73e7d106ed: jmp    0x00007f73e7d106ce
  0x00007f73e7d106ef: add    $0x5,%ecx
  0x00007f73e7d106f2: jmp    0x00007f73e7d106ce
  0x00007f73e7d106f4: add    $0x6,%ecx
  0x00007f73e7d106f7: jmp    0x00007f73e7d106ce
  0x00007f73e7d106f9: add    $0x7,%ecx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@53 (line 213)

  0x00007f73e7d106fc: jmp    0x00007f73e7d106ce  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)

  0x00007f73e7d106fe: mov    %rsi,%rbp
  0x00007f73e7d10701: mov    %edi,0x4(%rsp)
  0x00007f73e7d10705: mov    %ecx,0xc(%rsp)
  0x00007f73e7d10709: mov    %r10d,0x10(%rsp)
  0x00007f73e7d1070e: mov    $0xffffff7e,%esi
  0x00007f73e7d10713: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38 (line 213)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d10718: mov    %rsi,(%rsp)
  0x00007f73e7d1071c: mov    %ecx,0x8(%rsp)
  0x00007f73e7d10720: mov    %edx,0xc(%rsp)
  0x00007f73e7d10724: mov    $0xffffff4d,%esi
  0x00007f73e7d10729: xchg   %ax,%ax
  0x00007f73e7d1072b: callq  0x00007f73e0269880  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::indexOf@1 (line 202)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d10730: mov    %rsi,%rbp
  0x00007f73e7d10733: mov    %r10d,0x4(%rsp)
  0x00007f73e7d10738: mov    %ecx,0x8(%rsp)
  0x00007f73e7d1073c: mov    %edx,0xc(%rsp)
  0x00007f73e7d10740: mov    $0xffffff4d,%esi
  0x00007f73e7d10745: xchg   %ax,%ax
  0x00007f73e7d10747: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@13 (line 206)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d1074c: mov    $0xfffffff6,%esi
  0x00007f73e7d10751: xchg   %ax,%ax
  0x00007f73e7d10753: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10 (line 205)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d10758: hlt    
  0x00007f73e7d10759: hlt    
  0x00007f73e7d1075a: hlt    
  0x00007f73e7d1075b: hlt    
  0x00007f73e7d1075c: hlt    
  0x00007f73e7d1075d: hlt    
  0x00007f73e7d1075e: hlt    
  0x00007f73e7d1075f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d10760: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d10765: callq  0x00007f73e7d1076a
  0x00007f73e7d1076a: subq   $0x5,(%rsp)
  0x00007f73e7d1076f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d10774: hlt    
  0x00007f73e7d10775: hlt    
  0x00007f73e7d10776: hlt    
  0x00007f73e7d10777: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 260 
ImmutableOopMap{rbp=Oop }pc offsets: 376 
ImmutableOopMap{[0]=Oop }pc offsets: 400 
ImmutableOopMap{rbp=Oop }pc offsets: 428 
ImmutableOopMap{}pc offsets: 440 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d10d20, 0x00007f73e7d10d38]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d35f8dc8} 'linkToStatic' '(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d10d20: mov    0x24(%rsi),%ebx
  0x00007f73e7d10d23: mov    0x10(%rbx),%rbx
  0x00007f73e7d10d27: test   %rbx,%rbx
  0x00007f73e7d10d2a: je     0x00007f73e7d10d33
  0x00007f73e7d10d30: jmpq   *0x38(%rbx)
  0x00007f73e7d10d33: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)   47886  127       3       java.util.HashMap::getNode (148 bytes)
 total in heap  [0x00007f73e07e0190,0x00007f73e07e1288] = 4344
 relocation     [0x00007f73e07e0308,0x00007f73e07e03a8] = 160
 main code      [0x00007f73e07e03c0,0x00007f73e07e0d40] = 2432
 stub code      [0x00007f73e07e0d40,0x00007f73e07e0da0] = 96
 metadata       [0x00007f73e07e0da0,0x00007f73e07e0da8] = 8
 scopes data    [0x00007f73e07e0da8,0x00007f73e07e0f28] = 384
 scopes pcs     [0x00007f73e07e0f28,0x00007f73e07e1248] = 800
 dependencies   [0x00007f73e07e1248,0x00007f73e07e1250] = 8
 nul chk table  [0x00007f73e07e1250,0x00007f73e07e1288] = 56
----------------------------------------------------------------------
java/util/HashMap.getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;  [0x00007f73e07e03c0, 0x00007f73e07e0da0]  2528 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x00007f73e07e03c0: mov    0x8(%rsi),%r10d
  0x00007f73e07e03c4: shl    $0x3,%r10
  0x00007f73e07e03c8: movabs $0x800000000,%r12
  0x00007f73e07e03d2: add    %r12,%r10
  0x00007f73e07e03d5: xor    %r12,%r12
  0x00007f73e07e03d8: cmp    %rax,%r10
  0x00007f73e07e03db: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e03e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e03ec: data16 data16 xchg %ax,%ax
  0x00007f73e07e03f0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e03fb: data16 data16 xchg %ax,%ax
  0x00007f73e07e03ff: nop
[Verified Entry Point]
  0x00007f73e07e0400: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e0407: push   %rbp
  0x00007f73e07e0408: sub    $0x50,%rsp
  0x00007f73e07e040c: mov    %edx,0x28(%rsp)
  0x00007f73e07e0410: mov    %rcx,0x30(%rsp)
  0x00007f73e07e0415: movabs $0x7f73d3511190,%rdi  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e041f: mov    0x104(%rdi),%ebx
  0x00007f73e07e0425: add    $0x8,%ebx
  0x00007f73e07e0428: mov    %ebx,0x104(%rdi)
  0x00007f73e07e042e: and    $0x1ff8,%ebx
  0x00007f73e07e0434: cmp    $0x0,%ebx
  0x00007f73e07e0437: je     0x00007f73e07e0c8f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@0 (line 564)

  0x00007f73e07e043d: mov    0x24(%rsi),%esi    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@1 (line 564)

  0x00007f73e07e0440: cmp    $0x0,%rsi
  0x00007f73e07e0444: movabs $0x7f73d3511190,%rdi  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e044e: movabs $0x140,%rbx
  0x00007f73e07e0458: je     0x00007f73e07e0468
  0x00007f73e07e045e: movabs $0x150,%rbx
  0x00007f73e07e0468: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07e046c: lea    0x1(%rax),%rax
  0x00007f73e07e0470: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07e0474: je     0x00007f73e07e0a9d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@6 (line 564)

  0x00007f73e07e047a: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 564)
                                                ; implicit exception: dispatches to 0x00007f73e07e0cb0
  0x00007f73e07e047d: cmp    $0x0,%edi
  0x00007f73e07e0480: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e048a: movabs $0x160,%rax
  0x00007f73e07e0494: jle    0x00007f73e07e04a4
  0x00007f73e07e049a: movabs $0x170,%rax
  0x00007f73e07e04a4: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e04a8: lea    0x1(%r8),%r8
  0x00007f73e07e04ac: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e04b0: jle    0x00007f73e07e0a9d  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@14 (line 564)

  0x00007f73e07e04b6: dec    %edi
  0x00007f73e07e04b8: and    %rdx,%rdi
  0x00007f73e07e04bb: cmp    0xc(%rsi),%edi
  0x00007f73e07e04be: jae    0x00007f73e07e0cb5
  0x00007f73e07e04c4: movslq %edi,%rdi
  0x00007f73e07e04c7: mov    0x10(%rsi,%rdi,4),%edi  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 564)

  0x00007f73e07e04cb: cmp    $0x0,%rdi
  0x00007f73e07e04cf: movabs $0x7f73d3511190,%rsi  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e04d9: movabs $0x180,%rbx
  0x00007f73e07e04e3: je     0x00007f73e07e04f3
  0x00007f73e07e04e9: movabs $0x190,%rbx
  0x00007f73e07e04f3: mov    (%rsi,%rbx,1),%rax
  0x00007f73e07e04f7: lea    0x1(%rax),%rax
  0x00007f73e07e04fb: mov    %rax,(%rsi,%rbx,1)
  0x00007f73e07e04ff: je     0x00007f73e07e0a9d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@28 (line 564)

  0x00007f73e07e0505: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 566)
                                                ; implicit exception: dispatches to 0x00007f73e07e0cc3
  0x00007f73e07e0508: cmp    %edx,%esi
  0x00007f73e07e050a: movabs $0x7f73d3511190,%rsi  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0514: movabs $0x1a0,%rbx
  0x00007f73e07e051e: jne    0x00007f73e07e052e
  0x00007f73e07e0524: movabs $0x1b0,%rbx
  0x00007f73e07e052e: mov    (%rsi,%rbx,1),%rax
  0x00007f73e07e0532: lea    0x1(%rax),%rax
  0x00007f73e07e0536: mov    %rax,(%rsi,%rbx,1)
  0x00007f73e07e053a: jne    0x00007f73e07e06b2  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@37 (line 566)

  0x00007f73e07e0540: mov    0x10(%rdi),%esi    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@42 (line 566)

  0x00007f73e07e0543: cmp    %rcx,%rsi
  0x00007f73e07e0546: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0550: movabs $0x1c0,%rax
  0x00007f73e07e055a: je     0x00007f73e07e056a
  0x00007f73e07e0560: movabs $0x1d0,%rax
  0x00007f73e07e056a: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e056e: lea    0x1(%r8),%r8
  0x00007f73e07e0572: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e0576: je     0x00007f73e07e0c7c  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@49 (line 566)

  0x00007f73e07e057c: cmp    $0x0,%rcx
  0x00007f73e07e0580: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e058a: movabs $0x1e0,%rax
  0x00007f73e07e0594: je     0x00007f73e07e05a4
  0x00007f73e07e059a: movabs $0x1f0,%rax
  0x00007f73e07e05a4: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e05a8: lea    0x1(%r8),%r8
  0x00007f73e07e05ac: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e05b0: je     0x00007f73e07e06b2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@53 (line 566)

  0x00007f73e07e05b6: mov    %rdi,0x20(%rsp)
  0x00007f73e07e05bb: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007f73e07e0cc8
  0x00007f73e07e05be: mov    %rcx,%rbx
  0x00007f73e07e05c1: movabs $0x7f73d3511190,%rax  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e05cb: mov    0x8(%rbx),%ebx
  0x00007f73e07e05ce: shl    $0x3,%rbx
  0x00007f73e07e05d2: movabs $0x800000000,%r12
  0x00007f73e07e05dc: add    %r12,%rbx
  0x00007f73e07e05df: xor    %r12,%r12
  0x00007f73e07e05e2: cmp    0x210(%rax),%rbx
  0x00007f73e07e05e9: jne    0x00007f73e07e05f8
  0x00007f73e07e05eb: addq   $0x1,0x218(%rax)
  0x00007f73e07e05f3: jmpq   0x00007f73e07e065e
  0x00007f73e07e05f8: cmp    0x220(%rax),%rbx
  0x00007f73e07e05ff: jne    0x00007f73e07e060e
  0x00007f73e07e0601: addq   $0x1,0x228(%rax)
  0x00007f73e07e0609: jmpq   0x00007f73e07e065e
  0x00007f73e07e060e: cmpq   $0x0,0x210(%rax)
  0x00007f73e07e0619: jne    0x00007f73e07e0632
  0x00007f73e07e061b: mov    %rbx,0x210(%rax)
  0x00007f73e07e0622: movq   $0x1,0x218(%rax)
  0x00007f73e07e062d: jmpq   0x00007f73e07e065e
  0x00007f73e07e0632: cmpq   $0x0,0x220(%rax)
  0x00007f73e07e063d: jne    0x00007f73e07e0656
  0x00007f73e07e063f: mov    %rbx,0x220(%rax)
  0x00007f73e07e0646: movq   $0x1,0x228(%rax)
  0x00007f73e07e0651: jmpq   0x00007f73e07e065e
  0x00007f73e07e0656: addq   $0x1,0x200(%rax)
  0x00007f73e07e065e: mov    %rsi,%rdx
  0x00007f73e07e0661: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)

  0x00007f73e07e0664: nop
  0x00007f73e07e0665: movabs $0xffffffffffffffff,%rax
  0x00007f73e07e066f: callq  0x00007f73e027f860  ; ImmutableOopMap{[32]=Oop [48]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)
                                                ;   {virtual_call}
  0x00007f73e07e0674: cmp    $0x0,%eax
  0x00007f73e07e0677: movabs $0x7f73d3511190,%rdx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0681: movabs $0x248,%rsi
  0x00007f73e07e068b: jne    0x00007f73e07e069b
  0x00007f73e07e0691: movabs $0x238,%rsi
  0x00007f73e07e069b: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07e069f: lea    0x1(%rdi),%rdi
  0x00007f73e07e06a3: mov    %rdi,(%rdx,%rsi,1)
  0x00007f73e07e06a7: mov    0x20(%rsp),%rdi
  0x00007f73e07e06ac: jne    0x00007f73e07e0c7c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@62 (line 567)

  0x00007f73e07e06b2: mov    0x18(%rdi),%edx    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@70 (line 569)

  0x00007f73e07e06b5: cmp    $0x0,%rdx
  0x00007f73e07e06b9: movabs $0x7f73d3511190,%rsi  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e06c3: movabs $0x258,%rbx
  0x00007f73e07e06cd: je     0x00007f73e07e06dd
  0x00007f73e07e06d3: movabs $0x268,%rbx
  0x00007f73e07e06dd: mov    (%rsi,%rbx,1),%rax
  0x00007f73e07e06e1: lea    0x1(%rax),%rax
  0x00007f73e07e06e5: mov    %rax,(%rsi,%rbx,1)
  0x00007f73e07e06e9: je     0x00007f73e07e0a9d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@76 (line 569)

  0x00007f73e07e06ef: cmp    $0x0,%rdi
  0x00007f73e07e06f3: jne    0x00007f73e07e070b
  0x00007f73e07e06f5: movabs $0x7f73d3511190,%rax  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e06ff: orb    $0x1,0x271(%rax)
  0x00007f73e07e0706: jmpq   0x00007f73e07e07eb
  0x00007f73e07e070b: movabs $0x8002d0cf8,%rcx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x00007f73e07e0715: mov    0x8(%rdi),%ebx
  0x00007f73e07e0718: shl    $0x3,%rbx
  0x00007f73e07e071c: movabs $0x800000000,%r12
  0x00007f73e07e0726: add    %r12,%rbx
  0x00007f73e07e0729: xor    %r12,%r12
  0x00007f73e07e072c: cmp    %rbx,%rcx
  0x00007f73e07e072f: jne    0x00007f73e07e07cf
  0x00007f73e07e0735: movabs $0x7f73d3511190,%rax  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e073f: mov    0x8(%rdi),%ecx
  0x00007f73e07e0742: shl    $0x3,%rcx
  0x00007f73e07e0746: movabs $0x800000000,%r12
  0x00007f73e07e0750: add    %r12,%rcx
  0x00007f73e07e0753: xor    %r12,%r12
  0x00007f73e07e0756: cmp    0x288(%rax),%rcx
  0x00007f73e07e075d: jne    0x00007f73e07e076c
  0x00007f73e07e075f: addq   $0x1,0x290(%rax)
  0x00007f73e07e0767: jmpq   0x00007f73e07e07f0
  0x00007f73e07e076c: cmp    0x298(%rax),%rcx
  0x00007f73e07e0773: jne    0x00007f73e07e0782
  0x00007f73e07e0775: addq   $0x1,0x2a0(%rax)
  0x00007f73e07e077d: jmpq   0x00007f73e07e07f0
  0x00007f73e07e0782: cmpq   $0x0,0x288(%rax)
  0x00007f73e07e078d: jne    0x00007f73e07e07a6
  0x00007f73e07e078f: mov    %rcx,0x288(%rax)
  0x00007f73e07e0796: movq   $0x1,0x290(%rax)
  0x00007f73e07e07a1: jmpq   0x00007f73e07e07f0
  0x00007f73e07e07a6: cmpq   $0x0,0x298(%rax)
  0x00007f73e07e07b1: jne    0x00007f73e07e07ca
  0x00007f73e07e07b3: mov    %rcx,0x298(%rax)
  0x00007f73e07e07ba: movq   $0x1,0x2a0(%rax)
  0x00007f73e07e07c5: jmpq   0x00007f73e07e07f0
  0x00007f73e07e07ca: jmpq   0x00007f73e07e07f0
  0x00007f73e07e07cf: movabs $0x7f73d3511190,%rax  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e07d9: subq   $0x1,0x278(%rax)
  0x00007f73e07e07e1: jmpq   0x00007f73e07e07eb
  0x00007f73e07e07e6: jmpq   0x00007f73e07e07f0
  0x00007f73e07e07eb: xor    %rsi,%rsi
  0x00007f73e07e07ee: jmp    0x00007f73e07e07fa
  0x00007f73e07e07f0: movabs $0x1,%rsi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@81 (line 570)

  0x00007f73e07e07fa: cmp    $0x0,%esi
  0x00007f73e07e07fd: movabs $0x7f73d3511190,%rsi  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0807: movabs $0x2c0,%rbx
  0x00007f73e07e0811: jne    0x00007f73e07e0821
  0x00007f73e07e0817: movabs $0x2b0,%rbx
  0x00007f73e07e0821: mov    (%rsi,%rbx,1),%rax
  0x00007f73e07e0825: lea    0x1(%rax),%rax
  0x00007f73e07e0829: mov    %rax,(%rsi,%rbx,1)
  0x00007f73e07e082d: jne    0x00007f73e07e0ab7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@84 (line 570)

  0x00007f73e07e0833: nopl   0x0(%rax,%rax,1)
  0x00007f73e07e0838: mov    0x30(%rsp),%rcx
  0x00007f73e07e083d: mov    0x28(%rsp),%edi
  0x00007f73e07e0841: mov    0xc(%rdx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 573)
                                                ; implicit exception: dispatches to 0x00007f73e07e0ccd
  0x00007f73e07e0844: cmp    %edi,%esi
  0x00007f73e07e0846: movabs $0x7f73d3511190,%rsi  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0850: movabs $0x340,%rbx
  0x00007f73e07e085a: jne    0x00007f73e07e086a
  0x00007f73e07e0860: movabs $0x350,%rbx
  0x00007f73e07e086a: mov    (%rsi,%rbx,1),%rax
  0x00007f73e07e086e: lea    0x1(%rax),%rax
  0x00007f73e07e0872: mov    %rax,(%rsi,%rbx,1)
  0x00007f73e07e0876: jne    0x00007f73e07e09f2  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@104 (line 573)

  0x00007f73e07e087c: mov    0x10(%rdx),%esi    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@109 (line 573)

  0x00007f73e07e087f: cmp    %rcx,%rsi
  0x00007f73e07e0882: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e088c: movabs $0x360,%rax
  0x00007f73e07e0896: je     0x00007f73e07e08a6
  0x00007f73e07e089c: movabs $0x370,%rax
  0x00007f73e07e08a6: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e08aa: lea    0x1(%r8),%r8
  0x00007f73e07e08ae: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e08b2: je     0x00007f73e07e0a8a  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@116 (line 573)

  0x00007f73e07e08b8: cmp    $0x0,%rcx
  0x00007f73e07e08bc: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e08c6: movabs $0x380,%rax
  0x00007f73e07e08d0: je     0x00007f73e07e08e0
  0x00007f73e07e08d6: movabs $0x390,%rax
  0x00007f73e07e08e0: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e08e4: lea    0x1(%r8),%r8
  0x00007f73e07e08e8: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e08ec: je     0x00007f73e07e09f2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@120 (line 573)

  0x00007f73e07e08f2: mov    %rdx,0x38(%rsp)
  0x00007f73e07e08f7: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007f73e07e0cd2
  0x00007f73e07e08fa: mov    %rcx,%rbx
  0x00007f73e07e08fd: movabs $0x7f73d3511190,%rax  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0907: mov    0x8(%rbx),%ebx
  0x00007f73e07e090a: shl    $0x3,%rbx
  0x00007f73e07e090e: movabs $0x800000000,%r12
  0x00007f73e07e0918: add    %r12,%rbx
  0x00007f73e07e091b: xor    %r12,%r12
  0x00007f73e07e091e: cmp    0x3b0(%rax),%rbx
  0x00007f73e07e0925: jne    0x00007f73e07e0934
  0x00007f73e07e0927: addq   $0x1,0x3b8(%rax)
  0x00007f73e07e092f: jmpq   0x00007f73e07e099a
  0x00007f73e07e0934: cmp    0x3c0(%rax),%rbx
  0x00007f73e07e093b: jne    0x00007f73e07e094a
  0x00007f73e07e093d: addq   $0x1,0x3c8(%rax)
  0x00007f73e07e0945: jmpq   0x00007f73e07e099a
  0x00007f73e07e094a: cmpq   $0x0,0x3b0(%rax)
  0x00007f73e07e0955: jne    0x00007f73e07e096e
  0x00007f73e07e0957: mov    %rbx,0x3b0(%rax)
  0x00007f73e07e095e: movq   $0x1,0x3b8(%rax)
  0x00007f73e07e0969: jmpq   0x00007f73e07e099a
  0x00007f73e07e096e: cmpq   $0x0,0x3c0(%rax)
  0x00007f73e07e0979: jne    0x00007f73e07e0992
  0x00007f73e07e097b: mov    %rbx,0x3c0(%rax)
  0x00007f73e07e0982: movq   $0x1,0x3c8(%rax)
  0x00007f73e07e098d: jmpq   0x00007f73e07e099a
  0x00007f73e07e0992: addq   $0x1,0x3a0(%rax)
  0x00007f73e07e099a: mov    %rsi,%rdx
  0x00007f73e07e099d: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)

  0x00007f73e07e09a0: nopl   0x0(%rax,%rax,1)
  0x00007f73e07e09a5: movabs $0xffffffffffffffff,%rax
  0x00007f73e07e09af: callq  0x00007f73e0269380  ; ImmutableOopMap{[56]=Oop [48]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)
                                                ;   {virtual_call}
  0x00007f73e07e09b4: cmp    $0x0,%eax
  0x00007f73e07e09b7: movabs $0x7f73d3511190,%rax  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e09c1: movabs $0x3e8,%rdx
  0x00007f73e07e09cb: jne    0x00007f73e07e09db
  0x00007f73e07e09d1: movabs $0x3d8,%rdx
  0x00007f73e07e09db: mov    (%rax,%rdx,1),%rcx
  0x00007f73e07e09df: lea    0x1(%rcx),%rcx
  0x00007f73e07e09e3: mov    %rcx,(%rax,%rdx,1)
  0x00007f73e07e09e7: mov    0x38(%rsp),%rdx
  0x00007f73e07e09ec: jne    0x00007f73e07e0a8a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@129 (line 574)

  0x00007f73e07e09f2: mov    0x18(%rdx),%eax    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@137 (line 576)

  0x00007f73e07e09f5: cmp    $0x0,%rax
  0x00007f73e07e09f9: mov    $0x8,%edx
  0x00007f73e07e09fe: jne    0x00007f73e07e0a09
  0x00007f73e07e0a04: mov    $0x0,%edx
  0x00007f73e07e0a09: movabs $0x7f73d3511190,%rcx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0a13: mov    0x108(%rcx),%esi
  0x00007f73e07e0a19: add    %edx,%esi
  0x00007f73e07e0a1b: mov    %esi,0x108(%rcx)
  0x00007f73e07e0a21: cmp    $0x0,%edx
  0x00007f73e07e0a24: jne    0x00007f73e07e0a2f
  0x00007f73e07e0a2a: mov    $0x8,%esi
  0x00007f73e07e0a2f: and    $0xfff8,%esi
  0x00007f73e07e0a35: cmp    $0x0,%esi
  0x00007f73e07e0a38: je     0x00007f73e07e0cd7  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x00007f73e07e0a3e: mov    0x108(%r15),%r10   ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x00007f73e07e0a45: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e0a48: cmp    $0x0,%rax
  0x00007f73e07e0a4c: movabs $0x7f73d3511190,%rdx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0a56: movabs $0x408,%rcx
  0x00007f73e07e0a60: je     0x00007f73e07e0a70
  0x00007f73e07e0a66: movabs $0x3f8,%rcx
  0x00007f73e07e0a70: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07e0a74: lea    0x1(%rsi),%rsi
  0x00007f73e07e0a78: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07e0a7c: je     0x00007f73e07e0a9d  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)

  0x00007f73e07e0a82: mov    %rax,%rdx
  0x00007f73e07e0a85: jmpq   0x00007f73e07e0838  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@98 (line 573)

  0x00007f73e07e0a8a: mov    %rdx,%rax
  0x00007f73e07e0a8d: add    $0x50,%rsp
  0x00007f73e07e0a91: pop    %rbp
  0x00007f73e07e0a92: mov    0x108(%r15),%r10
  0x00007f73e07e0a99: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e0a9c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@134 (line 575)

  0x00007f73e07e0a9d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07e0aa7: add    $0x50,%rsp
  0x00007f73e07e0aab: pop    %rbp
  0x00007f73e07e0aac: mov    0x108(%r15),%r10
  0x00007f73e07e0ab3: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e0ab6: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@147 (line 579)

  0x00007f73e07e0ab7: mov    0x30(%rsp),%rcx
  0x00007f73e07e0abc: mov    0x28(%rsp),%edx
  0x00007f73e07e0ac0: cmp    $0x0,%rdi
  0x00007f73e07e0ac4: jne    0x00007f73e07e0adc
  0x00007f73e07e0ac6: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0ad0: orb    $0x1,0x2c9(%rbx)
  0x00007f73e07e0ad7: jmpq   0x00007f73e07e0bbc
  0x00007f73e07e0adc: movabs $0x8002d0cf8,%rax  ;   {metadata('java/util/HashMap$TreeNode')}
  0x00007f73e07e0ae6: mov    0x8(%rdi),%esi
  0x00007f73e07e0ae9: shl    $0x3,%rsi
  0x00007f73e07e0aed: movabs $0x800000000,%r12
  0x00007f73e07e0af7: add    %r12,%rsi
  0x00007f73e07e0afa: xor    %r12,%r12
  0x00007f73e07e0afd: cmp    %rsi,%rax
  0x00007f73e07e0b00: jne    0x00007f73e07e0ba0
  0x00007f73e07e0b06: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0b10: mov    0x8(%rdi),%eax
  0x00007f73e07e0b13: shl    $0x3,%rax
  0x00007f73e07e0b17: movabs $0x800000000,%r12
  0x00007f73e07e0b21: add    %r12,%rax
  0x00007f73e07e0b24: xor    %r12,%r12
  0x00007f73e07e0b27: cmp    0x2e0(%rbx),%rax
  0x00007f73e07e0b2e: jne    0x00007f73e07e0b3d
  0x00007f73e07e0b30: addq   $0x1,0x2e8(%rbx)
  0x00007f73e07e0b38: jmpq   0x00007f73e07e0bbc
  0x00007f73e07e0b3d: cmp    0x2f0(%rbx),%rax
  0x00007f73e07e0b44: jne    0x00007f73e07e0b53
  0x00007f73e07e0b46: addq   $0x1,0x2f8(%rbx)
  0x00007f73e07e0b4e: jmpq   0x00007f73e07e0bbc
  0x00007f73e07e0b53: cmpq   $0x0,0x2e0(%rbx)
  0x00007f73e07e0b5e: jne    0x00007f73e07e0b77
  0x00007f73e07e0b60: mov    %rax,0x2e0(%rbx)
  0x00007f73e07e0b67: movq   $0x1,0x2e8(%rbx)
  0x00007f73e07e0b72: jmpq   0x00007f73e07e0bbc
  0x00007f73e07e0b77: cmpq   $0x0,0x2f0(%rbx)
  0x00007f73e07e0b82: jne    0x00007f73e07e0b9b
  0x00007f73e07e0b84: mov    %rax,0x2f0(%rbx)
  0x00007f73e07e0b8b: movq   $0x1,0x2f8(%rbx)
  0x00007f73e07e0b96: jmpq   0x00007f73e07e0bbc
  0x00007f73e07e0b9b: jmpq   0x00007f73e07e0bbc
  0x00007f73e07e0ba0: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0baa: subq   $0x1,0x2d0(%rbx)
  0x00007f73e07e0bb2: jmpq   0x00007f73e07e0cf8
  0x00007f73e07e0bb7: jmpq   0x00007f73e07e0bbc
  0x00007f73e07e0bbc: mov    %rdi,%rsi          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 571)

  0x00007f73e07e0bbf: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ; implicit exception: dispatches to 0x00007f73e07e0d01
  0x00007f73e07e0bc2: mov    %rsi,%rdi
  0x00007f73e07e0bc5: movabs $0x7f73d3511190,%rbx  ;   {metadata(method data for {method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0bcf: mov    0x8(%rdi),%edi
  0x00007f73e07e0bd2: shl    $0x3,%rdi
  0x00007f73e07e0bd6: movabs $0x800000000,%r12
  0x00007f73e07e0be0: add    %r12,%rdi
  0x00007f73e07e0be3: xor    %r12,%r12
  0x00007f73e07e0be6: cmp    0x318(%rbx),%rdi
  0x00007f73e07e0bed: jne    0x00007f73e07e0bfc
  0x00007f73e07e0bef: addq   $0x1,0x320(%rbx)
  0x00007f73e07e0bf7: jmpq   0x00007f73e07e0c62
  0x00007f73e07e0bfc: cmp    0x328(%rbx),%rdi
  0x00007f73e07e0c03: jne    0x00007f73e07e0c12
  0x00007f73e07e0c05: addq   $0x1,0x330(%rbx)
  0x00007f73e07e0c0d: jmpq   0x00007f73e07e0c62
  0x00007f73e07e0c12: cmpq   $0x0,0x318(%rbx)
  0x00007f73e07e0c1d: jne    0x00007f73e07e0c36
  0x00007f73e07e0c1f: mov    %rdi,0x318(%rbx)
  0x00007f73e07e0c26: movq   $0x1,0x320(%rbx)
  0x00007f73e07e0c31: jmpq   0x00007f73e07e0c62
  0x00007f73e07e0c36: cmpq   $0x0,0x328(%rbx)
  0x00007f73e07e0c41: jne    0x00007f73e07e0c5a
  0x00007f73e07e0c43: mov    %rdi,0x328(%rbx)
  0x00007f73e07e0c4a: movq   $0x1,0x330(%rbx)
  0x00007f73e07e0c55: jmpq   0x00007f73e07e0c62
  0x00007f73e07e0c5a: addq   $0x1,0x308(%rbx)
  0x00007f73e07e0c62: nopl   0x0(%rax,%rax,1)
  0x00007f73e07e0c67: callq  0x00007f73e0269100  ; ImmutableOopMap{}
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ;   {optimized virtual_call}
  0x00007f73e07e0c6c: add    $0x50,%rsp
  0x00007f73e07e0c70: pop    %rbp
  0x00007f73e07e0c71: mov    0x108(%r15),%r10
  0x00007f73e07e0c78: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e0c7b: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@97 (line 571)

  0x00007f73e07e0c7c: mov    %rdi,%rax
  0x00007f73e07e0c7f: add    $0x50,%rsp
  0x00007f73e07e0c83: pop    %rbp
  0x00007f73e07e0c84: mov    0x108(%r15),%r10
  0x00007f73e07e0c8b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e0c8e: retq   
  0x00007f73e07e0c8f: movabs $0x8002f2638,%r10  ;   {metadata({method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0c99: mov    %r10,0x8(%rsp)
  0x00007f73e07e0c9e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e0ca6: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 564)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e0cab: jmpq   0x00007f73e07e043d
  0x00007f73e07e0cb0: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@10 (line 564)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e0cb5: mov    %rdi,(%rsp)
  0x00007f73e07e0cb9: mov    %rsi,0x8(%rsp)
  0x00007f73e07e0cbe: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@24 (line 564)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e0cc3: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@33 (line 566)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e0cc8: callq  0x00007f73e03308a0  ; ImmutableOopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@59 (line 567)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e0ccd: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@100 (line 573)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e0cd2: callq  0x00007f73e03308a0  ; ImmutableOopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@126 (line 574)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e0cd7: movabs $0x8002f2638,%r10  ;   {metadata({method} {0x00000008002f2638} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00007f73e07e0ce1: mov    %r10,0x8(%rsp)
  0x00007f73e07e0ce6: movq   $0x8f,(%rsp)
  0x00007f73e07e0cee: callq  0x00007f73e0334d80  ; ImmutableOopMap{[48]=Oop rax=Oop }
                                                ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@143 (line 576)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e0cf3: jmpq   0x00007f73e07e0a3e
  0x00007f73e07e0cf8: mov    %rdi,(%rsp)
  0x00007f73e07e0cfc: callq  0x00007f73e0332820  ; ImmutableOopMap{rcx=Oop [48]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@89 (line 571)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07e0d01: callq  0x00007f73e03308a0  ; ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }
                                                ;*invokevirtual getTreeNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::getNode@94 (line 571)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e0d06: nop
  0x00007f73e07e0d07: nop
  0x00007f73e07e0d08: mov    0x428(%r15),%rax
  0x00007f73e07e0d0f: movabs $0x0,%r10
  0x00007f73e07e0d19: mov    %r10,0x428(%r15)
  0x00007f73e07e0d20: movabs $0x0,%r10
  0x00007f73e07e0d2a: mov    %r10,0x430(%r15)
  0x00007f73e07e0d31: add    $0x50,%rsp
  0x00007f73e07e0d35: pop    %rbp
  0x00007f73e07e0d36: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e0d3b: hlt    
  0x00007f73e07e0d3c: hlt    
  0x00007f73e07e0d3d: hlt    
  0x00007f73e07e0d3e: hlt    
  0x00007f73e07e0d3f: hlt    
[Stub Code]
  0x00007f73e07e0d40: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e0d45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e0d4f: jmpq   0x00007f73e07e0d4f  ;   {runtime_call}
  0x00007f73e07e0d54: nop
  0x00007f73e07e0d55: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e0d5f: jmpq   0x00007f73e07e0d5f  ;   {runtime_call}
  0x00007f73e07e0d64: nop
  0x00007f73e07e0d65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e0d6f: jmpq   0x00007f73e07e0d6f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e0d74: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e0d79: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e0d83: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e0d87: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e0d8c: hlt    
[Deopt Handler Code]
  0x00007f73e07e0d8d: movabs $0x7f73e07e0d8d,%r10  ;   {section_word}
  0x00007f73e07e0d97: push   %r10
  0x00007f73e07e0d99: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e0d9e: hlt    
  0x00007f73e07e0d9f: hlt    

ImmutableOopMap{[32]=Oop [48]=Oop }pc offsets: 692 
ImmutableOopMap{[56]=Oop [48]=Oop }pc offsets: 1524 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 1669 
ImmutableOopMap{}pc offsets: 2220 
ImmutableOopMap{rsi=Oop rcx=Oop [48]=Oop }pc offsets: 2283 2293 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 2307 
ImmutableOopMap{rdi=Oop rcx=Oop [48]=Oop }pc offsets: 2312 
ImmutableOopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop }pc offsets: 2317 
ImmutableOopMap{rdx=Oop rcx=Oop [48]=Oop }pc offsets: 2322 
ImmutableOopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop }pc offsets: 2327 
ImmutableOopMap{[48]=Oop rax=Oop }pc offsets: 2355 
ImmutableOopMap{rcx=Oop [48]=Oop }pc offsets: 2369 
ImmutableOopMap{rcx=Oop [48]=Oop rsi=Oop }pc offsets: 2374 Compiled method (c1)   50895  138       3       java.util.concurrent.ConcurrentHashMap::addCount (289 bytes)
 total in heap  [0x00007f73e07e1310,0x00007f73e07e25e0] = 4816
 relocation     [0x00007f73e07e1488,0x00007f73e07e1558] = 208
 main code      [0x00007f73e07e1560,0x00007f73e07e1e40] = 2272
 stub code      [0x00007f73e07e1e40,0x00007f73e07e1ee0] = 160
 metadata       [0x00007f73e07e1ee0,0x00007f73e07e1ef8] = 24
 scopes data    [0x00007f73e07e1ef8,0x00007f73e07e2178] = 640
 scopes pcs     [0x00007f73e07e2178,0x00007f73e07e25b8] = 1088
 dependencies   [0x00007f73e07e25b8,0x00007f73e07e25c0] = 8
 nul chk table  [0x00007f73e07e25c0,0x00007f73e07e25e0] = 32
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.addCount(JI)V  [0x00007f73e07e1560, 0x00007f73e07e1ee0]  2432 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = long
  # parm1:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x00007f73e07e1560: mov    0x8(%rsi),%r10d
  0x00007f73e07e1564: shl    $0x3,%r10
  0x00007f73e07e1568: movabs $0x800000000,%r12
  0x00007f73e07e1572: add    %r12,%r10
  0x00007f73e07e1575: xor    %r12,%r12
  0x00007f73e07e1578: cmp    %rax,%r10
  0x00007f73e07e157b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e1581: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e158c: data16 data16 xchg %ax,%ax
  0x00007f73e07e1590: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e159b: data16 data16 xchg %ax,%ax
  0x00007f73e07e159f: nop
[Verified Entry Point]
  0x00007f73e07e15a0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e15a7: push   %rbp
  0x00007f73e07e15a8: sub    $0xb0,%rsp
  0x00007f73e07e15af: mov    %rsi,0x88(%rsp)
  0x00007f73e07e15b7: mov    %ecx,0x74(%rsp)
  0x00007f73e07e15bb: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e15c5: mov    0x104(%rax),%ebx
  0x00007f73e07e15cb: add    $0x8,%ebx
  0x00007f73e07e15ce: mov    %ebx,0x104(%rax)
  0x00007f73e07e15d4: and    $0x1ff8,%ebx
  0x00007f73e07e15da: cmp    $0x0,%ebx
  0x00007f73e07e15dd: je     0x00007f73e07e1d87  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@0 (line 2318)

  0x00007f73e07e15e3: mov    0x30(%rsi),%edi    ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@1 (line 2318)

  0x00007f73e07e15e6: cmp    $0x0,%rdi
  0x00007f73e07e15ea: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e15f4: movabs $0x140,%rbx
  0x00007f73e07e15fe: jne    0x00007f73e07e160e
  0x00007f73e07e1604: movabs $0x150,%rbx
  0x00007f73e07e160e: mov    (%rax,%rbx,1),%r8
  0x00007f73e07e1612: lea    0x1(%r8),%r8
  0x00007f73e07e1616: mov    %r8,(%rax,%rbx,1)
  0x00007f73e07e161a: jne    0x00007f73e07e1685  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@7 (line 2318)

  0x00007f73e07e1620: vmovsd 0x18(%rsi),%xmm0
  0x00007f73e07e1625: vmovq  %xmm0,%rax         ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@18 (line 2318)

  0x00007f73e07e162a: mov    %rax,%r8
  0x00007f73e07e162d: add    %rdx,%r8
  0x00007f73e07e1630: lea    0x18(%rsi),%r9
  0x00007f73e07e1634: mov    %r8,%rbx
  0x00007f73e07e1637: lock cmpxchg %rbx,(%r9)
  0x00007f73e07e163c: mov    $0x1,%ebx
  0x00007f73e07e1641: je     0x00007f73e07e164c
  0x00007f73e07e1647: mov    $0x0,%ebx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@31 (line 2319)

  0x00007f73e07e164c: cmp    $0x0,%ebx
  0x00007f73e07e164f: movabs $0x7f73d350e2f0,%rbx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1659: movabs $0x198,%rax
  0x00007f73e07e1663: jne    0x00007f73e07e1673
  0x00007f73e07e1669: movabs $0x1a8,%rax
  0x00007f73e07e1673: mov    (%rbx,%rax,1),%r9
  0x00007f73e07e1677: lea    0x1(%r9),%r9
  0x00007f73e07e167b: mov    %r9,(%rbx,%rax,1)
  0x00007f73e07e167f: jne    0x00007f73e07e188b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@34 (line 2319)

  0x00007f73e07e1685: cmp    $0x0,%rdi
  0x00007f73e07e1689: movabs $0x7f73d350e2f0,%rbx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1693: movabs $0x1c8,%rax
  0x00007f73e07e169d: jne    0x00007f73e07e16ad
  0x00007f73e07e16a3: movabs $0x1b8,%rax
  0x00007f73e07e16ad: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e16b1: lea    0x1(%r8),%r8
  0x00007f73e07e16b5: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e16b9: jne    0x00007f73e07e16c9  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@42 (line 2322)

  0x00007f73e07e16bf: mov    $0x1,%edi
  0x00007f73e07e16c4: jmpq   0x00007f73e07e1d54  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007f73e07e16c9: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ; implicit exception: dispatches to 0x00007f73e07e1da8
  0x00007f73e07e16cc: dec    %ebx
  0x00007f73e07e16ce: cmp    $0x0,%ebx
  0x00007f73e07e16d1: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e16db: movabs $0x1e8,%r8
  0x00007f73e07e16e5: jge    0x00007f73e07e16f5
  0x00007f73e07e16eb: movabs $0x1d8,%r8
  0x00007f73e07e16f5: mov    (%rax,%r8,1),%r9
  0x00007f73e07e16f9: lea    0x1(%r9),%r9
  0x00007f73e07e16fd: mov    %r9,(%rax,%r8,1)
  0x00007f73e07e1701: jge    0x00007f73e07e1711  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@53 (line 2322)

  0x00007f73e07e1707: mov    $0x1,%edi
  0x00007f73e07e170c: jmpq   0x00007f73e07e1d54  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007f73e07e1711: mov    %ebx,0x70(%rsp)
  0x00007f73e07e1715: mov    %rdi,0x78(%rsp)
  0x00007f73e07e171a: mov    %rdx,0x80(%rsp)
  0x00007f73e07e1722: nopl   0x0(%rax,%rax,1)
  0x00007f73e07e1727: callq  0x00007f73e0269600  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@58 (line 2323)
                                                ;   {static_call}
  0x00007f73e07e172c: and    0x70(%rsp),%eax
  0x00007f73e07e1730: mov    0x78(%rsp),%rdi
  0x00007f73e07e1735: cmp    0xc(%rdi),%eax
  0x00007f73e07e1738: jae    0x00007f73e07e1dad
  0x00007f73e07e173e: movslq %eax,%rax
  0x00007f73e07e1741: mov    0x10(%rdi,%rax,4),%eax  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)

  0x00007f73e07e1745: cmp    $0x0,%rax
  0x00007f73e07e1749: movabs $0x7f73d350e2f0,%rbx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1753: movabs $0x218,%rsi
  0x00007f73e07e175d: jne    0x00007f73e07e176d
  0x00007f73e07e1763: movabs $0x208,%rsi
  0x00007f73e07e176d: mov    (%rbx,%rsi,1),%rdi
  0x00007f73e07e1771: lea    0x1(%rdi),%rdi
  0x00007f73e07e1775: mov    %rdi,(%rbx,%rsi,1)
  0x00007f73e07e1779: jne    0x00007f73e07e1799  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@68 (line 2323)

  0x00007f73e07e177f: mov    $0x1,%edi
  0x00007f73e07e1784: mov    0x80(%rsp),%rdx
  0x00007f73e07e178c: mov    0x88(%rsp),%rsi
  0x00007f73e07e1794: jmpq   0x00007f73e07e1d54  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007f73e07e1799: mov    0x80(%rsp),%rdx
  0x00007f73e07e17a1: vmovsd 0x90(%rax),%xmm0   ; implicit exception: dispatches to 0x00007f73e07e1dbb
  0x00007f73e07e17a9: vmovq  %xmm0,%rbx         ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)

  0x00007f73e07e17ae: mov    %rbx,%rsi
  0x00007f73e07e17b1: add    %rdx,%rsi
  0x00007f73e07e17b4: lea    0x90(%rax),%rdi
  0x00007f73e07e17bb: mov    %rbx,%rax
  0x00007f73e07e17be: mov    %rsi,%rbx
  0x00007f73e07e17c1: lock cmpxchg %rbx,(%rdi)
  0x00007f73e07e17c6: mov    $0x1,%esi
  0x00007f73e07e17cb: je     0x00007f73e07e17d6
  0x00007f73e07e17d1: mov    $0x0,%esi          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@91 (line 2325)

  0x00007f73e07e17d6: cmp    $0x0,%esi
  0x00007f73e07e17d9: movabs $0x7f73d350e2f0,%rdi  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e17e3: movabs $0x260,%rbx
  0x00007f73e07e17ed: jne    0x00007f73e07e17fd
  0x00007f73e07e17f3: movabs $0x270,%rbx
  0x00007f73e07e17fd: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07e1801: lea    0x1(%rax),%rax
  0x00007f73e07e1805: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07e1809: jne    0x00007f73e07e181f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@97 (line 2325)

  0x00007f73e07e180f: mov    %rsi,%rdi
  0x00007f73e07e1812: mov    0x88(%rsp),%rsi
  0x00007f73e07e181a: jmpq   0x00007f73e07e1d54  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100 (line 2326)

  0x00007f73e07e181f: mov    0x74(%rsp),%ecx
  0x00007f73e07e1823: cmp    $0x1,%ecx
  0x00007f73e07e1826: movabs $0x7f73d350e2f0,%rsi  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1830: movabs $0x2c8,%rdi
  0x00007f73e07e183a: jle    0x00007f73e07e184a
  0x00007f73e07e1840: movabs $0x2b8,%rdi
  0x00007f73e07e184a: mov    (%rsi,%rdi,1),%rbx
  0x00007f73e07e184e: lea    0x1(%rbx),%rbx
  0x00007f73e07e1852: mov    %rbx,(%rsi,%rdi,1)
  0x00007f73e07e1856: jle    0x00007f73e07e1d41  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@110 (line 2329)

  0x00007f73e07e185c: mov    0x88(%rsp),%rsi
  0x00007f73e07e1864: movabs $0x7f73d350e2f0,%rdi  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e186e: addq   $0x1,0x2d8(%rdi)
  0x00007f73e07e1876: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)

  0x00007f73e07e187e: nop
  0x00007f73e07e187f: callq  0x00007f73e0269100  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115 (line 2331)
                                                ;   {optimized virtual_call}
  0x00007f73e07e1884: mov    %rax,%r8           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@120 (line 2333)

  0x00007f73e07e1887: mov    0x74(%rsp),%ecx
  0x00007f73e07e188b: cmp    $0x0,%ecx
  0x00007f73e07e188e: movabs $0x7f73d350e2f0,%rsi  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1898: movabs $0x310,%rdi
  0x00007f73e07e18a2: jl     0x00007f73e07e18b2
  0x00007f73e07e18a8: movabs $0x320,%rdi
  0x00007f73e07e18b2: mov    (%rsi,%rdi,1),%rbx
  0x00007f73e07e18b6: lea    0x1(%rbx),%rbx
  0x00007f73e07e18ba: mov    %rbx,(%rsi,%rdi,1)
  0x00007f73e07e18be: jl     0x00007f73e07e1d2e  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@121 (line 2333)

  0x00007f73e07e18c4: nopl   0x0(%rax)
  0x00007f73e07e18c8: mov    0x88(%rsp),%rsi
  0x00007f73e07e18d0: mov    0x14(%rsi),%edi    ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@127 (line 2335)

  0x00007f73e07e18d3: movslq %edi,%rbx
  0x00007f73e07e18d6: cmp    %rbx,%r8
  0x00007f73e07e18d9: movabs $0x7f73d350e2f0,%rbx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e18e3: movabs $0x330,%rax
  0x00007f73e07e18ed: jl     0x00007f73e07e18fd
  0x00007f73e07e18f3: movabs $0x340,%rax
  0x00007f73e07e18fd: mov    (%rbx,%rax,1),%rdx
  0x00007f73e07e1901: lea    0x1(%rdx),%rdx
  0x00007f73e07e1905: mov    %rdx,(%rbx,%rax,1)
  0x00007f73e07e1909: jl     0x00007f73e07e1d2e  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@134 (line 2335)

  0x00007f73e07e190f: mov    0x28(%rsi),%ebx    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@139 (line 2335)

  0x00007f73e07e1912: cmp    $0x0,%rbx
  0x00007f73e07e1916: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1920: movabs $0x350,%rdx
  0x00007f73e07e192a: je     0x00007f73e07e193a
  0x00007f73e07e1930: movabs $0x360,%rdx
  0x00007f73e07e193a: mov    (%rax,%rdx,1),%rcx
  0x00007f73e07e193e: lea    0x1(%rcx),%rcx
  0x00007f73e07e1942: mov    %rcx,(%rax,%rdx,1)
  0x00007f73e07e1946: je     0x00007f73e07e1d2e  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@145 (line 2335)

  0x00007f73e07e194c: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ; implicit exception: dispatches to 0x00007f73e07e1dc0
  0x00007f73e07e194f: cmp    $0x40000000,%eax
  0x00007f73e07e1955: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e195f: movabs $0x370,%rcx
  0x00007f73e07e1969: jge    0x00007f73e07e1979
  0x00007f73e07e196f: movabs $0x380,%rcx
  0x00007f73e07e1979: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07e197d: lea    0x1(%r8),%r8
  0x00007f73e07e1981: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07e1985: jge    0x00007f73e07e1d2e  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@156 (line 2335)

  0x00007f73e07e198b: mov    %rbx,0x98(%rsp)
  0x00007f73e07e1993: mov    %edi,0x90(%rsp)
  0x00007f73e07e199a: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e19a4: addq   $0x1,0x390(%rdx)
  0x00007f73e07e19ac: movabs $0x7f73d35f9028,%rdx  ;   {metadata(method data for {method} {0x000000080034f400} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e19b6: mov    0x104(%rdx),%ecx
  0x00007f73e07e19bc: add    $0x8,%ecx
  0x00007f73e07e19bf: mov    %ecx,0x104(%rdx)
  0x00007f73e07e19c5: and    $0x7ffff8,%ecx
  0x00007f73e07e19cb: cmp    $0x0,%ecx
  0x00007f73e07e19ce: je     0x00007f73e07e1dc5
  0x00007f73e07e19d4: movabs $0x7f73d35f9028,%rdx  ;   {metadata(method data for {method} {0x000000080034f400} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e19de: addq   $0x1,0x140(%rdx)
  0x00007f73e07e19e6: mov    %rax,%rsi          ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)

  0x00007f73e07e19e9: nopw   0x0(%rax,%rax,1)
  0x00007f73e07e19ef: callq  0x00007f73e07e1e65  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)
                                                ;   {static_call}
  0x00007f73e07e19f4: or     $0x8000,%eax
  0x00007f73e07e19fa: mov    0x90(%rsp),%edi
  0x00007f73e07e1a01: cmp    $0x0,%edi
  0x00007f73e07e1a04: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1a0e: movabs $0x3a0,%rcx
  0x00007f73e07e1a18: jge    0x00007f73e07e1a28
  0x00007f73e07e1a1e: movabs $0x3b0,%rcx
  0x00007f73e07e1a28: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07e1a2c: lea    0x1(%rsi),%rsi
  0x00007f73e07e1a30: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07e1a34: jge    0x00007f73e07e1c11  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@168 (line 2338)

  0x00007f73e07e1a3a: mov    %rdi,%rdx
  0x00007f73e07e1a3d: shr    $0x10,%edx
  0x00007f73e07e1a40: cmp    %eax,%edx
  0x00007f73e07e1a42: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1a4c: movabs $0x3c0,%rcx
  0x00007f73e07e1a56: jne    0x00007f73e07e1a66
  0x00007f73e07e1a5c: movabs $0x3d0,%rcx
  0x00007f73e07e1a66: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07e1a6a: lea    0x1(%rsi),%rsi
  0x00007f73e07e1a6e: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07e1a72: jne    0x00007f73e07e1d2e  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@178 (line 2339)

  0x00007f73e07e1a78: mov    %rax,%rdx
  0x00007f73e07e1a7b: inc    %edx
  0x00007f73e07e1a7d: cmp    %edx,%edi
  0x00007f73e07e1a7f: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1a89: movabs $0x3e0,%rcx
  0x00007f73e07e1a93: je     0x00007f73e07e1aa3
  0x00007f73e07e1a99: movabs $0x3f0,%rcx
  0x00007f73e07e1aa3: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07e1aa7: lea    0x1(%rsi),%rsi
  0x00007f73e07e1aab: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07e1aaf: je     0x00007f73e07e1d2e  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@187 (line 2339)

  0x00007f73e07e1ab5: add    $0xffff,%eax
  0x00007f73e07e1abb: cmp    %eax,%edi
  0x00007f73e07e1abd: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1ac7: movabs $0x400,%rdx
  0x00007f73e07e1ad1: je     0x00007f73e07e1ae1
  0x00007f73e07e1ad7: movabs $0x410,%rdx
  0x00007f73e07e1ae1: mov    (%rax,%rdx,1),%rcx
  0x00007f73e07e1ae5: lea    0x1(%rcx),%rcx
  0x00007f73e07e1ae9: mov    %rcx,(%rax,%rdx,1)
  0x00007f73e07e1aed: je     0x00007f73e07e1d2e  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@197 (line 2339)

  0x00007f73e07e1af3: mov    0x88(%rsp),%rsi
  0x00007f73e07e1afb: mov    0x2c(%rsi),%ecx    ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@201 (line 2339)

  0x00007f73e07e1afe: cmp    $0x0,%rcx
  0x00007f73e07e1b02: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1b0c: movabs $0x420,%rdx
  0x00007f73e07e1b16: je     0x00007f73e07e1b26
  0x00007f73e07e1b1c: movabs $0x430,%rdx
  0x00007f73e07e1b26: mov    (%rax,%rdx,1),%rbx
  0x00007f73e07e1b2a: lea    0x1(%rbx),%rbx
  0x00007f73e07e1b2e: mov    %rbx,(%rax,%rdx,1)
  0x00007f73e07e1b32: je     0x00007f73e07e1d2e  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@207 (line 2339)

  0x00007f73e07e1b38: mov    0x20(%rsi),%eax    ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@211 (line 2339)

  0x00007f73e07e1b3b: cmp    $0x0,%eax
  0x00007f73e07e1b3e: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1b48: movabs $0x450,%rdx
  0x00007f73e07e1b52: jle    0x00007f73e07e1b62
  0x00007f73e07e1b58: movabs $0x440,%rdx
  0x00007f73e07e1b62: mov    (%rax,%rdx,1),%rbx
  0x00007f73e07e1b66: lea    0x1(%rbx),%rbx
  0x00007f73e07e1b6a: mov    %rbx,(%rax,%rdx,1)
  0x00007f73e07e1b6e: jle    0x00007f73e07e1d1e  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@214 (line 2339)

  0x00007f73e07e1b74: mov    %rdi,%rdx
  0x00007f73e07e1b77: inc    %edx
  0x00007f73e07e1b79: lea    0x14(%rsi),%rbx
  0x00007f73e07e1b7d: mov    %rdi,%rax
  0x00007f73e07e1b80: lock cmpxchg %edx,(%rbx)
  0x00007f73e07e1b84: mov    $0x1,%edx
  0x00007f73e07e1b89: je     0x00007f73e07e1b94
  0x00007f73e07e1b8f: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@233 (line 2343)

  0x00007f73e07e1b94: cmp    $0x0,%edx
  0x00007f73e07e1b97: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1ba1: movabs $0x4b0,%rdi
  0x00007f73e07e1bab: je     0x00007f73e07e1bbb
  0x00007f73e07e1bb1: movabs $0x4c0,%rdi
  0x00007f73e07e1bbb: mov    (%rdx,%rdi,1),%rbx
  0x00007f73e07e1bbf: lea    0x1(%rbx),%rbx
  0x00007f73e07e1bc3: mov    %rbx,(%rdx,%rdi,1)
  0x00007f73e07e1bc7: je     0x00007f73e07e1cac  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@236 (line 2343)

  0x00007f73e07e1bcd: mov    %rsi,%rdx
  0x00007f73e07e1bd0: movabs $0x7f73d350e2f0,%rdi  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1bda: addq   $0x1,0x4d0(%rdi)
  0x00007f73e07e1be2: mov    0x98(%rsp),%rdx
  0x00007f73e07e1bea: mov    %rsi,%rdi
  0x00007f73e07e1bed: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)

  0x00007f73e07e1bf0: nopl   0x0(%rax)
  0x00007f73e07e1bf7: callq  0x00007f73e0269100  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244 (line 2344)
                                                ;   {optimized virtual_call}
  0x00007f73e07e1bfc: movabs $0x7f73d350e2f0,%rax  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1c06: incl   0x508(%rax)
  0x00007f73e07e1c0c: jmpq   0x00007f73e07e1cac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@247 (line 2344)

  0x00007f73e07e1c11: mov    0x88(%rsp),%rsi
  0x00007f73e07e1c19: shl    $0x10,%eax
  0x00007f73e07e1c1c: mov    %rax,%rdx
  0x00007f73e07e1c1f: add    $0x2,%edx
  0x00007f73e07e1c22: lea    0x14(%rsi),%rcx
  0x00007f73e07e1c26: mov    %rdi,%rax
  0x00007f73e07e1c29: lock cmpxchg %edx,(%rcx)
  0x00007f73e07e1c2d: mov    $0x1,%edx
  0x00007f73e07e1c32: je     0x00007f73e07e1c3d
  0x00007f73e07e1c38: mov    $0x0,%edx          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@266 (line 2346)

  0x00007f73e07e1c3d: cmp    $0x0,%edx
  0x00007f73e07e1c40: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1c4a: movabs $0x558,%rcx
  0x00007f73e07e1c54: je     0x00007f73e07e1c64
  0x00007f73e07e1c5a: movabs $0x568,%rcx
  0x00007f73e07e1c64: mov    (%rdx,%rcx,1),%rdi
  0x00007f73e07e1c68: lea    0x1(%rdi),%rdi
  0x00007f73e07e1c6c: mov    %rdi,(%rdx,%rcx,1)
  0x00007f73e07e1c70: je     0x00007f73e07e1cac  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@269 (line 2346)

  0x00007f73e07e1c76: mov    0x98(%rsp),%rbx
  0x00007f73e07e1c7e: mov    %rsi,%rdx
  0x00007f73e07e1c81: movabs $0x7f73d350e2f0,%rcx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1c8b: addq   $0x1,0x578(%rcx)
  0x00007f73e07e1c93: mov    %rbx,%rdx
  0x00007f73e07e1c96: movabs $0x0,%rcx          ;   {oop(NULL)}
  0x00007f73e07e1ca0: mov    %rsi,%rdi
  0x00007f73e07e1ca3: mov    %rdi,%rsi          ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)

  0x00007f73e07e1ca6: nop
  0x00007f73e07e1ca7: callq  0x00007f73e07e1e85  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276 (line 2348)
                                                ;   {optimized virtual_call}
  0x00007f73e07e1cac: mov    0x88(%rsp),%rsi
  0x00007f73e07e1cb4: movabs $0x7f73d350e2f0,%rdi  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1cbe: addq   $0x1,0x5b0(%rdi)
  0x00007f73e07e1cc6: mov    0x88(%rsp),%rsi    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)

  0x00007f73e07e1cce: nop
  0x00007f73e07e1ccf: callq  0x00007f73e07e1e95  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280 (line 2349)
                                                ;   {optimized virtual_call}
  0x00007f73e07e1cd4: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1cde: mov    0x108(%rdx),%ecx
  0x00007f73e07e1ce4: add    $0x8,%ecx
  0x00007f73e07e1ce7: mov    %ecx,0x108(%rdx)
  0x00007f73e07e1ced: and    $0xfff8,%ecx
  0x00007f73e07e1cf3: cmp    $0x0,%ecx
  0x00007f73e07e1cf6: je     0x00007f73e07e1de6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x00007f73e07e1cfc: mov    0x108(%r15),%r10   ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x00007f73e07e1d03: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e1d06: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1d10: incl   0x5e8(%rdx)
  0x00007f73e07e1d16: mov    %rax,%r8
  0x00007f73e07e1d19: jmpq   0x00007f73e07e18c8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)

  0x00007f73e07e1d1e: movabs $0x7f73d350e2f0,%rdx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1d28: incl   0x460(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@217 (line 2342)

  0x00007f73e07e1d2e: add    $0xb0,%rsp
  0x00007f73e07e1d35: pop    %rbp
  0x00007f73e07e1d36: mov    0x108(%r15),%r10
  0x00007f73e07e1d3d: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e1d40: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288 (line 2352)

  0x00007f73e07e1d41: add    $0xb0,%rsp
  0x00007f73e07e1d48: pop    %rbp
  0x00007f73e07e1d49: mov    0x108(%r15),%r10
  0x00007f73e07e1d50: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e1d53: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@113 (line 2330)

  0x00007f73e07e1d54: mov    %rsi,%rcx
  0x00007f73e07e1d57: movabs $0x7f73d350e2f0,%rbx  ;   {metadata(method data for {method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1d61: addq   $0x1,0x280(%rbx)
  0x00007f73e07e1d69: mov    %rdi,%rcx          ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)

  0x00007f73e07e1d6c: data16 xchg %ax,%ax
  0x00007f73e07e1d6f: callq  0x00007f73e0269100  ; ImmutableOopMap{}
                                                ;*invokevirtual fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104 (line 2326)
                                                ;   {optimized virtual_call}
  0x00007f73e07e1d74: add    $0xb0,%rsp
  0x00007f73e07e1d7b: pop    %rbp
  0x00007f73e07e1d7c: mov    0x108(%r15),%r10
  0x00007f73e07e1d83: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e1d86: retq   
  0x00007f73e07e1d87: movabs $0x80034f4b0,%r10  ;   {metadata({method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1d91: mov    %r10,0x8(%rsp)
  0x00007f73e07e1d96: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e1d9e: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@-1 (line 2318)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e1da3: jmpq   0x00007f73e07e15e3
  0x00007f73e07e1da8: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47 (line 2322)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e1dad: mov    %rax,(%rsp)
  0x00007f73e07e1db1: mov    %rdi,0x8(%rsp)
  0x00007f73e07e1db6: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{[136]=Oop rdi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64 (line 2323)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e1dbb: callq  0x00007f73e03308a0  ; ImmutableOopMap{[136]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81 (line 2323)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e1dc0: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150 (line 2335)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e1dc5: movabs $0x80034f400,%r10  ;   {metadata({method} {0x000000080034f400} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1dcf: mov    %r10,0x8(%rsp)
  0x00007f73e07e1dd4: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e1ddc: callq  0x00007f73e0334d80  ; ImmutableOopMap{[152]=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@-1 (line 2277)
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161 (line 2337)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e1de1: jmpq   0x00007f73e07e19d4
  0x00007f73e07e1de6: movabs $0x80034f4b0,%r10  ;   {metadata({method} {0x000000080034f4b0} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e1df0: mov    %r10,0x8(%rsp)
  0x00007f73e07e1df5: movq   $0x11d,(%rsp)
  0x00007f73e07e1dfd: callq  0x00007f73e0334d80  ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285 (line 2350)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e1e02: jmpq   0x00007f73e07e1cfc
  0x00007f73e07e1e07: nop
  0x00007f73e07e1e08: nop
  0x00007f73e07e1e09: mov    0x428(%r15),%rax
  0x00007f73e07e1e10: movabs $0x0,%r10
  0x00007f73e07e1e1a: mov    %r10,0x428(%r15)
  0x00007f73e07e1e21: movabs $0x0,%r10
  0x00007f73e07e1e2b: mov    %r10,0x430(%r15)
  0x00007f73e07e1e32: add    $0xb0,%rsp
  0x00007f73e07e1e39: pop    %rbp
  0x00007f73e07e1e3a: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e1e3f: hlt    
[Stub Code]
  0x00007f73e07e1e40: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e1e45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e1e4f: jmpq   0x00007f73e07e1e4f  ;   {runtime_call}
  0x00007f73e07e1e54: nop
  0x00007f73e07e1e55: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e1e5f: jmpq   0x00007f73e07e1e5f  ;   {runtime_call}
  0x00007f73e07e1e64: nop
  0x00007f73e07e1e65: movabs $0x8002fdef0,%rbx  ;   {static_stub}
  0x00007f73e07e1e6f: jmpq   0x00007f73e027075f  ;   {runtime_call I2C/C2I adapters}
  0x00007f73e07e1e74: nop
  0x00007f73e07e1e75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e1e7f: jmpq   0x00007f73e07e1e7f  ;   {runtime_call}
  0x00007f73e07e1e84: nop
  0x00007f73e07e1e85: movabs $0x80034f5b8,%rbx  ;   {static_stub}
  0x00007f73e07e1e8f: jmpq   0x00007f73e026f5e8  ;   {runtime_call I2C/C2I adapters}
  0x00007f73e07e1e94: nop
  0x00007f73e07e1e95: movabs $0x80034f610,%rbx  ;   {static_stub}
  0x00007f73e07e1e9f: jmpq   0x00007f73e026b0e0  ;   {runtime_call I2C/C2I adapters}
  0x00007f73e07e1ea4: nop
  0x00007f73e07e1ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e1eaf: jmpq   0x00007f73e07e1eaf  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e1eb4: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e1eb9: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e1ec3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e1ec7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e1ecc: hlt    
[Deopt Handler Code]
  0x00007f73e07e1ecd: movabs $0x7f73e07e1ecd,%r10  ;   {section_word}
  0x00007f73e07e1ed7: push   %r10
  0x00007f73e07e1ed9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e1ede: hlt    
  0x00007f73e07e1edf: hlt    

ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 460 
ImmutableOopMap{[136]=Oop }pc offsets: 804 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 1172 
ImmutableOopMap{[136]=Oop }pc offsets: 1692 1868 1908 1955 
ImmutableOopMap{}pc offsets: 2068 
ImmutableOopMap{rsi=Oop [136]=Oop }pc offsets: 2115 
ImmutableOopMap{rsi=Oop [136]=Oop rdi=Oop }pc offsets: 2125 
ImmutableOopMap{[136]=Oop rdi=Oop }pc offsets: 2139 
ImmutableOopMap{[136]=Oop rax=Oop }pc offsets: 2144 
ImmutableOopMap{rsi=Oop [136]=Oop rbx=Oop }pc offsets: 2149 
ImmutableOopMap{[152]=Oop [136]=Oop }pc offsets: 2177 
ImmutableOopMap{[136]=Oop }pc offsets: 2210 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToInterface(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x00007f73e7d11220, 0x00007f73e7d11298]  120 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3600940} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d11220: mov    0x8(%rsi),%r10d
  0x00007f73e7d11224: shl    $0x3,%r10
  0x00007f73e7d11228: movabs $0x800000000,%r12
  0x00007f73e7d11232: add    %r12,%r10
  0x00007f73e7d11235: xor    %r12,%r12
  0x00007f73e7d11238: mov    0x18(%rcx),%eax
  0x00007f73e7d1123b: mov    0x50(%rax),%rax
  0x00007f73e7d1123f: mov    0x10(%rcx),%rbx
  0x00007f73e7d11243: mov    0xc4(%r10),%r11d
  0x00007f73e7d1124a: lea    0x1d0(%r10,%r11,8),%r11
  0x00007f73e7d11252: lea    (%r10,%rbx,8),%r10
  0x00007f73e7d11256: mov    (%r11),%rbx
  0x00007f73e7d11259: cmp    %rbx,%rax
  0x00007f73e7d1125c: je     0x00007f73e7d11273
  0x00007f73e7d1125e: test   %rbx,%rbx
  0x00007f73e7d11261: je     0x00007f73e7d1128c
  0x00007f73e7d11267: add    $0x10,%r11
  0x00007f73e7d1126b: mov    (%r11),%rbx
  0x00007f73e7d1126e: cmp    %rbx,%rax
  0x00007f73e7d11271: jne    0x00007f73e7d1125e
  0x00007f73e7d11273: mov    0x8(%r11),%r11d
  0x00007f73e7d11277: mov    (%r10,%r11,1),%rbx
  0x00007f73e7d1127b: test   %rbx,%rbx
  0x00007f73e7d1127e: je     0x00007f73e7d11287
  0x00007f73e7d11284: jmpq   *0x38(%rbx)
  0x00007f73e7d11287: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d1128c: jmpq   0x00007f73e028db80  ;   {runtime_call IncompatibleClassChangeError throw_exception}
  0x00007f73e7d11291: hlt    
  0x00007f73e7d11292: hlt    
  0x00007f73e7d11293: hlt    
  0x00007f73e7d11294: hlt    
  0x00007f73e7d11295: hlt    
  0x00007f73e7d11296: hlt    
  0x00007f73e7d11297: hlt    
Compiled method (c2)   54496  152       4       java.lang.Object::<init> (1 bytes)
 total in heap  [0x00007f73e7d10d90,0x00007f73e7d11078] = 744
 relocation     [0x00007f73e7d10f08,0x00007f73e7d10f18] = 16
 main code      [0x00007f73e7d10f20,0x00007f73e7d10fc0] = 160
 stub code      [0x00007f73e7d10fc0,0x00007f73e7d10fd8] = 24
 metadata       [0x00007f73e7d10fd8,0x00007f73e7d10fe0] = 8
 scopes data    [0x00007f73e7d10fe0,0x00007f73e7d10ff8] = 24
 scopes pcs     [0x00007f73e7d10ff8,0x00007f73e7d11058] = 96
 dependencies   [0x00007f73e7d11058,0x00007f73e7d11060] = 8
 handler table  [0x00007f73e7d11060,0x00007f73e7d11078] = 24
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x00007f73e7d10f20, 0x00007f73e7d10fd8]  184 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d10f20: mov    0x8(%rsi),%r10d
  0x00007f73e7d10f24: shl    $0x3,%r10
  0x00007f73e7d10f28: movabs $0x800000000,%r12
  0x00007f73e7d10f32: add    %r12,%r10
  0x00007f73e7d10f35: xor    %r12,%r12
  0x00007f73e7d10f38: cmp    %r10,%rax
  0x00007f73e7d10f3b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d10f41: data16 xchg %ax,%ax
  0x00007f73e7d10f44: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d10f4c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d10f50: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d10f57: push   %rbp
  0x00007f73e7d10f58: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)

  0x00007f73e7d10f5c: mov    0x8(%rsi),%r11d
  0x00007f73e7d10f60: movabs $0x800000000,%r10
  0x00007f73e7d10f6a: lea    (%r10,%r11,8),%r10
  0x00007f73e7d10f6e: mov    $0x40000000,%r8d
  0x00007f73e7d10f74: test   %r8d,0xa4(%r10)
  0x00007f73e7d10f7b: je     0x00007f73e7d10f88  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)

  0x00007f73e7d10f7d: mov    %rsi,%rbp
  0x00007f73e7d10f80: data16 xchg %ax,%ax
  0x00007f73e7d10f83: callq  0x00007f73e0336000  ; ImmutableOopMap{rbp=Oop }
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)
                                                ;   {runtime_call _register_finalizer_Java}
  0x00007f73e7d10f88: add    $0x10,%rsp
  0x00007f73e7d10f8c: pop    %rbp
  0x00007f73e7d10f8d: mov    0x108(%r15),%r10
  0x00007f73e7d10f94: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d10f97: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0 (line 50)

  0x00007f73e7d10f98: mov    %rax,%rsi
  0x00007f73e7d10f9b: add    $0x10,%rsp
  0x00007f73e7d10f9f: pop    %rbp
  0x00007f73e7d10fa0: jmpq   0x00007f73e0336200  ;   {runtime_call _rethrow_Java}
  0x00007f73e7d10fa5: hlt    
  0x00007f73e7d10fa6: hlt    
  0x00007f73e7d10fa7: hlt    
  0x00007f73e7d10fa8: hlt    
  0x00007f73e7d10fa9: hlt    
  0x00007f73e7d10faa: hlt    
  0x00007f73e7d10fab: hlt    
  0x00007f73e7d10fac: hlt    
  0x00007f73e7d10fad: hlt    
  0x00007f73e7d10fae: hlt    
  0x00007f73e7d10faf: hlt    
  0x00007f73e7d10fb0: hlt    
  0x00007f73e7d10fb1: hlt    
  0x00007f73e7d10fb2: hlt    
  0x00007f73e7d10fb3: hlt    
  0x00007f73e7d10fb4: hlt    
  0x00007f73e7d10fb5: hlt    
  0x00007f73e7d10fb6: hlt    
  0x00007f73e7d10fb7: hlt    
  0x00007f73e7d10fb8: hlt    
  0x00007f73e7d10fb9: hlt    
  0x00007f73e7d10fba: hlt    
  0x00007f73e7d10fbb: hlt    
  0x00007f73e7d10fbc: hlt    
  0x00007f73e7d10fbd: hlt    
  0x00007f73e7d10fbe: hlt    
  0x00007f73e7d10fbf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d10fc0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d10fc5: callq  0x00007f73e7d10fca
  0x00007f73e7d10fca: subq   $0x5,(%rsp)
  0x00007f73e7d10fcf: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d10fd4: hlt    
  0x00007f73e7d10fd5: hlt    
  0x00007f73e7d10fd6: hlt    
  0x00007f73e7d10fd7: hlt    

ImmutableOopMap{rbp=Oop }pc offsets: 104 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V  [0x00007f73e7d114a0, 0x00007f73e7d114c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3606b28} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d114a0: cmp    (%rsi),%rax
  0x00007f73e7d114a3: mov    0x24(%rdx),%ebx
  0x00007f73e7d114a6: mov    0x10(%rbx),%rbx
  0x00007f73e7d114aa: test   %rbx,%rbx
  0x00007f73e7d114ad: je     0x00007f73e7d114b6
  0x00007f73e7d114b3: jmpq   *0x38(%rbx)
  0x00007f73e7d114b6: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d114bb: hlt    
  0x00007f73e7d114bc: hlt    
  0x00007f73e7d114bd: hlt    
  0x00007f73e7d114be: hlt    
  0x00007f73e7d114bf: hlt    
Compiled method (c1)   54962  109       3       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x00007f73e07e2610,0x00007f73e07e2998] = 904
 relocation     [0x00007f73e07e2788,0x00007f73e07e27b0] = 40
 main code      [0x00007f73e07e27c0,0x00007f73e07e28c0] = 256
 stub code      [0x00007f73e07e28c0,0x00007f73e07e28f0] = 48
 metadata       [0x00007f73e07e28f0,0x00007f73e07e28f8] = 8
 scopes data    [0x00007f73e07e28f8,0x00007f73e07e2920] = 40
 scopes pcs     [0x00007f73e07e2920,0x00007f73e07e2990] = 112
 dependencies   [0x00007f73e07e2990,0x00007f73e07e2998] = 8
----------------------------------------------------------------------
java/lang/StringLatin1.canEncode(I)Z  [0x00007f73e07e27c0, 0x00007f73e07e28f0]  304 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07e27c0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e27c7: push   %rbp
  0x00007f73e07e27c8: sub    $0x30,%rsp
  0x00007f73e07e27cc: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e27d6: mov    0x104(%rax),%edi
  0x00007f73e07e27dc: add    $0x8,%edi
  0x00007f73e07e27df: mov    %edi,0x104(%rax)
  0x00007f73e07e27e5: and    $0x1ff8,%edi
  0x00007f73e07e27eb: cmp    $0x0,%edi
  0x00007f73e07e27ee: je     0x00007f73e07e2862  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@0 (line 53)

  0x00007f73e07e27f4: shr    $0x8,%esi
  0x00007f73e07e27f7: cmp    $0x0,%esi
  0x00007f73e07e27fa: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e2804: movabs $0x140,%rsi
  0x00007f73e07e280e: jne    0x00007f73e07e281e
  0x00007f73e07e2814: movabs $0x150,%rsi
  0x00007f73e07e281e: mov    (%rax,%rsi,1),%rdi
  0x00007f73e07e2822: lea    0x1(%rdi),%rdi
  0x00007f73e07e2826: mov    %rdi,(%rax,%rsi,1)
  0x00007f73e07e282a: jne    0x00007f73e07e284a  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)

  0x00007f73e07e2830: movabs $0x7f73d3530f40,%rax  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e283a: incl   0x160(%rax)
  0x00007f73e07e2840: mov    $0x1,%eax
  0x00007f73e07e2845: jmpq   0x00007f73e07e284f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)

  0x00007f73e07e284a: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)

  0x00007f73e07e284f: and    $0x1,%eax
  0x00007f73e07e2852: add    $0x30,%rsp
  0x00007f73e07e2856: pop    %rbp
  0x00007f73e07e2857: mov    0x108(%r15),%r10
  0x00007f73e07e285e: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e2861: retq   
  0x00007f73e07e2862: movabs $0x80033f1b8,%r10  ;   {metadata({method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e286c: mov    %r10,0x8(%rsp)
  0x00007f73e07e2871: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e2879: callq  0x00007f73e0334d80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e287e: jmpq   0x00007f73e07e27f4
  0x00007f73e07e2883: nop
  0x00007f73e07e2884: nop
  0x00007f73e07e2885: mov    0x428(%r15),%rax
  0x00007f73e07e288c: movabs $0x0,%r10
  0x00007f73e07e2896: mov    %r10,0x428(%r15)
  0x00007f73e07e289d: movabs $0x0,%r10
  0x00007f73e07e28a7: mov    %r10,0x430(%r15)
  0x00007f73e07e28ae: add    $0x30,%rsp
  0x00007f73e07e28b2: pop    %rbp
  0x00007f73e07e28b3: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e28b8: hlt    
  0x00007f73e07e28b9: hlt    
  0x00007f73e07e28ba: hlt    
  0x00007f73e07e28bb: hlt    
  0x00007f73e07e28bc: hlt    
  0x00007f73e07e28bd: hlt    
  0x00007f73e07e28be: hlt    
  0x00007f73e07e28bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07e28c0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07e28c5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e28cf: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e28d3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e28d8: hlt    
[Deopt Handler Code]
  0x00007f73e07e28d9: movabs $0x7f73e07e28d9,%r10  ;   {section_word}
  0x00007f73e07e28e3: push   %r10
  0x00007f73e07e28e5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e28ea: hlt    
  0x00007f73e07e28eb: hlt    
  0x00007f73e07e28ec: hlt    
  0x00007f73e07e28ed: hlt    
  0x00007f73e07e28ee: hlt    
  0x00007f73e07e28ef: hlt    

ImmutableOopMap{}pc offsets: 190 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getByte(Ljava/lang/Object;J)B  [0x00007f73e7d11940, 0x00007f73e7d11b40]  512 bytes
[Entry Point]
  # {method} {0x0000000800378fa0} 'getByte' '(Ljava/lang/Object;J)B' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d11940: mov    0x8(%rsi),%r10d
  0x00007f73e7d11944: shl    $0x3,%r10
  0x00007f73e7d11948: movabs $0x800000000,%r12
  0x00007f73e7d11952: add    %r12,%r10
  0x00007f73e7d11955: xor    %r12,%r12
  0x00007f73e7d11958: cmp    %r10,%rax
  0x00007f73e7d1195b: je     0x00007f73e7d11968
  0x00007f73e7d11961: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d11966: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d11968: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d1196f: push   %rbp
  0x00007f73e7d11970: mov    %rsp,%rbp
  0x00007f73e7d11973: sub    $0x40,%rsp
  0x00007f73e7d11977: mov    %rdx,0x8(%rsp)
  0x00007f73e7d1197c: cmp    $0x0,%rdx
  0x00007f73e7d11980: lea    0x8(%rsp),%rdx
  0x00007f73e7d11985: cmove  0x8(%rsp),%rdx
  0x00007f73e7d1198b: mov    %rsi,(%rsp)
  0x00007f73e7d1198f: cmp    $0x0,%rsi
  0x00007f73e7d11993: lea    (%rsp),%rsi
  0x00007f73e7d11997: cmove  (%rsp),%rsi        ; ImmutableOopMap{[8]=Oop [0]=Oop }
  0x00007f73e7d1199c: vzeroupper 
  0x00007f73e7d1199f: movabs $0x7f73e7d1199c,%r10  ;   {internal_word}
  0x00007f73e7d119a9: mov    %r10,0x330(%r15)
  0x00007f73e7d119b0: mov    %rsp,0x328(%r15)
  0x00007f73e7d119b7: cmpb   $0x0,0x16e4c879(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d119be: je     0x00007f73e7d119fa
  0x00007f73e7d119c4: push   %rsi
  0x00007f73e7d119c5: push   %rdx
  0x00007f73e7d119c6: push   %rcx
  0x00007f73e7d119c7: movabs $0x800378fa0,%rsi  ;   {metadata({method} {0x0000000800378fa0} 'getByte' '(Ljava/lang/Object;J)B' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d119d1: mov    %r15,%rdi
  0x00007f73e7d119d4: test   $0xf,%esp
  0x00007f73e7d119da: je     0x00007f73e7d119f2
  0x00007f73e7d119e0: sub    $0x8,%rsp
  0x00007f73e7d119e4: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d119e9: add    $0x8,%rsp
  0x00007f73e7d119ed: jmpq   0x00007f73e7d119f7
  0x00007f73e7d119f2: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d119f7: pop    %rcx
  0x00007f73e7d119f8: pop    %rdx
  0x00007f73e7d119f9: pop    %rsi
  0x00007f73e7d119fa: lea    0x348(%r15),%rdi
  0x00007f73e7d11a01: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d11a0c: callq  0x00007f73fe54d190  ;   {runtime_call}
  0x00007f73e7d11a11: vzeroupper 
  0x00007f73e7d11a14: movsbl %al,%eax
  0x00007f73e7d11a17: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d11a22: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d11a28: testb  $0x8,0x108(%r15)
  0x00007f73e7d11a30: jne    0x00007f73e7d11a47
  0x00007f73e7d11a36: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d11a41: je     0x00007f73e7d11a6b
  0x00007f73e7d11a47: vzeroupper 
  0x00007f73e7d11a4a: mov    %rax,-0x8(%rbp)
  0x00007f73e7d11a4e: mov    %r15,%rdi
  0x00007f73e7d11a51: mov    %rsp,%r12
  0x00007f73e7d11a54: sub    $0x0,%rsp
  0x00007f73e7d11a58: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d11a5c: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d11a61: mov    %r12,%rsp
  0x00007f73e7d11a64: xor    %r12,%r12
  0x00007f73e7d11a67: mov    -0x8(%rbp),%rax
  0x00007f73e7d11a6b: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d11a76: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d11a81: je     0x00007f73e7d11b17
  0x00007f73e7d11a87: cmpb   $0x0,0x16e4c7a9(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d11a8e: je     0x00007f73e7d11acc
  0x00007f73e7d11a94: mov    %rax,-0x8(%rbp)
  0x00007f73e7d11a98: movabs $0x800378fa0,%rsi  ;   {metadata({method} {0x0000000800378fa0} 'getByte' '(Ljava/lang/Object;J)B' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d11aa2: mov    %r15,%rdi
  0x00007f73e7d11aa5: test   $0xf,%esp
  0x00007f73e7d11aab: je     0x00007f73e7d11ac3
  0x00007f73e7d11ab1: sub    $0x8,%rsp
  0x00007f73e7d11ab5: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d11aba: add    $0x8,%rsp
  0x00007f73e7d11abe: jmpq   0x00007f73e7d11ac8
  0x00007f73e7d11ac3: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d11ac8: mov    -0x8(%rbp),%rax
  0x00007f73e7d11acc: movabs $0x0,%r10
  0x00007f73e7d11ad6: mov    %r10,0x328(%r15)
  0x00007f73e7d11add: movabs $0x0,%r10
  0x00007f73e7d11ae7: mov    %r10,0x330(%r15)
  0x00007f73e7d11aee: vzeroupper 
  0x00007f73e7d11af1: mov    0xe0(%r15),%rcx
  0x00007f73e7d11af8: movl   $0x0,0x100(%rcx)
  0x00007f73e7d11b02: leaveq 
  0x00007f73e7d11b03: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d11b0b: jne    0x00007f73e7d11b12
  0x00007f73e7d11b11: retq   
  0x00007f73e7d11b12: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d11b17: vzeroupper 
  0x00007f73e7d11b1a: mov    %rax,-0x8(%rbp)
  0x00007f73e7d11b1e: mov    %rsp,%r12
  0x00007f73e7d11b21: sub    $0x0,%rsp
  0x00007f73e7d11b25: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d11b29: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d11b2e: mov    %r12,%rsp
  0x00007f73e7d11b31: xor    %r12,%r12
  0x00007f73e7d11b34: mov    -0x8(%rbp),%rax
  0x00007f73e7d11b38: jmpq   0x00007f73e7d11a87
  0x00007f73e7d11b3d: hlt    
  0x00007f73e7d11b3e: hlt    
  0x00007f73e7d11b3f: hlt    
Compiled method (c2)   55865  156       4       java.lang.String::coder (15 bytes)
 total in heap  [0x00007f73e7d11510,0x00007f73e7d11778] = 616
 relocation     [0x00007f73e7d11688,0x00007f73e7d11698] = 16
 main code      [0x00007f73e7d116a0,0x00007f73e7d11700] = 96
 stub code      [0x00007f73e7d11700,0x00007f73e7d11718] = 24
 metadata       [0x00007f73e7d11718,0x00007f73e7d11720] = 8
 scopes data    [0x00007f73e7d11720,0x00007f73e7d11730] = 16
 scopes pcs     [0x00007f73e7d11730,0x00007f73e7d11770] = 64
 dependencies   [0x00007f73e7d11770,0x00007f73e7d11778] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x00007f73e7d116a0, 0x00007f73e7d11718]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d116a0: mov    0x8(%rsi),%r10d
  0x00007f73e7d116a4: shl    $0x3,%r10
  0x00007f73e7d116a8: movabs $0x800000000,%r12
  0x00007f73e7d116b2: add    %r12,%r10
  0x00007f73e7d116b5: xor    %r12,%r12
  0x00007f73e7d116b8: cmp    %r10,%rax
  0x00007f73e7d116bb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d116c1: data16 xchg %ax,%ax
  0x00007f73e7d116c4: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d116cc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d116d0: sub    $0x18,%rsp
  0x00007f73e7d116d7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)

  0x00007f73e7d116dc: movsbl 0x14(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)

  0x00007f73e7d116e0: add    $0x10,%rsp
  0x00007f73e7d116e4: pop    %rbp
  0x00007f73e7d116e5: mov    0x108(%r15),%r10
  0x00007f73e7d116ec: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d116ef: retq   
  0x00007f73e7d116f0: hlt    
  0x00007f73e7d116f1: hlt    
  0x00007f73e7d116f2: hlt    
  0x00007f73e7d116f3: hlt    
  0x00007f73e7d116f4: hlt    
  0x00007f73e7d116f5: hlt    
  0x00007f73e7d116f6: hlt    
  0x00007f73e7d116f7: hlt    
  0x00007f73e7d116f8: hlt    
  0x00007f73e7d116f9: hlt    
  0x00007f73e7d116fa: hlt    
  0x00007f73e7d116fb: hlt    
  0x00007f73e7d116fc: hlt    
  0x00007f73e7d116fd: hlt    
  0x00007f73e7d116fe: hlt    
  0x00007f73e7d116ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d11700: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d11705: callq  0x00007f73e7d1170a
  0x00007f73e7d1170a: subq   $0x5,(%rsp)
  0x00007f73e7d1170f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d11714: hlt    
  0x00007f73e7d11715: hlt    
  0x00007f73e7d11716: hlt    
  0x00007f73e7d11717: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToInterface(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d11d20, 0x00007f73e7d11d98]  120 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3626138} 'linkToInterface' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d11d20: mov    0x8(%rsi),%r10d
  0x00007f73e7d11d24: shl    $0x3,%r10
  0x00007f73e7d11d28: movabs $0x800000000,%r12
  0x00007f73e7d11d32: add    %r12,%r10
  0x00007f73e7d11d35: xor    %r12,%r12
  0x00007f73e7d11d38: mov    0x18(%rdx),%eax
  0x00007f73e7d11d3b: mov    0x50(%rax),%rax
  0x00007f73e7d11d3f: mov    0x10(%rdx),%rbx
  0x00007f73e7d11d43: mov    0xc4(%r10),%r11d
  0x00007f73e7d11d4a: lea    0x1d0(%r10,%r11,8),%r11
  0x00007f73e7d11d52: lea    (%r10,%rbx,8),%r10
  0x00007f73e7d11d56: mov    (%r11),%rbx
  0x00007f73e7d11d59: cmp    %rbx,%rax
  0x00007f73e7d11d5c: je     0x00007f73e7d11d73
  0x00007f73e7d11d5e: test   %rbx,%rbx
  0x00007f73e7d11d61: je     0x00007f73e7d11d8c
  0x00007f73e7d11d67: add    $0x10,%r11
  0x00007f73e7d11d6b: mov    (%r11),%rbx
  0x00007f73e7d11d6e: cmp    %rbx,%rax
  0x00007f73e7d11d71: jne    0x00007f73e7d11d5e
  0x00007f73e7d11d73: mov    0x8(%r11),%r11d
  0x00007f73e7d11d77: mov    (%r10,%r11,1),%rbx
  0x00007f73e7d11d7b: test   %rbx,%rbx
  0x00007f73e7d11d7e: je     0x00007f73e7d11d87
  0x00007f73e7d11d84: jmpq   *0x38(%rbx)
  0x00007f73e7d11d87: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d11d8c: jmpq   0x00007f73e028db80  ;   {runtime_call IncompatibleClassChangeError throw_exception}
  0x00007f73e7d11d91: hlt    
  0x00007f73e7d11d92: hlt    
  0x00007f73e7d11d93: hlt    
  0x00007f73e7d11d94: hlt    
  0x00007f73e7d11d95: hlt    
  0x00007f73e7d11d96: hlt    
  0x00007f73e7d11d97: hlt    
Compiled method (c1)   56355  124       3       java.util.HashMap::hash (20 bytes)
 total in heap  [0x00007f73e07e2a10,0x00007f73e07e2ea0] = 1168
 relocation     [0x00007f73e07e2b88,0x00007f73e07e2bc0] = 56
 main code      [0x00007f73e07e2bc0,0x00007f73e07e2d80] = 448
 stub code      [0x00007f73e07e2d80,0x00007f73e07e2dc0] = 64
 metadata       [0x00007f73e07e2dc0,0x00007f73e07e2dc8] = 8
 scopes data    [0x00007f73e07e2dc8,0x00007f73e07e2df8] = 48
 scopes pcs     [0x00007f73e07e2df8,0x00007f73e07e2e88] = 144
 dependencies   [0x00007f73e07e2e88,0x00007f73e07e2e90] = 8
 nul chk table  [0x00007f73e07e2e90,0x00007f73e07e2ea0] = 16
----------------------------------------------------------------------
java/util/HashMap.hash(Ljava/lang/Object;)I  [0x00007f73e07e2bc0, 0x00007f73e07e2dc0]  512 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000008002f2378} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07e2bc0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e2bc7: push   %rbp
  0x00007f73e07e2bc8: sub    $0x30,%rsp
  0x00007f73e07e2bcc: movabs $0x7f73d350f960,%rdi  ;   {metadata(method data for {method} {0x00000008002f2378} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007f73e07e2bd6: mov    0x104(%rdi),%ebx
  0x00007f73e07e2bdc: add    $0x8,%ebx
  0x00007f73e07e2bdf: mov    %ebx,0x104(%rdi)
  0x00007f73e07e2be5: and    $0x1ff8,%ebx
  0x00007f73e07e2beb: cmp    $0x0,%ebx
  0x00007f73e07e2bee: je     0x00007f73e07e2d18  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x00007f73e07e2bf4: cmp    $0x0,%rsi
  0x00007f73e07e2bf8: movabs $0x7f73d350f960,%rdi  ;   {metadata(method data for {method} {0x00000008002f2378} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007f73e07e2c02: movabs $0x140,%rbx
  0x00007f73e07e2c0c: jne    0x00007f73e07e2c1c
  0x00007f73e07e2c12: movabs $0x150,%rbx
  0x00007f73e07e2c1c: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07e2c20: lea    0x1(%rax),%rax
  0x00007f73e07e2c24: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07e2c28: jne    0x00007f73e07e2c48  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x00007f73e07e2c2e: movabs $0x7f73d350f960,%rsi  ;   {metadata(method data for {method} {0x00000008002f2378} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007f73e07e2c38: incl   0x160(%rsi)
  0x00007f73e07e2c3e: mov    $0x0,%esi
  0x00007f73e07e2c43: jmpq   0x00007f73e07e2d05  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x00007f73e07e2c48: cmp    (%rsi),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x00007f73e07e2d39
  0x00007f73e07e2c4b: mov    %rsi,%rdi
  0x00007f73e07e2c4e: movabs $0x7f73d350f960,%rbx  ;   {metadata(method data for {method} {0x00000008002f2378} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007f73e07e2c58: mov    0x8(%rdi),%edi
  0x00007f73e07e2c5b: shl    $0x3,%rdi
  0x00007f73e07e2c5f: movabs $0x800000000,%r12
  0x00007f73e07e2c69: add    %r12,%rdi
  0x00007f73e07e2c6c: xor    %r12,%r12
  0x00007f73e07e2c6f: cmp    0x188(%rbx),%rdi
  0x00007f73e07e2c76: jne    0x00007f73e07e2c85
  0x00007f73e07e2c78: addq   $0x1,0x190(%rbx)
  0x00007f73e07e2c80: jmpq   0x00007f73e07e2ceb
  0x00007f73e07e2c85: cmp    0x198(%rbx),%rdi
  0x00007f73e07e2c8c: jne    0x00007f73e07e2c9b
  0x00007f73e07e2c8e: addq   $0x1,0x1a0(%rbx)
  0x00007f73e07e2c96: jmpq   0x00007f73e07e2ceb
  0x00007f73e07e2c9b: cmpq   $0x0,0x188(%rbx)
  0x00007f73e07e2ca6: jne    0x00007f73e07e2cbf
  0x00007f73e07e2ca8: mov    %rdi,0x188(%rbx)
  0x00007f73e07e2caf: movq   $0x1,0x190(%rbx)
  0x00007f73e07e2cba: jmpq   0x00007f73e07e2ceb
  0x00007f73e07e2cbf: cmpq   $0x0,0x198(%rbx)
  0x00007f73e07e2cca: jne    0x00007f73e07e2ce3
  0x00007f73e07e2ccc: mov    %rdi,0x198(%rbx)
  0x00007f73e07e2cd3: movq   $0x1,0x1a0(%rbx)
  0x00007f73e07e2cde: jmpq   0x00007f73e07e2ceb
  0x00007f73e07e2ce3: addq   $0x1,0x178(%rbx)
  0x00007f73e07e2ceb: xchg   %ax,%ax
  0x00007f73e07e2ced: movabs $0x800336890,%rax
  0x00007f73e07e2cf7: callq  0x00007f73e027f820  ; ImmutableOopMap{}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x00007f73e07e2cfc: mov    %rax,%rsi
  0x00007f73e07e2cff: shr    $0x10,%esi
  0x00007f73e07e2d02: xor    %rax,%rsi
  0x00007f73e07e2d05: mov    %rsi,%rax
  0x00007f73e07e2d08: add    $0x30,%rsp
  0x00007f73e07e2d0c: pop    %rbp
  0x00007f73e07e2d0d: mov    0x108(%r15),%r10
  0x00007f73e07e2d14: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e2d17: retq   
  0x00007f73e07e2d18: movabs $0x8002f2378,%r10  ;   {metadata({method} {0x00000008002f2378} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00007f73e07e2d22: mov    %r10,0x8(%rsp)
  0x00007f73e07e2d27: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e2d2f: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e2d34: jmpq   0x00007f73e07e2bf4
  0x00007f73e07e2d39: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e2d3e: nop
  0x00007f73e07e2d3f: nop
  0x00007f73e07e2d40: mov    0x428(%r15),%rax
  0x00007f73e07e2d47: movabs $0x0,%r10
  0x00007f73e07e2d51: mov    %r10,0x428(%r15)
  0x00007f73e07e2d58: movabs $0x0,%r10
  0x00007f73e07e2d62: mov    %r10,0x430(%r15)
  0x00007f73e07e2d69: add    $0x30,%rsp
  0x00007f73e07e2d6d: pop    %rbp
  0x00007f73e07e2d6e: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e2d73: hlt    
  0x00007f73e07e2d74: hlt    
  0x00007f73e07e2d75: hlt    
  0x00007f73e07e2d76: hlt    
  0x00007f73e07e2d77: hlt    
  0x00007f73e07e2d78: hlt    
  0x00007f73e07e2d79: hlt    
  0x00007f73e07e2d7a: hlt    
  0x00007f73e07e2d7b: hlt    
  0x00007f73e07e2d7c: hlt    
  0x00007f73e07e2d7d: hlt    
  0x00007f73e07e2d7e: hlt    
  0x00007f73e07e2d7f: hlt    
[Stub Code]
  0x00007f73e07e2d80: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e2d85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e2d8f: jmpq   0x00007f73e07e2d8f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e2d94: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e2d99: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e2da3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e2da7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e2dac: hlt    
[Deopt Handler Code]
  0x00007f73e07e2dad: movabs $0x7f73e07e2dad,%r10  ;   {section_word}
  0x00007f73e07e2db7: push   %r10
  0x00007f73e07e2db9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e2dbe: hlt    
  0x00007f73e07e2dbf: hlt    

ImmutableOopMap{}pc offsets: 316 
ImmutableOopMap{rsi=Oop }pc offsets: 372 382 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V  [0x00007f73e7d122a0, 0x00007f73e7d122b8]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3626f58} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/Object'
  # parm5:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d122a0: mov    0x24(%rdi),%ebx
  0x00007f73e7d122a3: mov    0x10(%rbx),%rbx
  0x00007f73e7d122a7: test   %rbx,%rbx
  0x00007f73e7d122aa: je     0x00007f73e7d122b3
  0x00007f73e7d122b0: jmpq   *0x38(%rbx)
  0x00007f73e7d122b3: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c2)   57208  167       4       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x00007f73e7d11e10,0x00007f73e7d120c8] = 696
 relocation     [0x00007f73e7d11f88,0x00007f73e7d11f98] = 16
 main code      [0x00007f73e7d11fa0,0x00007f73e7d12020] = 128
 stub code      [0x00007f73e7d12020,0x00007f73e7d12038] = 24
 metadata       [0x00007f73e7d12038,0x00007f73e7d12040] = 8
 scopes data    [0x00007f73e7d12040,0x00007f73e7d12060] = 32
 scopes pcs     [0x00007f73e7d12060,0x00007f73e7d120c0] = 96
 dependencies   [0x00007f73e7d120c0,0x00007f73e7d120c8] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x00007f73e7d11fa0, 0x00007f73e7d12038]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d11fa0: mov    0x8(%rsi),%r10d
  0x00007f73e7d11fa4: shl    $0x3,%r10
  0x00007f73e7d11fa8: movabs $0x800000000,%r12
  0x00007f73e7d11fb2: add    %r12,%r10
  0x00007f73e7d11fb5: xor    %r12,%r12
  0x00007f73e7d11fb8: cmp    %r10,%rax
  0x00007f73e7d11fbb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d11fc1: data16 xchg %ax,%ax
  0x00007f73e7d11fc4: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d11fcc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d11fd0: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d11fd7: push   %rbp
  0x00007f73e7d11fd8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)

  0x00007f73e7d11fdc: movsbl 0x14(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)

  0x00007f73e7d11fe1: test   %r11d,%r11d
  0x00007f73e7d11fe4: jne    0x00007f73e7d11ffb  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)

  0x00007f73e7d11fe6: mov    $0x1,%eax
  0x00007f73e7d11feb: add    $0x10,%rsp
  0x00007f73e7d11fef: pop    %rbp
  0x00007f73e7d11ff0: mov    0x108(%r15),%r10
  0x00007f73e7d11ff7: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d11ffa: retq   
  0x00007f73e7d11ffb: mov    $0xffffff4d,%esi
  0x00007f73e7d12000: mov    %r11d,%ebp
  0x00007f73e7d12003: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d12008: hlt    
  0x00007f73e7d12009: hlt    
  0x00007f73e7d1200a: hlt    
  0x00007f73e7d1200b: hlt    
  0x00007f73e7d1200c: hlt    
  0x00007f73e7d1200d: hlt    
  0x00007f73e7d1200e: hlt    
  0x00007f73e7d1200f: hlt    
  0x00007f73e7d12010: hlt    
  0x00007f73e7d12011: hlt    
  0x00007f73e7d12012: hlt    
  0x00007f73e7d12013: hlt    
  0x00007f73e7d12014: hlt    
  0x00007f73e7d12015: hlt    
  0x00007f73e7d12016: hlt    
  0x00007f73e7d12017: hlt    
  0x00007f73e7d12018: hlt    
  0x00007f73e7d12019: hlt    
  0x00007f73e7d1201a: hlt    
  0x00007f73e7d1201b: hlt    
  0x00007f73e7d1201c: hlt    
  0x00007f73e7d1201d: hlt    
  0x00007f73e7d1201e: hlt    
  0x00007f73e7d1201f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d12020: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d12025: callq  0x00007f73e7d1202a
  0x00007f73e7d1202a: subq   $0x5,(%rsp)
  0x00007f73e7d1202f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d12034: hlt    
  0x00007f73e7d12035: hlt    
  0x00007f73e7d12036: hlt    
  0x00007f73e7d12037: hlt    

ImmutableOopMap{}pc offsets: 104 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007f73e7d124a0, 0x00007f73e7d124c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3627250} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  # parm2:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d124a0: mov    0x14(%rsi),%ebx
  0x00007f73e7d124a3: mov    0x28(%rbx),%ebx
  0x00007f73e7d124a6: mov    0x24(%rbx),%ebx
  0x00007f73e7d124a9: mov    0x10(%rbx),%rbx
  0x00007f73e7d124ad: test   %rbx,%rbx
  0x00007f73e7d124b0: je     0x00007f73e7d124b9
  0x00007f73e7d124b6: jmpq   *0x38(%rbx)
  0x00007f73e7d124b9: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d124be: hlt    
  0x00007f73e7d124bf: hlt    
Compiled method (c1)   57674  149       3       java.lang.ref.Reference::reachabilityFence (1 bytes)
 total in heap  [0x00007f73e07e2f10,0x00007f73e07e31f8] = 744
 relocation     [0x00007f73e07e3088,0x00007f73e07e30b0] = 40
 main code      [0x00007f73e07e30c0,0x00007f73e07e3160] = 160
 stub code      [0x00007f73e07e3160,0x00007f73e07e3190] = 48
 metadata       [0x00007f73e07e3190,0x00007f73e07e3198] = 8
 scopes data    [0x00007f73e07e3198,0x00007f73e07e31b0] = 24
 scopes pcs     [0x00007f73e07e31b0,0x00007f73e07e31f0] = 64
 dependencies   [0x00007f73e07e31f0,0x00007f73e07e31f8] = 8
----------------------------------------------------------------------
java/lang/ref/Reference.reachabilityFence(Ljava/lang/Object;)V  [0x00007f73e07e30c0, 0x00007f73e07e3190]  208 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080000a6f0} 'reachabilityFence' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07e30c0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e30c7: push   %rbp
  0x00007f73e07e30c8: sub    $0x30,%rsp
  0x00007f73e07e30cc: movabs $0x7f73d35cb628,%rdi  ;   {metadata(method data for {method} {0x000000080000a6f0} 'reachabilityFence' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x00007f73e07e30d6: mov    0x104(%rdi),%ebx
  0x00007f73e07e30dc: add    $0x8,%ebx
  0x00007f73e07e30df: mov    %ebx,0x104(%rdi)
  0x00007f73e07e30e5: and    $0x1ff8,%ebx
  0x00007f73e07e30eb: cmp    $0x0,%ebx
  0x00007f73e07e30ee: je     0x00007f73e07e3104  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.ref.Reference::reachabilityFence@0 (line 519)

  0x00007f73e07e30f4: add    $0x30,%rsp
  0x00007f73e07e30f8: pop    %rbp
  0x00007f73e07e30f9: mov    0x108(%r15),%r10
  0x00007f73e07e3100: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e3103: retq   
  0x00007f73e07e3104: movabs $0x80000a6f0,%r10  ;   {metadata({method} {0x000000080000a6f0} 'reachabilityFence' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference')}
  0x00007f73e07e310e: mov    %r10,0x8(%rsp)
  0x00007f73e07e3113: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e311b: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::reachabilityFence@-1 (line 519)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e3120: jmp    0x00007f73e07e30f4
  0x00007f73e07e3122: nop
  0x00007f73e07e3123: nop
  0x00007f73e07e3124: mov    0x428(%r15),%rax
  0x00007f73e07e312b: movabs $0x0,%r10
  0x00007f73e07e3135: mov    %r10,0x428(%r15)
  0x00007f73e07e313c: movabs $0x0,%r10
  0x00007f73e07e3146: mov    %r10,0x430(%r15)
  0x00007f73e07e314d: add    $0x30,%rsp
  0x00007f73e07e3151: pop    %rbp
  0x00007f73e07e3152: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e3157: hlt    
  0x00007f73e07e3158: hlt    
  0x00007f73e07e3159: hlt    
  0x00007f73e07e315a: hlt    
  0x00007f73e07e315b: hlt    
  0x00007f73e07e315c: hlt    
  0x00007f73e07e315d: hlt    
  0x00007f73e07e315e: hlt    
  0x00007f73e07e315f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07e3160: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07e3165: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e316f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e3173: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e3178: hlt    
[Deopt Handler Code]
  0x00007f73e07e3179: movabs $0x7f73e07e3179,%r10  ;   {section_word}
  0x00007f73e07e3183: push   %r10
  0x00007f73e07e3185: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e318a: hlt    
  0x00007f73e07e318b: hlt    
  0x00007f73e07e318c: hlt    
  0x00007f73e07e318d: hlt    
  0x00007f73e07e318e: hlt    
  0x00007f73e07e318f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 96 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d126a0, 0x00007f73e7d126c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3627368} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d126a0: cmp    (%rsi),%rax
  0x00007f73e7d126a3: mov    0x24(%r9),%ebx
  0x00007f73e7d126a7: mov    0x10(%rbx),%rbx
  0x00007f73e7d126ab: test   %rbx,%rbx
  0x00007f73e7d126ae: je     0x00007f73e7d126b7
  0x00007f73e7d126b4: jmpq   *0x38(%rbx)
  0x00007f73e7d126b7: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d126bc: hlt    
  0x00007f73e7d126bd: hlt    
  0x00007f73e7d126be: hlt    
  0x00007f73e7d126bf: hlt    
Compiled method (c1)   58189  119       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
 total in heap  [0x00007f73e07e3210,0x00007f73e07e3b10] = 2304
 relocation     [0x00007f73e07e3388,0x00007f73e07e33f0] = 104
 main code      [0x00007f73e07e3400,0x00007f73e07e3840] = 1088
 stub code      [0x00007f73e07e3840,0x00007f73e07e3890] = 80
 metadata       [0x00007f73e07e3890,0x00007f73e07e38a8] = 24
 scopes data    [0x00007f73e07e38a8,0x00007f73e07e3998] = 240
 scopes pcs     [0x00007f73e07e3998,0x00007f73e07e3af8] = 352
 dependencies   [0x00007f73e07e3af8,0x00007f73e07e3b00] = 8
 nul chk table  [0x00007f73e07e3b00,0x00007f73e07e3b10] = 16
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V  [0x00007f73e07e3400, 0x00007f73e07e3890]  1168 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008003842f8} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007f73e07e3400: mov    0x8(%rsi),%r10d
  0x00007f73e07e3404: shl    $0x3,%r10
  0x00007f73e07e3408: movabs $0x800000000,%r12
  0x00007f73e07e3412: add    %r12,%r10
  0x00007f73e07e3415: xor    %r12,%r12
  0x00007f73e07e3418: cmp    %rax,%r10
  0x00007f73e07e341b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e3421: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e342c: data16 data16 xchg %ax,%ax
  0x00007f73e07e3430: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e343b: data16 data16 xchg %ax,%ax
  0x00007f73e07e343f: nop
[Verified Entry Point]
  0x00007f73e07e3440: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e3447: push   %rbp
  0x00007f73e07e3448: sub    $0xa0,%rsp
  0x00007f73e07e344f: mov    %rsi,0x78(%rsp)
  0x00007f73e07e3454: movabs $0x7f73d353cee0,%rcx  ;   {metadata(method data for {method} {0x00000008003842f8} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07e345e: mov    0x104(%rcx),%edi
  0x00007f73e07e3464: add    $0x8,%edi
  0x00007f73e07e3467: mov    %edi,0x104(%rcx)
  0x00007f73e07e346d: and    $0x1ff8,%edi
  0x00007f73e07e3473: cmp    $0x0,%edi
  0x00007f73e07e3476: je     0x00007f73e07e374b  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 170)

  0x00007f73e07e347c: mov    0x14(%rsi),%edi    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1 (line 170)

  0x00007f73e07e347f: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ; implicit exception: dispatches to 0x00007f73e07e376c
  0x00007f73e07e3482: movsbl 0x10(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 170)

  0x00007f73e07e3486: mov    %rbx,%rax
  0x00007f73e07e3489: sar    %cl,%eax
  0x00007f73e07e348b: mov    %rdx,%rcx
  0x00007f73e07e348e: sub    %eax,%ecx
  0x00007f73e07e3490: cmp    $0x0,%ecx
  0x00007f73e07e3493: movabs $0x7f73d353cee0,%rax  ;   {metadata(method data for {method} {0x00000008003842f8} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07e349d: movabs $0x140,%rcx
  0x00007f73e07e34a7: jle    0x00007f73e07e34b7
  0x00007f73e07e34ad: movabs $0x150,%rcx
  0x00007f73e07e34b7: mov    (%rax,%rcx,1),%r8
  0x00007f73e07e34bb: lea    0x1(%r8),%r8
  0x00007f73e07e34bf: mov    %r8,(%rax,%rcx,1)
  0x00007f73e07e34c3: jle    0x00007f73e07e3738  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14 (line 171)

  0x00007f73e07e34c9: mov    %ebx,0x80(%rsp)
  0x00007f73e07e34d0: mov    %rdi,0x88(%rsp)
  0x00007f73e07e34d8: mov    %rsi,%rax
  0x00007f73e07e34db: movabs $0x7f73d353cee0,%rcx  ;   {metadata(method data for {method} {0x00000008003842f8} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07e34e5: addq   $0x1,0x160(%rcx)
  0x00007f73e07e34ed: mov    %rsi,%rax
  0x00007f73e07e34f0: mov    %rax,%rsi          ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)

  0x00007f73e07e34f3: nopl   0x0(%rax)
  0x00007f73e07e34f7: callq  0x00007f73e07e3845  ; ImmutableOopMap{[120]=Oop [136]=Oop }
                                                ;*invokevirtual newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24 (line 173)
                                                ;   {optimized virtual_call}
  0x00007f73e07e34fc: mov    0x78(%rsp),%rsi
  0x00007f73e07e3501: movsbl 0x10(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28 (line 173)

  0x00007f73e07e3505: mov    %rax,%r8
  0x00007f73e07e3508: shl    %cl,%r8d
  0x00007f73e07e350b: movabs $0x7f73d353cee0,%rbx  ;   {metadata(method data for {method} {0x00000008003842f8} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07e3515: addq   $0x1,0x198(%rbx)
  0x00007f73e07e351d: movabs $0x7f73d35414f8,%rbx  ;   {metadata(method data for {method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07e3527: mov    0x104(%rbx),%edx
  0x00007f73e07e352d: add    $0x8,%edx
  0x00007f73e07e3530: mov    %edx,0x104(%rbx)
  0x00007f73e07e3536: and    $0x7ffff8,%edx
  0x00007f73e07e353c: cmp    $0x0,%edx
  0x00007f73e07e353f: je     0x00007f73e07e3771
  0x00007f73e07e3545: mov    %r8,%rbx
  0x00007f73e07e3548: movabs $0x8003b78a0,%rdx  ;   {metadata({type array byte})}
  0x00007f73e07e3552: movslq %ebx,%rbx
  0x00007f73e07e3555: mov    %rbx,%rdi
  0x00007f73e07e3558: cmp    $0xffffff,%rbx
  0x00007f73e07e355f: ja     0x00007f73e07e3792
  0x00007f73e07e3565: movabs $0x17,%rsi
  0x00007f73e07e356f: lea    (%rsi,%rbx,1),%rsi
  0x00007f73e07e3573: and    $0xfffffffffffffff8,%rsi
  0x00007f73e07e3577: mov    0x118(%r15),%rax
  0x00007f73e07e357e: lea    (%rax,%rsi,1),%rsi
  0x00007f73e07e3582: cmp    0x128(%r15),%rsi
  0x00007f73e07e3589: ja     0x00007f73e07e3792
  0x00007f73e07e358f: mov    %rsi,0x118(%r15)
  0x00007f73e07e3596: sub    %rax,%rsi
  0x00007f73e07e3599: movq   $0x1,(%rax)
  0x00007f73e07e35a0: mov    %rdx,%rcx
  0x00007f73e07e35a3: movabs $0x800000000,%r12
  0x00007f73e07e35ad: sub    %r12,%rcx
  0x00007f73e07e35b0: shr    $0x3,%rcx
  0x00007f73e07e35b4: xor    %r12,%r12
  0x00007f73e07e35b7: mov    %ecx,0x8(%rax)
  0x00007f73e07e35ba: mov    %ebx,0xc(%rax)
  0x00007f73e07e35bd: sub    $0x10,%rsi
  0x00007f73e07e35c1: je     0x00007f73e07e35e1
  0x00007f73e07e35c7: test   %rsi,%rsi
  0x00007f73e07e35ca: je     0x00007f73e07e35e1
  0x00007f73e07e35d0: xor    %rbx,%rbx
  0x00007f73e07e35d3: shr    $0x3,%rsi
  0x00007f73e07e35d7: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f73e07e35dc: dec    %rsi
  0x00007f73e07e35df: jne    0x00007f73e07e35d7  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)

  0x00007f73e07e35e1: movabs $0x7f73d35414f8,%rsi  ;   {metadata(method data for {method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07e35eb: addq   $0x1,0x140(%rsi)
  0x00007f73e07e35f3: movabs $0x7f73d3532fe8,%rsi  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07e35fd: mov    0x104(%rsi),%edx
  0x00007f73e07e3603: add    $0x8,%edx
  0x00007f73e07e3606: mov    %edx,0x104(%rsi)
  0x00007f73e07e360c: and    $0x7ffff8,%edx
  0x00007f73e07e3612: cmp    $0x0,%edx
  0x00007f73e07e3615: je     0x00007f73e07e379c
  0x00007f73e07e361b: mov    0x80(%rsp),%ebx
  0x00007f73e07e3622: cmp    %r8d,%ebx
  0x00007f73e07e3625: movabs $0x7f73d3532fe8,%rsi  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07e362f: movabs $0x140,%rdx
  0x00007f73e07e3639: jg     0x00007f73e07e3649
  0x00007f73e07e363f: movabs $0x150,%rdx
  0x00007f73e07e3649: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07e364d: lea    0x1(%rcx),%rcx
  0x00007f73e07e3651: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07e3655: jg     0x00007f73e07e3670  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1518)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)

  0x00007f73e07e365b: movabs $0x7f73d3532fe8,%rsi  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07e3665: incl   0x160(%rsi)
  0x00007f73e07e366b: jmpq   0x00007f73e07e3673  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1518)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)

  0x00007f73e07e3670: mov    %r8,%rbx           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1518)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)

  0x00007f73e07e3673: mov    0x88(%rsp),%rdi
  0x00007f73e07e367b: movabs $0x7f73d35414f8,%rdx  ;   {metadata(method data for {method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07e3685: addq   $0x1,0x150(%rdx)
  0x00007f73e07e368d: mov    %rdi,%rsi
  0x00007f73e07e3690: mov    $0x0,%edx
  0x00007f73e07e3695: mov    %rax,%rcx
  0x00007f73e07e3698: mov    $0x0,%r8d
  0x00007f73e07e369e: mov    %rbx,%r9
  0x00007f73e07e36a1: mov    %rax,0x90(%rsp)
  0x00007f73e07e36a9: lea    (%rdx,%r9,1),%rdi
  0x00007f73e07e36ad: cmp    0xc(%rsi),%edi
  0x00007f73e07e36b0: ja     0x00007f73e07e37bd
  0x00007f73e07e36b6: lea    (%r8,%r9,1),%rdi
  0x00007f73e07e36ba: cmp    0xc(%rcx),%edi
  0x00007f73e07e36bd: ja     0x00007f73e07e37bd
  0x00007f73e07e36c3: test   %r9d,%r9d
  0x00007f73e07e36c6: jl     0x00007f73e07e37bd
  0x00007f73e07e36cc: movslq %edx,%rdx
  0x00007f73e07e36cf: movslq %r8d,%r8
  0x00007f73e07e36d2: lea    0x10(%rsi,%rdx,1),%rdi
  0x00007f73e07e36d7: lea    0x10(%rcx,%r8,1),%rsi
  0x00007f73e07e36dc: mov    %r9,%rdx
  0x00007f73e07e36df: test   $0xf,%esp
  0x00007f73e07e36e5: je     0x00007f73e07e36fd
  0x00007f73e07e36eb: sub    $0x8,%rsp
  0x00007f73e07e36ef: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x00007f73e07e36f4: add    $0x8,%rsp
  0x00007f73e07e36f8: jmpq   0x00007f73e07e3702
  0x00007f73e07e36fd: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ;   {runtime_call StubRoutines (2)}
  0x00007f73e07e3702: mov    0x90(%rsp),%rax
  0x00007f73e07e370a: mov    0x78(%rsp),%rsi
  0x00007f73e07e370f: movsbl 0x30(%r15),%edi
  0x00007f73e07e3714: cmp    $0x0,%edi
  0x00007f73e07e3717: jne    0x00007f73e07e37c9
  0x00007f73e07e371d: mov    %rax,%r10
  0x00007f73e07e3720: mov    %r10d,0x14(%rsi)
  0x00007f73e07e3724: mov    %rsi,%rdi
  0x00007f73e07e3727: xor    %rax,%rdi
  0x00007f73e07e372a: shr    $0x14,%rdi
  0x00007f73e07e372e: cmp    $0x0,%rdi
  0x00007f73e07e3732: jne    0x00007f73e07e37e4  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35 (line 172)

  0x00007f73e07e3738: add    $0xa0,%rsp
  0x00007f73e07e373f: pop    %rbp
  0x00007f73e07e3740: mov    0x108(%r15),%r10
  0x00007f73e07e3747: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e374a: retq   
  0x00007f73e07e374b: movabs $0x8003842f8,%r10  ;   {metadata({method} {0x00000008003842f8} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07e3755: mov    %r10,0x8(%rsp)
  0x00007f73e07e375a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e3762: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [120]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 170)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e3767: jmpq   0x00007f73e07e347c
  0x00007f73e07e376c: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [120]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4 (line 170)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e3771: movabs $0x800330f08,%r10  ;   {metadata({method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07e377b: mov    %r10,0x8(%rsp)
  0x00007f73e07e3780: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e3788: callq  0x00007f73e0334d80  ; ImmutableOopMap{[136]=Oop rsi=Oop [120]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e378d: jmpq   0x00007f73e07e3545
  0x00007f73e07e3792: callq  0x00007f73e0331680  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x00007f73e07e3797: jmpq   0x00007f73e07e35e1
  0x00007f73e07e379c: movabs $0x80032c750,%r10  ;   {metadata({method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07e37a6: mov    %r10,0x8(%rsp)
  0x00007f73e07e37ab: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e37b3: callq  0x00007f73e0334d80  ; ImmutableOopMap{[136]=Oop [120]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1518)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e37b8: jmpq   0x00007f73e07e361b
  0x00007f73e07e37bd: xchg   %ax,%ax
  0x00007f73e07e37bf: callq  0x00007f73e0269600  ; ImmutableOopMap{[120]=Oop [144]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32 (line 172)
                                                ;   {static_call}
  0x00007f73e07e37c4: jmpq   0x00007f73e07e3702
  0x00007f73e07e37c9: mov    0x14(%rsi),%edi
  0x00007f73e07e37cc: cmp    $0x0,%rdi
  0x00007f73e07e37d0: je     0x00007f73e07e371d
  0x00007f73e07e37d6: mov    %rdi,(%rsp)
  0x00007f73e07e37da: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07e37df: jmpq   0x00007f73e07e371d
  0x00007f73e07e37e4: cmp    $0x0,%rax
  0x00007f73e07e37e8: je     0x00007f73e07e3738
  0x00007f73e07e37ee: mov    %rsi,(%rsp)
  0x00007f73e07e37f2: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07e37f7: jmpq   0x00007f73e07e3738
  0x00007f73e07e37fc: nop
  0x00007f73e07e37fd: nop
  0x00007f73e07e37fe: mov    0x428(%r15),%rax
  0x00007f73e07e3805: movabs $0x0,%r10
  0x00007f73e07e380f: mov    %r10,0x428(%r15)
  0x00007f73e07e3816: movabs $0x0,%r10
  0x00007f73e07e3820: mov    %r10,0x430(%r15)
  0x00007f73e07e3827: add    $0xa0,%rsp
  0x00007f73e07e382e: pop    %rbp
  0x00007f73e07e382f: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e3834: hlt    
  0x00007f73e07e3835: hlt    
  0x00007f73e07e3836: hlt    
  0x00007f73e07e3837: hlt    
  0x00007f73e07e3838: hlt    
  0x00007f73e07e3839: hlt    
  0x00007f73e07e383a: hlt    
  0x00007f73e07e383b: hlt    
  0x00007f73e07e383c: hlt    
  0x00007f73e07e383d: hlt    
  0x00007f73e07e383e: hlt    
  0x00007f73e07e383f: hlt    
[Stub Code]
  0x00007f73e07e3840: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e3845: movabs $0x800383bc0,%rbx  ;   {static_stub}
  0x00007f73e07e384f: jmpq   0x00007f73e0270163  ;   {runtime_call I2C/C2I adapters}
  0x00007f73e07e3854: nop
  0x00007f73e07e3855: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e385f: jmpq   0x00007f73e07e385f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e3864: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e3869: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e3873: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e3877: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e387c: hlt    
[Deopt Handler Code]
  0x00007f73e07e387d: movabs $0x7f73e07e387d,%r10  ;   {section_word}
  0x00007f73e07e3887: push   %r10
  0x00007f73e07e3889: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e388e: hlt    
  0x00007f73e07e388f: hlt    

ImmutableOopMap{[120]=Oop [136]=Oop }pc offsets: 252 
ImmutableOopMap{rsi=Oop [120]=Oop }pc offsets: 871 
ImmutableOopMap{rsi=Oop [120]=Oop rdi=Oop }pc offsets: 881 
ImmutableOopMap{[136]=Oop rsi=Oop [120]=Oop }pc offsets: 909 
ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 919 
ImmutableOopMap{[136]=Oop [120]=Oop rax=Oop }pc offsets: 952 
ImmutableOopMap{[120]=Oop [144]=Oop }pc offsets: 964 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x00007f73e7d12ba0, 0x00007f73e7d12bb8]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d362c498} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d12ba0: mov    0x24(%rcx),%ebx
  0x00007f73e7d12ba3: mov    0x10(%rbx),%rbx
  0x00007f73e7d12ba7: test   %rbx,%rbx
  0x00007f73e7d12baa: je     0x00007f73e7d12bb3
  0x00007f73e7d12bb0: jmpq   *0x38(%rbx)
  0x00007f73e7d12bb3: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c2)   59741  186       4       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x00007f73e7d12710,0x00007f73e7d12988] = 632
 relocation     [0x00007f73e7d12888,0x00007f73e7d12898] = 16
 main code      [0x00007f73e7d128a0,0x00007f73e7d128e0] = 64
 stub code      [0x00007f73e7d128e0,0x00007f73e7d128f8] = 24
 metadata       [0x00007f73e7d128f8,0x00007f73e7d12900] = 8
 scopes data    [0x00007f73e7d12900,0x00007f73e7d12920] = 32
 scopes pcs     [0x00007f73e7d12920,0x00007f73e7d12980] = 96
 dependencies   [0x00007f73e7d12980,0x00007f73e7d12988] = 8
----------------------------------------------------------------------
java/lang/StringLatin1.canEncode(I)Z  [0x00007f73e7d128a0, 0x00007f73e7d128f8]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi       = int
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d128a0: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d128a7: push   %rbp
  0x00007f73e7d128a8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)

  0x00007f73e7d128ac: shr    $0x8,%esi          ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@3 (line 53)

  0x00007f73e7d128af: test   %esi,%esi
  0x00007f73e7d128b1: jne    0x00007f73e7d128c8  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)

  0x00007f73e7d128b3: mov    $0x1,%eax
  0x00007f73e7d128b8: add    $0x10,%rsp
  0x00007f73e7d128bc: pop    %rbp
  0x00007f73e7d128bd: mov    0x108(%r15),%r10
  0x00007f73e7d128c4: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d128c7: retq   
  0x00007f73e7d128c8: mov    %esi,%ebp
  0x00007f73e7d128ca: mov    $0xffffff4d,%esi
  0x00007f73e7d128cf: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d128d4: hlt    
  0x00007f73e7d128d5: hlt    
  0x00007f73e7d128d6: hlt    
  0x00007f73e7d128d7: hlt    
  0x00007f73e7d128d8: hlt    
  0x00007f73e7d128d9: hlt    
  0x00007f73e7d128da: hlt    
  0x00007f73e7d128db: hlt    
  0x00007f73e7d128dc: hlt    
  0x00007f73e7d128dd: hlt    
  0x00007f73e7d128de: hlt    
  0x00007f73e7d128df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d128e0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d128e5: callq  0x00007f73e7d128ea
  0x00007f73e7d128ea: subq   $0x5,(%rsp)
  0x00007f73e7d128ef: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d128f4: hlt    
  0x00007f73e7d128f5: hlt    
  0x00007f73e7d128f6: hlt    
  0x00007f73e7d128f7: hlt    

ImmutableOopMap{}pc offsets: 52 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x00007f73e7d12da0, 0x00007f73e7d12dc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d362fff0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d12da0: cmp    (%rsi),%rax
  0x00007f73e7d12da3: mov    0x24(%rcx),%ebx
  0x00007f73e7d12da6: mov    0x10(%rbx),%rbx
  0x00007f73e7d12daa: test   %rbx,%rbx
  0x00007f73e7d12dad: je     0x00007f73e7d12db6
  0x00007f73e7d12db3: jmpq   *0x38(%rbx)
  0x00007f73e7d12db6: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d12dbb: hlt    
  0x00007f73e7d12dbc: hlt    
  0x00007f73e7d12dbd: hlt    
  0x00007f73e7d12dbe: hlt    
  0x00007f73e7d12dbf: hlt    
Compiled method (c1)   60126  110       3       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x00007f73e07e3b90,0x00007f73e07e4040] = 1200
 relocation     [0x00007f73e07e3d08,0x00007f73e07e3d48] = 64
 main code      [0x00007f73e07e3d60,0x00007f73e07e3f00] = 416
 stub code      [0x00007f73e07e3f00,0x00007f73e07e3f40] = 64
 metadata       [0x00007f73e07e3f40,0x00007f73e07e3f48] = 8
 scopes data    [0x00007f73e07e3f48,0x00007f73e07e3f88] = 64
 scopes pcs     [0x00007f73e07e3f88,0x00007f73e07e4038] = 176
 dependencies   [0x00007f73e07e4038,0x00007f73e07e4040] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x00007f73e07e3d60, 0x00007f73e07e3f40]  480 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000800352088} 're# JMH version: 1.33qu
ir# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9-Ubuntu-0ubuntu2.18.04eN
onNul# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/javal'
 '# VM options: -XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly(L
java/l# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)an
g/# Warmup: 2 iterations, 10 s eachOb
je# Measurement: 1 iterations, 10 s eachct
;)# Timeout: 10 min per iterationLj
av# Threads: 1 threada/, will synchronize iterationsla
ng# Benchmark mode: Throughput, ops/time/O
bj# Benchmark: com.example.benchmark_bytecode.BenchMark.integerValueOfec
t;
' in 'java/util/Objects'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07e3d60: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e3d67: push   %rbp
  0x00007f73e07e3d68: sub    $0x30,%rsp
  0x00007f73e07e3d6c: movabs $0x7f73d3513348,%rax  ;   {metadata(method data for {method} {0x0000000800352088} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007f73e07e3d76: mov    0x104(%rax),%edx
  0x00007f73e07e3d7c: add    $0x8,%edx
  0x00007f73e07e3d7f: mov    %edx,0x104(%rax)
  0x00007f73e07e3d85: and    $0x1ff8,%edx
  0x00007f73e07e3d8b: cmp    $0x0,%edx
  0x00007f73e07e3d8e: je     0x00007f73e07e3e76  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0 (line 220)

  0x00007f73e07e3d94: cmp    $0x0,%rsi
  0x00007f73e07e3d98: movabs $0x7f73d3513348,%rax  ;   {metadata(method data for {method} {0x0000000800352088} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007f73e07e3da2: movabs $0x150,%rdx
  0x00007f73e07e3dac: je     0x00007f73e07e3dbc
  0x00007f73e07e3db2: movabs $0x140,%rdx
  0x00007f73e07e3dbc: mov    (%rax,%rdx,1),%rdi
  0x00007f73e07e3dc0: lea    0x1(%rdi),%rdi
  0x00007f73e07e3dc4: mov    %rdi,(%rax,%rdx,1)
  0x00007f73e07e3dc8: je     0x00007f73e07e3de1  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1 (line 220)

  0x00007f73e07e3dce: mov    %rsi,%rax
  0x00007f73e07e3dd1: add    $0x30,%rsp
  0x00007f73e07e3dd5: pop    %rbp
  0x00007f73e07e3dd6: mov    0x108(%r15),%r10
  0x00007f73e07e3ddd: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e3de0: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@13 (line 222)

  0x00007f73e07e3de1: nopl   0x0(%rax)
  0x00007f73e07e3de8: jmpq   0x00007f73e07e3ea6  ;   {no_reloc}
  0x00007f73e07e3ded: add    %al,(%rax)
  0x00007f73e07e3def: add    %al,(%rax)
  0x00007f73e07e3df1: add    %cl,-0x75(%rcx)
  0x00007f73e07e3df4: xchg   %ebx,(%rax)
  0x00007f73e07e3df6: add    %eax,(%rax)
  0x00007f73e07e3df8: add    %cl,-0x73(%rax)
  0x00007f73e07e3dfb: js     0x00007f73e07e3e25
  0x00007f73e07e3dfd: cmp    0x128(%r15),%rdi
  0x00007f73e07e3e04: ja     0x00007f73e07e3eb0
  0x00007f73e07e3e0a: mov    %rdi,0x118(%r15)
  0x00007f73e07e3e11: mov    0xb8(%rdx),%rcx
  0x00007f73e07e3e18: mov    %rcx,(%rax)
  0x00007f73e07e3e1b: mov    %rdx,%rcx
  0x00007f73e07e3e1e: movabs $0x800000000,%r12
  0x00007f73e07e3e28: sub    %r12,%rcx
  0x00007f73e07e3e2b: shr    $0x3,%rcx
  0x00007f73e07e3e2f: xor    %r12,%r12
  0x00007f73e07e3e32: mov    %ecx,0x8(%rax)
  0x00007f73e07e3e35: xor    %rcx,%rcx
  0x00007f73e07e3e38: mov    %ecx,0xc(%rax)
  0x00007f73e07e3e3b: xor    %rcx,%rcx
  0x00007f73e07e3e3e: mov    %rcx,0x10(%rax)
  0x00007f73e07e3e42: mov    %rcx,0x18(%rax)
  0x00007f73e07e3e46: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)

  0x00007f73e07e3e4a: mov    %rax,%rsi
  0x00007f73e07e3e4d: movabs $0x7f73d3513348,%rdi  ;   {metadata(method data for {method} {0x0000000800352088} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007f73e07e3e57: addq   $0x1,0x160(%rdi)
  0x00007f73e07e3e5f: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)

  0x00007f73e07e3e62: mov    %rax,0x20(%rsp)
  0x00007f73e07e3e67: callq  0x00007f73e0269100  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8 (line 221)
                                                ;   {optimized virtual_call}
  0x00007f73e07e3e6c: mov    0x20(%rsp),%rax
  0x00007f73e07e3e71: jmpq   0x00007f73e07e3ee5
  0x00007f73e07e3e76: movabs $0x800352088,%r10  ;   {metadata({method} {0x0000000800352088} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00007f73e07e3e80: mov    %r10,0x8(%rsp)
  0x00007f73e07e3e85: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e3e8d: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1 (line 220)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e3e92: jmpq   0x00007f73e07e3d94
  0x00007f73e07e3e97: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f73e07e3ea1: mov    $0xa050f00,%eax
  0x00007f73e07e3ea6: callq  0x00007f73e0333e00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07e3eab: jmpq   0x00007f73e07e3de8
  0x00007f73e07e3eb0: mov    %rdx,%rdx
  0x00007f73e07e3eb3: callq  0x00007f73e0331080  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4 (line 221)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07e3eb8: jmp    0x00007f73e07e3e4a
  0x00007f73e07e3eba: nop
  0x00007f73e07e3ebb: nop
  0x00007f73e07e3ebc: mov    0x428(%r15),%rax
  0x00007f73e07e3ec3: movabs $0x0,%r10
  0x00007f73e07e3ecd: mov    %r10,0x428(%r15)
  0x00007f73e07e3ed4: movabs $0x0,%r10
  0x00007f73e07e3ede: mov    %r10,0x430(%r15)
  0x00007f73e07e3ee5: add    $0x30,%rsp
  0x00007f73e07e3ee9: pop    %rbp
  0x00007f73e07e3eea: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e3eef: hlt    
  0x00007f73e07e3ef0: hlt    
  0x00007f73e07e3ef1: hlt    
  0x00007f73e07e3ef2: hlt    
  0x00007f73e07e3ef3: hlt    
  0x00007f73e07e3ef4: hlt    
  0x00007f73e07e3ef5: hlt    
  0x00007f73e07e3ef6: hlt    
  0x00007f73e07e3ef7: hlt    
  0x00007f73e07e3ef8: hlt    
  0x00007f73e07e3ef9: hlt    
  0x00007f73e07e3efa: hlt    
  0x00007f73e07e3efb: hlt    
  0x00007f73e07e3efc: hlt    
  0x00007f73e07e3efd: hlt    
  0x00007f73e07e3efe: hlt    
  0x00007f73e07e3eff: hlt    
[Stub Code]
  0x00007f73e07e3f00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e3f05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e3f0f: jmpq   0x00007f73e07e3f0f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e3f14: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e3f19: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e3f23: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e3f27: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e3f2c: hlt    
[Deopt Handler Code]
  0x00007f73e07e3f2d: movabs $0x7f73e07e3f2d,%r10  ;   {section_word}
  0x00007f73e07e3f37: push   %r10
  0x00007f73e07e3f39: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e3f3e: hlt    
  0x00007f73e07e3f3f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 268 
ImmutableOopMap{rsi=Oop }pc offsets: 306 
ImmutableOopMap{}pc offsets: 331 344 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(IILjava/lang/invoke/MemberName;)I  [0x00007f73e7d13220, 0x00007f73e7d13238]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3636658} 'linkToStatic' '(IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d13220: mov    0x24(%rcx),%ebx
  0x00007f73e7d13223: mov    0x10(%rbx),%rbx
  0x00007f73e7d13227: test   %rbx,%rbx
  0x00007f73e7d1322a: je     0x00007f73e7d13233
  0x00007f73e7d13230: jmpq   *0x38(%rbx)
  0x00007f73e7d13233: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c2)   60866  197       4       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x00007f73e7d12e10,0x00007f73e7d13040] = 560
 relocation     [0x00007f73e7d12f88,0x00007f73e7d12f90] = 8
 main code      [0x00007f73e7d12fa0,0x00007f73e7d12fe0] = 64
 stub code      [0x00007f73e7d12fe0,0x00007f73e7d12ff8] = 24
 metadata       [0x00007f73e7d12ff8,0x00007f73e7d13000] = 8
 scopes data    [0x00007f73e7d13000,0x00007f73e7d13008] = 8
 scopes pcs     [0x00007f73e7d13008,0x00007f73e7d13038] = 48
 dependencies   [0x00007f73e7d13038,0x00007f73e7d13040] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x00007f73e7d12fa0, 0x00007f73e7d12ff8]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rsi:rsi   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d12fa0: sub    $0x18,%rsp
  0x00007f73e7d12fa7: mov    %rbp,0x10(%rsp)
  0x00007f73e7d12fac: movslq %edx,%r10
  0x00007f73e7d12faf: mov    0x10(%rsi,%r10,4),%r10d
  0x00007f73e7d12fb4: mov    %r10,%rax          ;*invokevirtual getObjectAcquire {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)

  0x00007f73e7d12fb7: add    $0x10,%rsp
  0x00007f73e7d12fbb: pop    %rbp
  0x00007f73e7d12fbc: mov    0x108(%r15),%r10
  0x00007f73e7d12fc3: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d12fc6: retq   
  0x00007f73e7d12fc7: hlt    
  0x00007f73e7d12fc8: hlt    
  0x00007f73e7d12fc9: hlt    
  0x00007f73e7d12fca: hlt    
  0x00007f73e7d12fcb: hlt    
  0x00007f73e7d12fcc: hlt    
  0x00007f73e7d12fcd: hlt    
  0x00007f73e7d12fce: hlt    
  0x00007f73e7d12fcf: hlt    
  0x00007f73e7d12fd0: hlt    
  0x00007f73e7d12fd1: hlt    
  0x00007f73e7d12fd2: hlt    
  0x00007f73e7d12fd3: hlt    
  0x00007f73e7d12fd4: hlt    
  0x00007f73e7d12fd5: hlt    
  0x00007f73e7d12fd6: hlt    
  0x00007f73e7d12fd7: hlt    
  0x00007f73e7d12fd8: hlt    
  0x00007f73e7d12fd9: hlt    
  0x00007f73e7d12fda: hlt    
  0x00007f73e7d12fdb: hlt    
  0x00007f73e7d12fdc: hlt    
  0x00007f73e7d12fdd: hlt    
  0x00007f73e7d12fde: hlt    
  0x00007f73e7d12fdf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d12fe0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d12fe5: callq  0x00007f73e7d12fea
  0x00007f73e7d12fea: subq   $0x5,(%rsp)
  0x00007f73e7d12fef: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d12ff4: hlt    
  0x00007f73e7d12ff5: hlt    
  0x00007f73e7d12ff6: hlt    
  0x00007f73e7d12ff7: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(ILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d13420, 0x00007f73e7d13438]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3636958} 'linkToStatic' '(ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d13420: mov    0x24(%rdx),%ebx
  0x00007f73e7d13423: mov    0x10(%rbx),%rbx
  0x00007f73e7d13427: test   %rbx,%rbx
  0x00007f73e7d1342a: je     0x00007f73e7d13433
  0x00007f73e7d13430: jmpq   *0x38(%rbx)
  0x00007f73e7d13433: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)   61272  196       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
 total in heap  [0x00007f73e07e4090,0x00007f73e07e5748] = 5816
 relocation     [0x00007f73e07e4208,0x00007f73e07e42e8] = 224
 main code      [0x00007f73e07e4300,0x00007f73e07e4fe0] = 3296
 stub code      [0x00007f73e07e4fe0,0x00007f73e07e5050] = 112
 oops           [0x00007f73e07e5050,0x00007f73e07e5058] = 8
 metadata       [0x00007f73e07e5058,0x00007f73e07e5078] = 32
 scopes data    [0x00007f73e07e5078,0x00007f73e07e52d8] = 608
 scopes pcs     [0x00007f73e07e52d8,0x00007f73e07e5708] = 1072
 dependencies   [0x00007f73e07e5708,0x00007f73e07e5710] = 8
 nul chk table  [0x00007f73e07e5710,0x00007f73e07e5748] = 56
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x00007f73e07e4300, 0x00007f73e07e5050]  3408 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0xc0]  (sp of caller)
  0x00007f73e07e4300: mov    0x8(%rsi),%r10d
  0x00007f73e07e4304: shl    $0x3,%r10
  0x00007f73e07e4308: movabs $0x800000000,%r12
  0x00007f73e07e4312: add    %r12,%r10
  0x00007f73e07e4315: xor    %r12,%r12
  0x00007f73e07e4318: cmp    %rax,%r10
  0x00007f73e07e431b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e4321: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e432c: data16 data16 xchg %ax,%ax
  0x00007f73e07e4330: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e433b: data16 data16 xchg %ax,%ax
  0x00007f73e07e433f: nop
[Verified Entry Point]
  0x00007f73e07e4340: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e4347: push   %rbp
  0x00007f73e07e4348: sub    $0xb0,%rsp
  0x00007f73e07e434f: mov    %rdx,0x88(%rsp)
  0x00007f73e07e4357: movabs $0x7f73d354c770,%rdi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4361: mov    0x104(%rdi),%ebx
  0x00007f73e07e4367: add    $0x8,%ebx
  0x00007f73e07e436a: mov    %ebx,0x104(%rdi)
  0x00007f73e07e4370: and    $0x1ff8,%ebx
  0x00007f73e07e4376: cmp    $0x0,%ebx
  0x00007f73e07e4379: je     0x00007f73e07e4e6a  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@0 (line 936)

  0x00007f73e07e437f: mov    %rsi,0x80(%rsp)
  0x00007f73e07e4387: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00007f73e07e4e8b
  0x00007f73e07e438a: mov    %rdx,%rdi
  0x00007f73e07e438d: movabs $0x7f73d354c770,%rbx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4397: mov    0x8(%rdi),%edi
  0x00007f73e07e439a: shl    $0x3,%rdi
  0x00007f73e07e439e: movabs $0x800000000,%r12
  0x00007f73e07e43a8: add    %r12,%rdi
  0x00007f73e07e43ab: xor    %r12,%r12
  0x00007f73e07e43ae: cmp    0x150(%rbx),%rdi
  0x00007f73e07e43b5: jne    0x00007f73e07e43c4
  0x00007f73e07e43b7: addq   $0x1,0x158(%rbx)
  0x00007f73e07e43bf: jmpq   0x00007f73e07e442a
  0x00007f73e07e43c4: cmp    0x160(%rbx),%rdi
  0x00007f73e07e43cb: jne    0x00007f73e07e43da
  0x00007f73e07e43cd: addq   $0x1,0x168(%rbx)
  0x00007f73e07e43d5: jmpq   0x00007f73e07e442a
  0x00007f73e07e43da: cmpq   $0x0,0x150(%rbx)
  0x00007f73e07e43e5: jne    0x00007f73e07e43fe
  0x00007f73e07e43e7: mov    %rdi,0x150(%rbx)
  0x00007f73e07e43ee: movq   $0x1,0x158(%rbx)
  0x00007f73e07e43f9: jmpq   0x00007f73e07e442a
  0x00007f73e07e43fe: cmpq   $0x0,0x160(%rbx)
  0x00007f73e07e4409: jne    0x00007f73e07e4422
  0x00007f73e07e440b: mov    %rdi,0x160(%rbx)
  0x00007f73e07e4412: movq   $0x1,0x168(%rbx)
  0x00007f73e07e441d: jmpq   0x00007f73e07e442a
  0x00007f73e07e4422: addq   $0x1,0x140(%rbx)
  0x00007f73e07e442a: mov    %rdx,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)

  0x00007f73e07e442d: movabs $0xffffffffffffffff,%rax
  0x00007f73e07e4437: callq  0x00007f73e027f820  ; ImmutableOopMap{[128]=Oop [136]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {virtual_call}
  0x00007f73e07e443c: movabs $0x7f73d354c770,%rcx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4446: addq   $0x1,0x178(%rcx)
  0x00007f73e07e444e: movabs $0x7f73d350d6f0,%rcx  ;   {metadata(method data for {method} {0x000000080034f198} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4458: mov    0x104(%rcx),%edx
  0x00007f73e07e445e: add    $0x8,%edx
  0x00007f73e07e4461: mov    %edx,0x104(%rcx)
  0x00007f73e07e4467: and    $0x7ffff8,%edx
  0x00007f73e07e446d: cmp    $0x0,%edx
  0x00007f73e07e4470: je     0x00007f73e07e4e90
  0x00007f73e07e4476: mov    %rax,%rcx
  0x00007f73e07e4479: shr    $0x10,%ecx
  0x00007f73e07e447c: xor    %rax,%rcx
  0x00007f73e07e447f: and    $0x7fffffff,%ecx
  0x00007f73e07e4485: mov    %ecx,0x98(%rsp)
  0x00007f73e07e448c: mov    0x80(%rsp),%rsi
  0x00007f73e07e4494: mov    0x28(%rsi),%edx    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@10 (line 937)

  0x00007f73e07e4497: cmp    $0x0,%rdx
  0x00007f73e07e449b: movabs $0x7f73d354c770,%rsi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e44a5: movabs $0x188,%rdi
  0x00007f73e07e44af: je     0x00007f73e07e44bf
  0x00007f73e07e44b5: movabs $0x198,%rdi
  0x00007f73e07e44bf: mov    (%rsi,%rdi,1),%rbx
  0x00007f73e07e44c3: lea    0x1(%rbx),%rbx
  0x00007f73e07e44c7: mov    %rbx,(%rsi,%rdi,1)
  0x00007f73e07e44cb: je     0x00007f73e07e4e21  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@15 (line 937)

  0x00007f73e07e44d1: mov    0xc(%rdx),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ; implicit exception: dispatches to 0x00007f73e07e4eb1
  0x00007f73e07e44d4: cmp    $0x0,%esi
  0x00007f73e07e44d7: movabs $0x7f73d354c770,%rdi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e44e1: movabs $0x1a8,%rbx
  0x00007f73e07e44eb: jle    0x00007f73e07e44fb
  0x00007f73e07e44f1: movabs $0x1b8,%rbx
  0x00007f73e07e44fb: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07e44ff: lea    0x1(%rax),%rax
  0x00007f73e07e4503: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07e4507: jle    0x00007f73e07e4e21  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@23 (line 937)

  0x00007f73e07e450d: movabs $0x7f73d354c770,%rdi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4517: addq   $0x1,0x1c8(%rdi)
  0x00007f73e07e451f: dec    %esi
  0x00007f73e07e4521: and    %rcx,%rsi
  0x00007f73e07e4524: movabs $0x7f73d3505990,%rdi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e452e: mov    0x104(%rdi),%ebx
  0x00007f73e07e4534: add    $0x8,%ebx
  0x00007f73e07e4537: mov    %ebx,0x104(%rdi)
  0x00007f73e07e453d: and    $0x7ffff8,%ebx
  0x00007f73e07e4543: cmp    $0x0,%ebx
  0x00007f73e07e4546: je     0x00007f73e07e4eb6
  0x00007f73e07e454c: movabs $0x7f73d3505990,%rdi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4556: lea    0x178(%rdi),%rdi
  0x00007f73e07e455d: mov    %rdx,%rbx
  0x00007f73e07e4560: mov    0x8(%rbx),%ebx
  0x00007f73e07e4563: shl    $0x3,%rbx
  0x00007f73e07e4567: movabs $0x800000000,%r12
  0x00007f73e07e4571: add    %r12,%rbx
  0x00007f73e07e4574: xor    %r12,%r12
  0x00007f73e07e4577: xor    0x8(%rdi),%rbx
  0x00007f73e07e457b: test   $0xfffffffffffffffc,%rbx
  0x00007f73e07e4582: je     0x00007f73e07e4595
  0x00007f73e07e4584: test   $0x2,%rbx
  0x00007f73e07e458b: jne    0x00007f73e07e4595
  0x00007f73e07e458d: orq    $0x2,0x8(%rdi)
  0x00007f73e07e4595: movabs $0xe2d02100,%rdi   ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000000e2d02100})}
  0x00007f73e07e459f: movabs $0x7f73d3505990,%rbx  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e45a9: addq   $0x1,0x140(%rbx)
  0x00007f73e07e45b1: movslq %esi,%rsi
  0x00007f73e07e45b4: mov    %rcx,%rdi
  0x00007f73e07e45b7: mov    $0x2,%ecx
  0x00007f73e07e45bc: shl    %cl,%rsi
  0x00007f73e07e45bf: movabs $0x10,%r10
  0x00007f73e07e45c9: add    %r10,%rsi
  0x00007f73e07e45cc: movabs $0x7f73d3505ba0,%rbx  ;   {metadata(method data for {method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07e45d6: mov    0x104(%rbx),%eax
  0x00007f73e07e45dc: add    $0x8,%eax
  0x00007f73e07e45df: mov    %eax,0x104(%rbx)
  0x00007f73e07e45e5: and    $0x7ffff8,%eax
  0x00007f73e07e45eb: cmp    $0x0,%eax
  0x00007f73e07e45ee: je     0x00007f73e07e4ed7
  0x00007f73e07e45f4: mov    (%rdx,%rsi,1),%edx
  0x00007f73e07e45f7: movsbl 0x30(%r15),%esi
  0x00007f73e07e45fc: cmp    $0x0,%esi
  0x00007f73e07e45ff: jne    0x00007f73e07e4ef8
  0x00007f73e07e4605: cmp    $0x0,%rdx
  0x00007f73e07e4609: jne    0x00007f73e07e4621
  0x00007f73e07e460b: movabs $0x7f73d3505990,%rsi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4615: orb    $0x1,0x189(%rsi)
  0x00007f73e07e461c: jmpq   0x00007f73e07e4702
  0x00007f73e07e4621: movabs $0x80029e7d8,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00007f73e07e462b: mov    0x8(%rdx),%esi
  0x00007f73e07e462e: shl    $0x3,%rsi
  0x00007f73e07e4632: movabs $0x800000000,%r12
  0x00007f73e07e463c: add    %r12,%rsi
  0x00007f73e07e463f: xor    %r12,%r12
  0x00007f73e07e4642: cmp    0x38(%rsi),%rax
  0x00007f73e07e4646: jne    0x00007f73e07e46e6
  0x00007f73e07e464c: movabs $0x7f73d3505990,%rsi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4656: mov    0x8(%rdx),%eax
  0x00007f73e07e4659: shl    $0x3,%rax
  0x00007f73e07e465d: movabs $0x800000000,%r12
  0x00007f73e07e4667: add    %r12,%rax
  0x00007f73e07e466a: xor    %r12,%r12
  0x00007f73e07e466d: cmp    0x1a0(%rsi),%rax
  0x00007f73e07e4674: jne    0x00007f73e07e4683
  0x00007f73e07e4676: addq   $0x1,0x1a8(%rsi)
  0x00007f73e07e467e: jmpq   0x00007f73e07e4702
  0x00007f73e07e4683: cmp    0x1b0(%rsi),%rax
  0x00007f73e07e468a: jne    0x00007f73e07e4699
  0x00007f73e07e468c: addq   $0x1,0x1b8(%rsi)
  0x00007f73e07e4694: jmpq   0x00007f73e07e4702
  0x00007f73e07e4699: cmpq   $0x0,0x1a0(%rsi)
  0x00007f73e07e46a4: jne    0x00007f73e07e46bd
  0x00007f73e07e46a6: mov    %rax,0x1a0(%rsi)
  0x00007f73e07e46ad: movq   $0x1,0x1a8(%rsi)
  0x00007f73e07e46b8: jmpq   0x00007f73e07e4702
  0x00007f73e07e46bd: cmpq   $0x0,0x1b0(%rsi)
  0x00007f73e07e46c8: jne    0x00007f73e07e46e1
  0x00007f73e07e46ca: mov    %rax,0x1b0(%rsi)
  0x00007f73e07e46d1: movq   $0x1,0x1b8(%rsi)
  0x00007f73e07e46dc: jmpq   0x00007f73e07e4702
  0x00007f73e07e46e1: jmpq   0x00007f73e07e4702
  0x00007f73e07e46e6: movabs $0x7f73d3505990,%rsi  ;   {metadata(method data for {method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e46f0: subq   $0x1,0x190(%rsi)
  0x00007f73e07e46f8: jmpq   0x00007f73e07e4f10
  0x00007f73e07e46fd: jmpq   0x00007f73e07e4702
  0x00007f73e07e4702: mov    %rdx,%rbx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)

  0x00007f73e07e4705: cmp    $0x0,%rbx
  0x00007f73e07e4709: movabs $0x7f73d354c770,%rdx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4713: movabs $0x1d8,%rsi
  0x00007f73e07e471d: je     0x00007f73e07e472d
  0x00007f73e07e4723: movabs $0x1e8,%rsi
  0x00007f73e07e472d: mov    (%rdx,%rsi,1),%rax
  0x00007f73e07e4731: lea    0x1(%rax),%rax
  0x00007f73e07e4735: mov    %rax,(%rdx,%rsi,1)
  0x00007f73e07e4739: je     0x00007f73e07e4e21  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@39 (line 938)

  0x00007f73e07e473f: mov    0xc(%rbx),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ; implicit exception: dispatches to 0x00007f73e07e4f19
  0x00007f73e07e4742: cmp    %edi,%esi
  0x00007f73e07e4744: movabs $0x7f73d354c770,%rdx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e474e: movabs $0x1f8,%rax
  0x00007f73e07e4758: jne    0x00007f73e07e4768
  0x00007f73e07e475e: movabs $0x208,%rax
  0x00007f73e07e4768: mov    (%rdx,%rax,1),%rcx
  0x00007f73e07e476c: lea    0x1(%rcx),%rcx
  0x00007f73e07e4770: mov    %rcx,(%rdx,%rax,1)
  0x00007f73e07e4774: jne    0x00007f73e07e4919  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@51 (line 939)

  0x00007f73e07e477a: mov    0x88(%rsp),%rdx
  0x00007f73e07e4782: mov    0x10(%rbx),%esi    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@55 (line 940)

  0x00007f73e07e4785: cmp    %rdx,%rsi
  0x00007f73e07e4788: movabs $0x7f73d354c770,%rax  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4792: movabs $0x218,%rcx
  0x00007f73e07e479c: je     0x00007f73e07e47ac
  0x00007f73e07e47a2: movabs $0x228,%rcx
  0x00007f73e07e47ac: mov    (%rax,%rcx,1),%r8
  0x00007f73e07e47b0: lea    0x1(%r8),%r8
  0x00007f73e07e47b4: mov    %r8,(%rax,%rcx,1)
  0x00007f73e07e47b8: je     0x00007f73e07e4e54  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@62 (line 940)

  0x00007f73e07e47be: cmp    $0x0,%rsi
  0x00007f73e07e47c2: movabs $0x7f73d354c770,%rax  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e47cc: movabs $0x248,%rcx
  0x00007f73e07e47d6: jne    0x00007f73e07e47e6
  0x00007f73e07e47dc: movabs $0x238,%rcx
  0x00007f73e07e47e6: mov    (%rax,%rcx,1),%r8
  0x00007f73e07e47ea: lea    0x1(%r8),%r8
  0x00007f73e07e47ee: mov    %r8,(%rax,%rcx,1)
  0x00007f73e07e47f2: jne    0x00007f73e07e4800  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@67 (line 940)

  0x00007f73e07e47f8: mov    %rdi,%rcx
  0x00007f73e07e47fb: jmpq   0x00007f73e07e4978  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007f73e07e4800: mov    %rbx,0x90(%rsp)
  0x00007f73e07e4808: mov    %rdx,%rdi
  0x00007f73e07e480b: movabs $0x7f73d354c770,%rax  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4815: mov    0x8(%rdi),%edi
  0x00007f73e07e4818: shl    $0x3,%rdi
  0x00007f73e07e481c: movabs $0x800000000,%r12
  0x00007f73e07e4826: add    %r12,%rdi
  0x00007f73e07e4829: xor    %r12,%r12
  0x00007f73e07e482c: cmp    0x268(%rax),%rdi
  0x00007f73e07e4833: jne    0x00007f73e07e4842
  0x00007f73e07e4835: addq   $0x1,0x270(%rax)
  0x00007f73e07e483d: jmpq   0x00007f73e07e48a8
  0x00007f73e07e4842: cmp    0x278(%rax),%rdi
  0x00007f73e07e4849: jne    0x00007f73e07e4858
  0x00007f73e07e484b: addq   $0x1,0x280(%rax)
  0x00007f73e07e4853: jmpq   0x00007f73e07e48a8
  0x00007f73e07e4858: cmpq   $0x0,0x268(%rax)
  0x00007f73e07e4863: jne    0x00007f73e07e487c
  0x00007f73e07e4865: mov    %rdi,0x268(%rax)
  0x00007f73e07e486c: movq   $0x1,0x270(%rax)
  0x00007f73e07e4877: jmpq   0x00007f73e07e48a8
  0x00007f73e07e487c: cmpq   $0x0,0x278(%rax)
  0x00007f73e07e4887: jne    0x00007f73e07e48a0
  0x00007f73e07e4889: mov    %rdi,0x278(%rax)
  0x00007f73e07e4890: movq   $0x1,0x280(%rax)
  0x00007f73e07e489b: jmpq   0x00007f73e07e48a8
  0x00007f73e07e48a0: addq   $0x1,0x258(%rax)
  0x00007f73e07e48a8: mov    %rdx,%rdi
  0x00007f73e07e48ab: mov    %rsi,%rdx
  0x00007f73e07e48ae: mov    %rdi,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)

  0x00007f73e07e48b1: nopl   0x0(%rax)
  0x00007f73e07e48b5: movabs $0xffffffffffffffff,%rax
  0x00007f73e07e48bf: callq  0x00007f73e027f860  ; ImmutableOopMap{[136]=Oop [144]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73 (line 940)
                                                ;   {virtual_call}
  0x00007f73e07e48c4: cmp    $0x0,%eax
  0x00007f73e07e48c7: movabs $0x7f73d354c770,%rdx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e48d1: movabs $0x2a0,%rsi
  0x00007f73e07e48db: jne    0x00007f73e07e48eb
  0x00007f73e07e48e1: movabs $0x290,%rsi
  0x00007f73e07e48eb: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07e48ef: lea    0x1(%rdi),%rdi
  0x00007f73e07e48f3: mov    %rdi,(%rdx,%rsi,1)  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x00007f73e07e48f7: mov    0x90(%rsp),%rbx    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007f73e07e48ff: jne    0x00007f73e07e4e54  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76 (line 940)

  0x00007f73e07e4905: mov    0x98(%rsp),%ecx
  0x00007f73e07e490c: mov    0x88(%rsp),%rdx
  0x00007f73e07e4914: jmpq   0x00007f73e07e4978  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007f73e07e4919: mov    %rbx,0x90(%rsp)
  0x00007f73e07e4921: cmp    $0x0,%esi
  0x00007f73e07e4924: movabs $0x7f73d354c770,%rdx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e492e: movabs $0x2c0,%rsi
  0x00007f73e07e4938: jl     0x00007f73e07e4948
  0x00007f73e07e493e: movabs $0x2b0,%rsi
  0x00007f73e07e4948: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07e494c: lea    0x1(%rdi),%rdi
  0x00007f73e07e4950: mov    %rdi,(%rdx,%rsi,1)
  0x00007f73e07e4954: jl     0x00007f73e07e4cd0  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@86 (line 943)

  0x00007f73e07e495a: mov    0x90(%rsp),%rbx    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007f73e07e4962: mov    0x98(%rsp),%ecx
  0x00007f73e07e4969: mov    0x88(%rsp),%rdx
  0x00007f73e07e4971: nopl   0x0(%rax)
  0x00007f73e07e4978: mov    0x18(%rbx),%edi    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)
                                                ; implicit exception: dispatches to 0x00007f73e07e4f1e
  0x00007f73e07e497b: cmp    $0x0,%rdi
  0x00007f73e07e497f: movabs $0x7f73d354c770,%rsi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4989: movabs $0x340,%rbx
  0x00007f73e07e4993: je     0x00007f73e07e49a3
  0x00007f73e07e4999: movabs $0x350,%rbx
  0x00007f73e07e49a3: mov    (%rsi,%rbx,1),%rax
  0x00007f73e07e49a7: lea    0x1(%rax),%rax
  0x00007f73e07e49ab: mov    %rax,(%rsi,%rbx,1)
  0x00007f73e07e49af: je     0x00007f73e07e4e21  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@118 (line 945)

  0x00007f73e07e49b5: mov    0xc(%rdi),%esi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ; implicit exception: dispatches to 0x00007f73e07e4f23
  0x00007f73e07e49b8: cmp    %ecx,%esi
  0x00007f73e07e49ba: mov    $0x8,%ebx
  0x00007f73e07e49bf: jne    0x00007f73e07e49ca
  0x00007f73e07e49c5: mov    $0x0,%ebx
  0x00007f73e07e49ca: movabs $0x7f73d354c770,%rax  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e49d4: mov    0x108(%rax),%r8d
  0x00007f73e07e49db: add    %ebx,%r8d
  0x00007f73e07e49de: mov    %r8d,0x108(%rax)
  0x00007f73e07e49e5: cmp    $0x0,%ebx
  0x00007f73e07e49e8: jne    0x00007f73e07e49f4
  0x00007f73e07e49ee: mov    $0x8,%r8d
  0x00007f73e07e49f4: and    $0xfff8,%r8d
  0x00007f73e07e49fb: cmp    $0x0,%r8d
  0x00007f73e07e49ff: je     0x00007f73e07e4f28  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x00007f73e07e4a05: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x00007f73e07e4a0c: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e4a0f: cmp    %ecx,%esi
  0x00007f73e07e4a11: movabs $0x7f73d354c770,%rsi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4a1b: movabs $0x360,%rbx
  0x00007f73e07e4a25: jne    0x00007f73e07e4a35
  0x00007f73e07e4a2b: movabs $0x370,%rbx
  0x00007f73e07e4a35: mov    (%rsi,%rbx,1),%rax
  0x00007f73e07e4a39: lea    0x1(%rax),%rax
  0x00007f73e07e4a3d: mov    %rax,(%rsi,%rbx,1)
  0x00007f73e07e4a41: jne    0x00007f73e07e4c9f  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)

  0x00007f73e07e4a47: mov    0x10(%rdi),%esi    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@131 (line 946)

  0x00007f73e07e4a4a: cmp    %rdx,%rsi
  0x00007f73e07e4a4d: movabs $0x7f73d354c770,%rbx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4a57: movabs $0x380,%rax
  0x00007f73e07e4a61: je     0x00007f73e07e4a71
  0x00007f73e07e4a67: movabs $0x390,%rax
  0x00007f73e07e4a71: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e4a75: lea    0x1(%r8),%r8
  0x00007f73e07e4a79: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e4a7d: je     0x00007f73e07e4e3e  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@138 (line 946)

  0x00007f73e07e4a83: cmp    $0x0,%rsi
  0x00007f73e07e4a87: mov    $0x8,%ebx
  0x00007f73e07e4a8c: je     0x00007f73e07e4a97
  0x00007f73e07e4a92: mov    $0x0,%ebx
  0x00007f73e07e4a97: movabs $0x7f73d354c770,%rax  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4aa1: mov    0x108(%rax),%r8d
  0x00007f73e07e4aa8: add    %ebx,%r8d
  0x00007f73e07e4aab: mov    %r8d,0x108(%rax)
  0x00007f73e07e4ab2: cmp    $0x0,%ebx
  0x00007f73e07e4ab5: jne    0x00007f73e07e4ac1
  0x00007f73e07e4abb: mov    $0x8,%r8d
  0x00007f73e07e4ac1: and    $0xfff8,%r8d
  0x00007f73e07e4ac8: cmp    $0x0,%r8d
  0x00007f73e07e4acc: je     0x00007f73e07e4f49  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x00007f73e07e4ad2: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x00007f73e07e4ad9: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e4adc: cmp    $0x0,%rsi
  0x00007f73e07e4ae0: movabs $0x7f73d354c770,%rbx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4aea: movabs $0x3a0,%rax
  0x00007f73e07e4af4: je     0x00007f73e07e4b04
  0x00007f73e07e4afa: movabs $0x3b0,%rax
  0x00007f73e07e4b04: mov    (%rbx,%rax,1),%r8
  0x00007f73e07e4b08: lea    0x1(%r8),%r8
  0x00007f73e07e4b0c: mov    %r8,(%rbx,%rax,1)
  0x00007f73e07e4b10: mov    %rdi,0xa0(%rsp)
  0x00007f73e07e4b18: je     0x00007f73e07e4c83  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)

  0x00007f73e07e4b1e: mov    %rdx,%rbx
  0x00007f73e07e4b21: movabs $0x7f73d354c770,%rax  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4b2b: mov    0x8(%rbx),%ebx
  0x00007f73e07e4b2e: shl    $0x3,%rbx
  0x00007f73e07e4b32: movabs $0x800000000,%r12
  0x00007f73e07e4b3c: add    %r12,%rbx
  0x00007f73e07e4b3f: xor    %r12,%r12
  0x00007f73e07e4b42: cmp    0x3d0(%rax),%rbx
  0x00007f73e07e4b49: jne    0x00007f73e07e4b58
  0x00007f73e07e4b4b: addq   $0x1,0x3d8(%rax)
  0x00007f73e07e4b53: jmpq   0x00007f73e07e4bbe
  0x00007f73e07e4b58: cmp    0x3e0(%rax),%rbx
  0x00007f73e07e4b5f: jne    0x00007f73e07e4b6e
  0x00007f73e07e4b61: addq   $0x1,0x3e8(%rax)
  0x00007f73e07e4b69: jmpq   0x00007f73e07e4bbe
  0x00007f73e07e4b6e: cmpq   $0x0,0x3d0(%rax)
  0x00007f73e07e4b79: jne    0x00007f73e07e4b92
  0x00007f73e07e4b7b: mov    %rbx,0x3d0(%rax)
  0x00007f73e07e4b82: movq   $0x1,0x3d8(%rax)
  0x00007f73e07e4b8d: jmpq   0x00007f73e07e4bbe
  0x00007f73e07e4b92: cmpq   $0x0,0x3e0(%rax)
  0x00007f73e07e4b9d: jne    0x00007f73e07e4bb6
  0x00007f73e07e4b9f: mov    %rbx,0x3e0(%rax)
  0x00007f73e07e4ba6: movq   $0x1,0x3e8(%rax)
  0x00007f73e07e4bb1: jmpq   0x00007f73e07e4bbe
  0x00007f73e07e4bb6: addq   $0x1,0x3c0(%rax)
  0x00007f73e07e4bbe: mov    %rdx,%rbx
  0x00007f73e07e4bc1: mov    %rsi,%rdx
  0x00007f73e07e4bc4: mov    %rbx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)

  0x00007f73e07e4bc7: nopw   0x0(%rax,%rax,1)
  0x00007f73e07e4bcd: movabs $0xffffffffffffffff,%rax
  0x00007f73e07e4bd7: callq  0x00007f73e0269380  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149 (line 947)
                                                ;   {virtual_call}
  0x00007f73e07e4bdc: cmp    $0x0,%eax
  0x00007f73e07e4bdf: mov    $0x8,%edx
  0x00007f73e07e4be4: je     0x00007f73e07e4bef
  0x00007f73e07e4bea: mov    $0x0,%edx
  0x00007f73e07e4bef: movabs $0x7f73d354c770,%rcx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4bf9: mov    0x108(%rcx),%esi
  0x00007f73e07e4bff: add    %edx,%esi
  0x00007f73e07e4c01: mov    %esi,0x108(%rcx)
  0x00007f73e07e4c07: cmp    $0x0,%edx
  0x00007f73e07e4c0a: jne    0x00007f73e07e4c15
  0x00007f73e07e4c10: mov    $0x8,%esi
  0x00007f73e07e4c15: and    $0xfff8,%esi
  0x00007f73e07e4c1b: cmp    $0x0,%esi
  0x00007f73e07e4c1e: je     0x00007f73e07e4f6a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x00007f73e07e4c24: mov    0x108(%r15),%r10   ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x00007f73e07e4c2b: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e4c2e: cmp    $0x0,%eax
  0x00007f73e07e4c31: movabs $0x7f73d354c770,%rdx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4c3b: movabs $0x408,%rcx
  0x00007f73e07e4c45: jne    0x00007f73e07e4c55
  0x00007f73e07e4c4b: movabs $0x3f8,%rcx
  0x00007f73e07e4c55: mov    (%rdx,%rcx,1),%rsi
  0x00007f73e07e4c59: lea    0x1(%rsi),%rsi
  0x00007f73e07e4c5d: mov    %rsi,(%rdx,%rcx,1)
  0x00007f73e07e4c61: jne    0x00007f73e07e4cc3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)

  0x00007f73e07e4c67: mov    0xa0(%rsp),%rbx
  0x00007f73e07e4c6f: mov    0x98(%rsp),%ecx
  0x00007f73e07e4c76: mov    0x88(%rsp),%rdx
  0x00007f73e07e4c7e: jmpq   0x00007f73e07e4978
  0x00007f73e07e4c83: mov    0xa0(%rsp),%rbx
  0x00007f73e07e4c8b: mov    0x98(%rsp),%ecx
  0x00007f73e07e4c92: mov    0x88(%rsp),%rdx
  0x00007f73e07e4c9a: jmpq   0x00007f73e07e4978
  0x00007f73e07e4c9f: mov    %rdi,0xa0(%rsp)
  0x00007f73e07e4ca7: mov    0xa0(%rsp),%rbx
  0x00007f73e07e4caf: mov    0x98(%rsp),%ecx
  0x00007f73e07e4cb6: mov    0x88(%rsp),%rdx
  0x00007f73e07e4cbe: jmpq   0x00007f73e07e4978  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112 (line 945)

  0x00007f73e07e4cc3: mov    0xa0(%rsp),%rdi
  0x00007f73e07e4ccb: jmpq   0x00007f73e07e4e3e  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@155 (line 948)

  0x00007f73e07e4cd0: mov    0x98(%rsp),%ecx
  0x00007f73e07e4cd7: mov    0x88(%rsp),%rsi
  0x00007f73e07e4cdf: mov    0x90(%rsp),%rbx
  0x00007f73e07e4ce7: movabs $0x7f73d354c770,%rdx  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4cf1: mov    0x8(%rbx),%ebx
  0x00007f73e07e4cf4: shl    $0x3,%rbx
  0x00007f73e07e4cf8: movabs $0x800000000,%r12
  0x00007f73e07e4d02: add    %r12,%rbx
  0x00007f73e07e4d05: xor    %r12,%r12
  0x00007f73e07e4d08: cmp    0x2e0(%rdx),%rbx
  0x00007f73e07e4d0f: jne    0x00007f73e07e4d1e
  0x00007f73e07e4d11: addq   $0x1,0x2e8(%rdx)
  0x00007f73e07e4d19: jmpq   0x00007f73e07e4d84
  0x00007f73e07e4d1e: cmp    0x2f0(%rdx),%rbx
  0x00007f73e07e4d25: jne    0x00007f73e07e4d34
  0x00007f73e07e4d27: addq   $0x1,0x2f8(%rdx)
  0x00007f73e07e4d2f: jmpq   0x00007f73e07e4d84
  0x00007f73e07e4d34: cmpq   $0x0,0x2e0(%rdx)
  0x00007f73e07e4d3f: jne    0x00007f73e07e4d58
  0x00007f73e07e4d41: mov    %rbx,0x2e0(%rdx)
  0x00007f73e07e4d48: movq   $0x1,0x2e8(%rdx)
  0x00007f73e07e4d53: jmpq   0x00007f73e07e4d84
  0x00007f73e07e4d58: cmpq   $0x0,0x2f0(%rdx)
  0x00007f73e07e4d63: jne    0x00007f73e07e4d7c
  0x00007f73e07e4d65: mov    %rbx,0x2f0(%rdx)
  0x00007f73e07e4d6c: movq   $0x1,0x2f8(%rdx)
  0x00007f73e07e4d77: jmpq   0x00007f73e07e4d84
  0x00007f73e07e4d7c: addq   $0x1,0x2d0(%rdx)
  0x00007f73e07e4d84: mov    %rcx,%rdx
  0x00007f73e07e4d87: mov    %rsi,%rcx
  0x00007f73e07e4d8a: mov    0x90(%rsp),%rsi    ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)

  0x00007f73e07e4d92: data16 xchg %ax,%ax
  0x00007f73e07e4d95: movabs $0xffffffffffffffff,%rax
  0x00007f73e07e4d9f: callq  0x00007f73e0269380  ; ImmutableOopMap{}
                                                ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93 (line 944)
                                                ;   {virtual_call}
  0x00007f73e07e4da4: cmp    $0x0,%rax
  0x00007f73e07e4da8: movabs $0x7f73d354c770,%rsi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4db2: movabs $0x308,%rdi
  0x00007f73e07e4dbc: je     0x00007f73e07e4dcc
  0x00007f73e07e4dc2: movabs $0x318,%rdi
  0x00007f73e07e4dcc: mov    (%rsi,%rdi,1),%rbx
  0x00007f73e07e4dd0: lea    0x1(%rbx),%rbx
  0x00007f73e07e4dd4: mov    %rbx,(%rsi,%rdi,1)
  0x00007f73e07e4dd8: je     0x00007f73e07e4e04  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@99 (line 944)

  0x00007f73e07e4dde: mov    0x14(%rax),%eax    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)
                                                ; implicit exception: dispatches to 0x00007f73e07e4f8b
  0x00007f73e07e4de1: movabs $0x7f73d354c770,%rsi  ;   {metadata(method data for {method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4deb: incl   0x328(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@107 (line 944)

  0x00007f73e07e4df1: add    $0xb0,%rsp
  0x00007f73e07e4df8: pop    %rbp
  0x00007f73e07e4df9: mov    0x108(%r15),%r10
  0x00007f73e07e4e00: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e4e03: retq   
  0x00007f73e07e4e04: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07e4e0e: add    $0xb0,%rsp
  0x00007f73e07e4e15: pop    %rbp
  0x00007f73e07e4e16: mov    0x108(%r15),%r10
  0x00007f73e07e4e1d: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e4e20: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@111 (line 944)

  0x00007f73e07e4e21: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07e4e2b: add    $0xb0,%rsp
  0x00007f73e07e4e32: pop    %rbp
  0x00007f73e07e4e33: mov    0x108(%r15),%r10
  0x00007f73e07e4e3a: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e4e3d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@161 (line 951)

  0x00007f73e07e4e3e: mov    0x14(%rdi),%eax    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@156 (line 948)

  0x00007f73e07e4e41: add    $0xb0,%rsp
  0x00007f73e07e4e48: pop    %rbp
  0x00007f73e07e4e49: mov    0x108(%r15),%r10
  0x00007f73e07e4e50: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e4e53: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@159 (line 948)

  0x00007f73e07e4e54: mov    0x14(%rbx),%eax    ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@80 (line 941)

  0x00007f73e07e4e57: add    $0xb0,%rsp
  0x00007f73e07e4e5e: pop    %rbp
  0x00007f73e07e4e5f: mov    0x108(%r15),%r10
  0x00007f73e07e4e66: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e4e69: retq   
  0x00007f73e07e4e6a: movabs $0x80034d828,%r10  ;   {metadata({method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4e74: mov    %r10,0x8(%rsp)
  0x00007f73e07e4e79: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e4e81: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::get@-1 (line 936)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e4e86: jmpq   0x00007f73e07e437f
  0x00007f73e07e4e8b: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop [136]=Oop [128]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1 (line 936)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e4e90: movabs $0x80034f198,%r10  ;   {metadata({method} {0x000000080034f198} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4e9a: mov    %r10,0x8(%rsp)
  0x00007f73e07e4e9f: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e4ea7: callq  0x00007f73e0334d80  ; ImmutableOopMap{[128]=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1 (line 697)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@4 (line 936)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e4eac: jmpq   0x00007f73e07e4476
  0x00007f73e07e4eb1: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19 (line 937)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e4eb6: movabs $0x80034f1f0,%r10  ;   {metadata({method} {0x000000080034f1f0} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4ec0: mov    %r10,0x8(%rsp)
  0x00007f73e07e4ec5: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e4ecd: callq  0x00007f73e0334d80  ; ImmutableOopMap{[136]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e4ed2: jmpq   0x00007f73e07e454c
  0x00007f73e07e4ed7: movabs $0x80037a7a0,%r10  ;   {metadata({method} {0x000000080037a7a0} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e07e4ee1: mov    %r10,0x8(%rsp)
  0x00007f73e07e4ee6: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e4eee: callq  0x00007f73e0334d80  ; ImmutableOopMap{[136]=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1 (line 2042)
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e4ef3: jmpq   0x00007f73e07e45f4
  0x00007f73e07e4ef8: cmp    $0x0,%rdx
  0x00007f73e07e4efc: je     0x00007f73e07e4605
  0x00007f73e07e4f02: mov    %rdx,(%rsp)
  0x00007f73e07e4f06: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07e4f0b: jmpq   0x00007f73e07e4605
  0x00007f73e07e4f10: mov    %rdx,(%rsp)
  0x00007f73e07e4f14: callq  0x00007f73e0332820  ; ImmutableOopMap{[136]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18 (line 760)
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34 (line 938)
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00007f73e07e4f19: callq  0x00007f73e03308a0  ; ImmutableOopMap{rbx=Oop [136]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43 (line 939)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e4f1e: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113 (line 945)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e4f23: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122 (line 946)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e4f28: movabs $0x80034d828,%r10  ;   {metadata({method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4f32: mov    %r10,0x8(%rsp)
  0x00007f73e07e4f37: movq   $0x7f,(%rsp)
  0x00007f73e07e4f3f: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127 (line 946)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e4f44: jmpq   0x00007f73e07e4a05
  0x00007f73e07e4f49: movabs $0x80034d828,%r10  ;   {metadata({method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4f53: mov    %r10,0x8(%rsp)
  0x00007f73e07e4f58: movq   $0x8f,(%rsp)
  0x00007f73e07e4f60: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143 (line 946)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e4f65: jmpq   0x00007f73e07e4ad2
  0x00007f73e07e4f6a: movabs $0x80034d828,%r10  ;   {metadata({method} {0x000000080034d828} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07e4f74: mov    %r10,0x8(%rsp)
  0x00007f73e07e4f79: movq   $0x98,(%rsp)
  0x00007f73e07e4f81: callq  0x00007f73e0334d80  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152 (line 947)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e4f86: jmpq   0x00007f73e07e4c24
  0x00007f73e07e4f8b: callq  0x00007f73e03308a0  ; ImmutableOopMap{}
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104 (line 944)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e4f90: nop
  0x00007f73e07e4f91: nop
  0x00007f73e07e4f92: mov    0x428(%r15),%rax
  0x00007f73e07e4f99: movabs $0x0,%r10
  0x00007f73e07e4fa3: mov    %r10,0x428(%r15)
  0x00007f73e07e4faa: movabs $0x0,%r10
  0x00007f73e07e4fb4: mov    %r10,0x430(%r15)
  0x00007f73e07e4fbb: add    $0xb0,%rsp
  0x00007f73e07e4fc2: pop    %rbp
  0x00007f73e07e4fc3: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e4fc8: hlt    
  0x00007f73e07e4fc9: hlt    
  0x00007f73e07e4fca: hlt    
  0x00007f73e07e4fcb: hlt    
  0x00007f73e07e4fcc: hlt    
  0x00007f73e07e4fcd: hlt    
  0x00007f73e07e4fce: hlt    
  0x00007f73e07e4fcf: hlt    
  0x00007f73e07e4fd0: hlt    
  0x00007f73e07e4fd1: hlt    
  0x00007f73e07e4fd2: hlt    
  0x00007f73e07e4fd3: hlt    
  0x00007f73e07e4fd4: hlt    
  0x00007f73e07e4fd5: hlt    
  0x00007f73e07e4fd6: hlt    
  0x00007f73e07e4fd7: hlt    
  0x00007f73e07e4fd8: hlt    
  0x00007f73e07e4fd9: hlt    
  0x00007f73e07e4fda: hlt    
  0x00007f73e07e4fdb: hlt    
  0x00007f73e07e4fdc: hlt    
  0x00007f73e07e4fdd: hlt    
  0x00007f73e07e4fde: hlt    
  0x00007f73e07e4fdf: hlt    
[Stub Code]
  0x00007f73e07e4fe0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e4fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e4fef: jmpq   0x00007f73e07e4fef  ;   {runtime_call}
  0x00007f73e07e4ff4: nop
  0x00007f73e07e4ff5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e4fff: jmpq   0x00007f73e07e4fff  ;   {runtime_call}
  0x00007f73e07e5004: nop
  0x00007f73e07e5005: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e500f: jmpq   0x00007f73e07e500f  ;   {runtime_call}
  0x00007f73e07e5014: nop
  0x00007f73e07e5015: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e501f: jmpq   0x00007f73e07e501f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e5024: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e5029: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e5033: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e5037: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e503c: hlt    
[Deopt Handler Code]
  0x00007f73e07e503d: movabs $0x7f73e07e503d,%r10  ;   {section_word}
  0x00007f73e07e5047: push   %r10
  0x00007f73e07e5049: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e504e: hlt    
  0x00007f73e07e504f: hlt    

ImmutableOopMap{[128]=Oop [136]=Oop }pc offsets: 316 
ImmutableOopMap{[136]=Oop [144]=Oop }pc offsets: 1476 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 1804 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }pc offsets: 2009 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 2268 2347 
ImmutableOopMap{}pc offsets: 2724 
ImmutableOopMap{rsi=Oop rdx=Oop [136]=Oop }pc offsets: 2950 
ImmutableOopMap{rdx=Oop [136]=Oop [128]=Oop }pc offsets: 2960 
ImmutableOopMap{[128]=Oop [136]=Oop }pc offsets: 2988 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 2998 
ImmutableOopMap{[136]=Oop rdx=Oop }pc offsets: 3026 3059 
ImmutableOopMap{[136]=Oop }pc offsets: 3097 
ImmutableOopMap{rbx=Oop [136]=Oop }pc offsets: 3102 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 3107 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 3112 3140 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop rsi=Oop }pc offsets: 3173 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 3206 
ImmutableOopMap{}pc offsets: 3216 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(I)Ljava/lang/Object;  [0x00007f73e7d13ca0, 0x00007f73e7d13cc0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3636a70} 'invokeBasic' '(I)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d13ca0: mov    0x14(%rsi),%ebx
  0x00007f73e7d13ca3: mov    0x28(%rbx),%ebx
  0x00007f73e7d13ca6: mov    0x24(%rbx),%ebx
  0x00007f73e7d13ca9: mov    0x10(%rbx),%rbx
  0x00007f73e7d13cad: test   %rbx,%rbx
  0x00007f73e7d13cb0: je     0x00007f73e7d13cb9
  0x00007f73e7d13cb6: jmpq   *0x38(%rbx)
  0x00007f73e7d13cb9: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d13cbe: hlt    
  0x00007f73e7d13cbf: hlt    
Compiled method (c2)   64829  206       4       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x00007f73e7d13490,0x00007f73e7d13aa0] = 1552
 relocation     [0x00007f73e7d13608,0x00007f73e7d13618] = 16
 main code      [0x00007f73e7d13620,0x00007f73e7d137a0] = 384
 stub code      [0x00007f73e7d137a0,0x00007f73e7d137b8] = 24
 metadata       [0x00007f73e7d137b8,0x00007f73e7d137c0] = 8
 scopes data    [0x00007f73e7d137c0,0x00007f73e7d13840] = 128
 scopes pcs     [0x00007f73e7d13840,0x00007f73e7d13a80] = 576
 dependencies   [0x00007f73e7d13a80,0x00007f73e7d13a88] = 8
 nul chk table  [0x00007f73e7d13a88,0x00007f73e7d13aa0] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x00007f73e7d13620, 0x00007f73e7d137b8]  408 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033e4a8} 'equals' '([B[B)Z' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx:rdx   = '[B'
  #           [sp+0x30]  (sp of caller)
  0x00007f73e7d13620: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d13627: push   %rbp
  0x00007f73e7d13628: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1 (line 94)

  0x00007f73e7d1362c: mov    0xc(%rsi),%r9d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ; implicit exception: dispatches to 0x00007f73e7d1377f
  0x00007f73e7d13630: mov    0xc(%rdx),%r11d    ; implicit exception: dispatches to 0x00007f73e7d1378c
  0x00007f73e7d13634: xor    %eax,%eax
  0x00007f73e7d13636: cmp    %r11d,%r9d
  0x00007f73e7d13639: je     0x00007f73e7d1364b  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)

  0x00007f73e7d1363b: add    $0x20,%rsp
  0x00007f73e7d1363f: pop    %rbp
  0x00007f73e7d13640: mov    0x108(%r15),%r10
  0x00007f73e7d13647: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d1364a: retq   
  0x00007f73e7d1364b: test   %r9d,%r9d
  0x00007f73e7d1364e: jbe    0x00007f73e7d13757  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12 (line 95)

  0x00007f73e7d13654: mov    %r9d,%ecx
  0x00007f73e7d13657: dec    %ecx
  0x00007f73e7d13659: cmp    %r9d,%ecx
  0x00007f73e7d1365c: jae    0x00007f73e7d13761
  0x00007f73e7d13662: test   %r11d,%r11d
  0x00007f73e7d13665: jbe    0x00007f73e7d13761
  0x00007f73e7d1366b: cmp    %r11d,%ecx
  0x00007f73e7d1366e: jae    0x00007f73e7d13761
  0x00007f73e7d13674: movsbl 0x10(%rdx),%r10d
  0x00007f73e7d13679: movsbl 0x10(%rsi),%r8d
  0x00007f73e7d1367e: cmp    %r10d,%r8d
  0x00007f73e7d13681: jne    0x00007f73e7d1363b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007f73e7d13683: mov    %r9d,%r8d
  0x00007f73e7d13686: add    $0xfffffffd,%r8d
  0x00007f73e7d1368a: mov    $0x80000000,%r10d
  0x00007f73e7d13690: cmp    %r8d,%ecx
  0x00007f73e7d13693: cmovl  %r10d,%r8d
  0x00007f73e7d13697: cmp    $0x1,%r8d
  0x00007f73e7d1369b: jle    0x00007f73e7d13778
  0x00007f73e7d136a1: mov    $0xfa0,%r13d
  0x00007f73e7d136a7: mov    $0x1,%ebx
  0x00007f73e7d136ac: mov    %r8d,%ecx
  0x00007f73e7d136af: sub    %ebx,%ecx
  0x00007f73e7d136b1: cmp    %r13d,%ecx
  0x00007f73e7d136b4: cmovg  %r13d,%ecx
  0x00007f73e7d136b8: add    %ebx,%ecx
  0x00007f73e7d136ba: nopw   0x0(%rax,%rax,1)   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@15 (line 96)

  0x00007f73e7d136c0: movslq %ebx,%rdi          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e7d136c3: movsbl 0x10(%rsi,%rdi,1),%r10d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x00007f73e7d136c9: movsbl 0x10(%rdx,%rdi,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e7d136cf: cmp    %r11d,%r10d
  0x00007f73e7d136d2: jne    0x00007f73e7d1363b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007f73e7d136d8: movsbl 0x11(%rdx,%rdi,1),%r10d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e7d136de: movsbl 0x11(%rsi,%rdi,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x00007f73e7d136e4: cmp    %r10d,%r11d
  0x00007f73e7d136e7: jne    0x00007f73e7d1363b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007f73e7d136ed: movsbl 0x12(%rdx,%rdi,1),%r10d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e7d136f3: movsbl 0x12(%rsi,%rdi,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x00007f73e7d136f9: cmp    %r10d,%r11d
  0x00007f73e7d136fc: jne    0x00007f73e7d1363b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007f73e7d13702: movsbl 0x13(%rdx,%rdi,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e7d13708: movsbl 0x13(%rsi,%rdi,1),%r10d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x00007f73e7d1370e: cmp    %r11d,%r10d
  0x00007f73e7d13711: jne    0x00007f73e7d1363b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007f73e7d13717: add    $0x4,%ebx          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@26 (line 95)

  0x00007f73e7d1371a: cmp    %ecx,%ebx
  0x00007f73e7d1371c: jl     0x00007f73e7d136c0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007f73e7d1371e: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)

  0x00007f73e7d13725: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29 (line 95)
                                                ;   {poll}
  0x00007f73e7d13728: cmp    %r8d,%ebx
  0x00007f73e7d1372b: jl     0x00007f73e7d136ac
  0x00007f73e7d13731: cmp    %r9d,%ebx
  0x00007f73e7d13734: jge    0x00007f73e7d13757
  0x00007f73e7d13736: xchg   %ax,%ax            ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@15 (line 96)

  0x00007f73e7d13738: movslq %ebx,%r10          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e7d1373b: movsbl 0x10(%rsi,%r10,1),%r8d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17 (line 96)

  0x00007f73e7d13741: movsbl 0x10(%rdx,%r10,1),%r10d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20 (line 96)

  0x00007f73e7d13747: cmp    %r10d,%r8d
  0x00007f73e7d1374a: jne    0x00007f73e7d1363b  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21 (line 96)

  0x00007f73e7d13750: inc    %ebx               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@26 (line 95)

  0x00007f73e7d13752: cmp    %r9d,%ebx
  0x00007f73e7d13755: jl     0x00007f73e7d13738  ;*iconst_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@32 (line 100)

  0x00007f73e7d13757: mov    $0x1,%eax
  0x00007f73e7d1375c: jmpq   0x00007f73e7d1363b  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12 (line 95)

  0x00007f73e7d13761: mov    %rsi,%rbp
  0x00007f73e7d13764: mov    %rdx,(%rsp)
  0x00007f73e7d13768: mov    %r9d,0x8(%rsp)
  0x00007f73e7d1376d: mov    $0xffffff7e,%esi
  0x00007f73e7d13772: nop
  0x00007f73e7d13773: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12 (line 95)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d13778: mov    $0x1,%ebx
  0x00007f73e7d1377d: jmp    0x00007f73e7d13731
  0x00007f73e7d1377f: mov    $0xfffffff6,%esi
  0x00007f73e7d13784: data16 xchg %ax,%ax
  0x00007f73e7d13787: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1 (line 94)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d1378c: mov    $0xfffffff6,%esi
  0x00007f73e7d13791: xchg   %ax,%ax
  0x00007f73e7d13793: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3 (line 94)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d13798: hlt    
  0x00007f73e7d13799: hlt    
  0x00007f73e7d1379a: hlt    
  0x00007f73e7d1379b: hlt    
  0x00007f73e7d1379c: hlt    
  0x00007f73e7d1379d: hlt    
  0x00007f73e7d1379e: hlt    
  0x00007f73e7d1379f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d137a0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d137a5: callq  0x00007f73e7d137aa
  0x00007f73e7d137aa: subq   $0x5,(%rsp)
  0x00007f73e7d137af: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d137b4: hlt    
  0x00007f73e7d137b5: hlt    
  0x00007f73e7d137b6: hlt    
  0x00007f73e7d137b7: hlt    

ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 261 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 344 
ImmutableOopMap{}pc offsets: 364 376 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d13ea0, 0x00007f73e7d13ec0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3636b88} 'linkToSpecial' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d13ea0: cmp    (%rsi),%rax
  0x00007f73e7d13ea3: mov    0x24(%rcx),%ebx
  0x00007f73e7d13ea6: mov    0x10(%rbx),%rbx
  0x00007f73e7d13eaa: test   %rbx,%rbx
  0x00007f73e7d13ead: je     0x00007f73e7d13eb6
  0x00007f73e7d13eb3: jmpq   *0x38(%rbx)
  0x00007f73e7d13eb6: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d13ebb: hlt    
  0x00007f73e7d13ebc: hlt    
  0x00007f73e7d13ebd: hlt    
  0x00007f73e7d13ebe: hlt    
  0x00007f73e7d13ebf: hlt    
Compiled method (c2)   65840  205       4       java.lang.String::equals (65 bytes)
 total in heap  [0x00007f73e7d13f10,0x00007f73e7d14470] = 1376
 relocation     [0x00007f73e7d14088,0x00007f73e7d140a0] = 24
 main code      [0x00007f73e7d140a0,0x00007f73e7d14280] = 480
 stub code      [0x00007f73e7d14280,0x00007f73e7d14298] = 24
 metadata       [0x00007f73e7d14298,0x00007f73e7d142b8] = 32
 scopes data    [0x00007f73e7d142b8,0x00007f73e7d14348] = 144
 scopes pcs     [0x00007f73e7d14348,0x00007f73e7d14468] = 288
 dependencies   [0x00007f73e7d14468,0x00007f73e7d14470] = 8
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x00007f73e7d140a0, 0x00007f73e7d14298]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800336b00} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d140a0: mov    0x8(%rsi),%r10d
  0x00007f73e7d140a4: shl    $0x3,%r10
  0x00007f73e7d140a8: movabs $0x800000000,%r12
  0x00007f73e7d140b2: add    %r12,%r10
  0x00007f73e7d140b5: xor    %r12,%r12
  0x00007f73e7d140b8: cmp    %r10,%rax
  0x00007f73e7d140bb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d140c1: data16 xchg %ax,%ax
  0x00007f73e7d140c4: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d140cc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d140d0: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d140d7: push   %rbp
  0x00007f73e7d140d8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)

  0x00007f73e7d140dc: cmp    %rdx,%rsi
  0x00007f73e7d140df: je     0x00007f73e7d14212  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2 (line 1003)

  0x00007f73e7d140e5: xor    %eax,%eax
  0x00007f73e7d140e7: test   %rdx,%rdx
  0x00007f73e7d140ea: je     0x00007f73e7d141ff
  0x00007f73e7d140f0: mov    0x8(%rdx),%r11d
  0x00007f73e7d140f4: cmp    $0x66d12,%r11d     ;   {metadata('java/lang/String')}
  0x00007f73e7d140fb: jne    0x00007f73e7d14250  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15 (line 1007)

  0x00007f73e7d14101: movsbl 0x14(%rsi),%r11d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@20 (line 1008)

  0x00007f73e7d14106: movsbl 0x14(%rdx),%ebp    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::equals@24 (line 1008)

  0x00007f73e7d1410a: cmp    %ebp,%r11d
  0x00007f73e7d1410d: jne    0x00007f73e7d14219  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)

  0x00007f73e7d14113: test   %r11d,%r11d
  0x00007f73e7d14116: jne    0x00007f73e7d14234  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)

  0x00007f73e7d1411c: mov    0xc(%rdx),%r11d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x00007f73e7d14120: mov    0xc(%rsi),%r10d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x00007f73e7d14124: mov    0xc(%r11),%r9d
  0x00007f73e7d14128: mov    0xc(%r10),%ecx
  0x00007f73e7d1412c: cmp    %r9d,%ecx
  0x00007f73e7d1412f: jne    0x00007f73e7d141ff  ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45 (line 1009)

  0x00007f73e7d14135: mov    %r11,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42 (line 1009)

  0x00007f73e7d14138: lea    0x10(%r11),%rsi
  0x00007f73e7d1413c: mov    %r10,%r11          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38 (line 1009)

  0x00007f73e7d1413f: lea    0x10(%r10),%rdi
  0x00007f73e7d14143: test   %ecx,%ecx
  0x00007f73e7d14145: je     0x00007f73e7d141ee
  0x00007f73e7d1414b: mov    %ecx,%eax
  0x00007f73e7d1414d: and    $0x1f,%eax
  0x00007f73e7d14150: and    $0xffffffe0,%ecx
  0x00007f73e7d14153: je     0x00007f73e7d141a4
  0x00007f73e7d14159: lea    (%rdi,%rcx,1),%rdi
  0x00007f73e7d1415d: lea    (%rsi,%rcx,1),%rsi
  0x00007f73e7d14161: neg    %rcx
  0x00007f73e7d14164: vmovdqu (%rdi,%rcx,1),%ymm1
  0x00007f73e7d14169: vmovdqu (%rsi,%rcx,1),%ymm0
  0x00007f73e7d1416e: vpxor  %ymm0,%ymm1,%ymm1
  0x00007f73e7d14172: vptest %ymm1,%ymm1
  0x00007f73e7d14177: jne    0x00007f73e7d141f5
  0x00007f73e7d1417d: add    $0x20,%rcx
  0x00007f73e7d14181: jne    0x00007f73e7d14164
  0x00007f73e7d14183: test   %eax,%eax
  0x00007f73e7d14185: je     0x00007f73e7d141ee
  0x00007f73e7d1418b: vmovdqu -0x20(%rdi,%rax,1),%ymm1
  0x00007f73e7d14191: vmovdqu -0x20(%rsi,%rax,1),%ymm0
  0x00007f73e7d14197: vpxor  %ymm0,%ymm1,%ymm1
  0x00007f73e7d1419b: vptest %ymm1,%ymm1
  0x00007f73e7d141a0: jne    0x00007f73e7d141f5
  0x00007f73e7d141a2: jmp    0x00007f73e7d141ee
  0x00007f73e7d141a4: mov    %eax,%ecx
  0x00007f73e7d141a6: and    $0xfffffffc,%ecx
  0x00007f73e7d141a9: je     0x00007f73e7d141c4
  0x00007f73e7d141ab: lea    (%rdi,%rcx,1),%rdi
  0x00007f73e7d141af: lea    (%rsi,%rcx,1),%rsi
  0x00007f73e7d141b3: neg    %rcx
  0x00007f73e7d141b6: mov    (%rdi,%rcx,1),%ebx
  0x00007f73e7d141b9: cmp    (%rsi,%rcx,1),%ebx
  0x00007f73e7d141bc: jne    0x00007f73e7d141f5
  0x00007f73e7d141be: add    $0x4,%rcx
  0x00007f73e7d141c2: jne    0x00007f73e7d141b6
  0x00007f73e7d141c4: test   $0x2,%eax
  0x00007f73e7d141c9: je     0x00007f73e7d141dd
  0x00007f73e7d141cb: movzwl (%rdi),%ebx
  0x00007f73e7d141ce: movzwl (%rsi),%ecx
  0x00007f73e7d141d1: cmp    %ecx,%ebx
  0x00007f73e7d141d3: jne    0x00007f73e7d141f5
  0x00007f73e7d141d5: lea    0x2(%rdi),%rdi
  0x00007f73e7d141d9: lea    0x2(%rsi),%rsi
  0x00007f73e7d141dd: test   $0x1,%eax
  0x00007f73e7d141e2: je     0x00007f73e7d141ee
  0x00007f73e7d141e4: movzbl (%rdi),%ebx
  0x00007f73e7d141e7: movzbl (%rsi),%ecx
  0x00007f73e7d141ea: cmp    %ecx,%ebx
  0x00007f73e7d141ec: jne    0x00007f73e7d141f5
  0x00007f73e7d141ee: mov    $0x1,%eax
  0x00007f73e7d141f3: jmp    0x00007f73e7d141f7
  0x00007f73e7d141f5: xor    %eax,%eax
  0x00007f73e7d141f7: vpxor  %ymm1,%ymm1,%ymm1
  0x00007f73e7d141fb: vpxor  %ymm0,%ymm0,%ymm0  ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 1003)

  0x00007f73e7d141ff: vzeroupper 
  0x00007f73e7d14202: add    $0x30,%rsp
  0x00007f73e7d14206: pop    %rbp
  0x00007f73e7d14207: mov    0x108(%r15),%r10
  0x00007f73e7d1420e: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d14211: retq   
  0x00007f73e7d14212: mov    $0x1,%eax
  0x00007f73e7d14217: jmp    0x00007f73e7d141ff
  0x00007f73e7d14219: mov    %rsi,(%rsp)
  0x00007f73e7d1421d: mov    %rdx,0x8(%rsp)
  0x00007f73e7d14222: mov    %r11d,0x10(%rsp)
  0x00007f73e7d14227: mov    $0xffffff4d,%esi
  0x00007f73e7d1422c: vzeroupper 
  0x00007f73e7d1422f: callq  0x00007f73e0269880  ; ImmutableOopMap{[0]=Oop [8]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27 (line 1008)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d14234: mov    %rsi,%rbp
  0x00007f73e7d14237: mov    %rdx,(%rsp)
  0x00007f73e7d1423b: mov    %r11d,0x8(%rsp)
  0x00007f73e7d14240: mov    $0xffffff4d,%esi
  0x00007f73e7d14245: data16 xchg %ax,%ax
  0x00007f73e7d14248: vzeroupper 
  0x00007f73e7d1424b: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::equals@31 (line 1009)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d14250: mov    %rsi,%rbp
  0x00007f73e7d14253: mov    %rdx,0x8(%rsp)
  0x00007f73e7d14258: mov    $0xffffffde,%esi
  0x00007f73e7d1425d: data16 xchg %ax,%ax
  0x00007f73e7d14260: vzeroupper 
  0x00007f73e7d14263: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [8]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8 (line 1006)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d14268: hlt    
  0x00007f73e7d14269: hlt    
  0x00007f73e7d1426a: hlt    
  0x00007f73e7d1426b: hlt    
  0x00007f73e7d1426c: hlt    
  0x00007f73e7d1426d: hlt    
  0x00007f73e7d1426e: hlt    
  0x00007f73e7d1426f: hlt    
  0x00007f73e7d14270: hlt    
  0x00007f73e7d14271: hlt    
  0x00007f73e7d14272: hlt    
  0x00007f73e7d14273: hlt    
  0x00007f73e7d14274: hlt    
  0x00007f73e7d14275: hlt    
  0x00007f73e7d14276: hlt    
  0x00007f73e7d14277: hlt    
  0x00007f73e7d14278: hlt    
  0x00007f73e7d14279: hlt    
  0x00007f73e7d1427a: hlt    
  0x00007f73e7d1427b: hlt    
  0x00007f73e7d1427c: hlt    
  0x00007f73e7d1427d: hlt    
  0x00007f73e7d1427e: hlt    
  0x00007f73e7d1427f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d14280: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d14285: callq  0x00007f73e7d1428a
  0x00007f73e7d1428a: subq   $0x5,(%rsp)
  0x00007f73e7d1428f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d14294: hlt    
  0x00007f73e7d14295: hlt    
  0x00007f73e7d14296: hlt    
  0x00007f73e7d14297: hlt    

ImmutableOopMap{[0]=Oop [8]=Oop }pc offsets: 404 
ImmutableOopMap{rbp=Oop [0]=Oop }pc offsets: 432 
ImmutableOopMap{rbp=Oop [8]=Oop }pc offsets: 456 Compiled method (c1)   66706  123       3       java.lang.String::<init> (15 bytes)
 total in heap  [0x00007f73e07e5790,0x00007f73e07e5bd0] = 1088
 relocation     [0x00007f73e07e5908,0x00007f73e07e5938] = 48
 main code      [0x00007f73e07e5940,0x00007f73e07e5ae0] = 416
 stub code      [0x00007f73e07e5ae0,0x00007f73e07e5b10] = 48
 metadata       [0x00007f73e07e5b10,0x00007f73e07e5b20] = 16
 scopes data    [0x00007f73e07e5b20,0x00007f73e07e5b58] = 56
 scopes pcs     [0x00007f73e07e5b58,0x00007f73e07e5bc8] = 112
 dependencies   [0x00007f73e07e5bc8,0x00007f73e07e5bd0] = 8
----------------------------------------------------------------------
java/lang/String.<init>([BB)V  [0x00007f73e07e5940, 0x00007f73e07e5b10]  464 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    rcx       = byte
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07e5940: mov    0x8(%rsi),%r10d
  0x00007f73e07e5944: shl    $0x3,%r10
  0x00007f73e07e5948: movabs $0x800000000,%r12
  0x00007f73e07e5952: add    %r12,%r10
  0x00007f73e07e5955: xor    %r12,%r12
  0x00007f73e07e5958: cmp    %rax,%r10
  0x00007f73e07e595b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e5961: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e596c: data16 data16 xchg %ax,%ax
  0x00007f73e07e5970: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e597b: data16 data16 xchg %ax,%ax
  0x00007f73e07e597f: nop
[Verified Entry Point]
  0x00007f73e07e5980: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e5987: push   %rbp
  0x00007f73e07e5988: sub    $0x30,%rsp
  0x00007f73e07e598c: movabs $0x7f73d353ca80,%rdi  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e5996: mov    0x104(%rdi),%ebx
  0x00007f73e07e599c: add    $0x8,%ebx
  0x00007f73e07e599f: mov    %ebx,0x104(%rdi)
  0x00007f73e07e59a5: and    $0x1ff8,%ebx
  0x00007f73e07e59ab: cmp    $0x0,%ebx
  0x00007f73e07e59ae: je     0x00007f73e07e5a2d  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@0 (line 3252)

  0x00007f73e07e59b4: mov    %rsi,%rdi
  0x00007f73e07e59b7: movabs $0x7f73d353ca80,%rbx  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e59c1: addq   $0x1,0x140(%rbx)
  0x00007f73e07e59c9: movabs $0x7f73d350be50,%rdi  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07e59d3: mov    0x104(%rdi),%ebx
  0x00007f73e07e59d9: add    $0x8,%ebx
  0x00007f73e07e59dc: mov    %ebx,0x104(%rdi)
  0x00007f73e07e59e2: and    $0x7ffff8,%ebx
  0x00007f73e07e59e8: cmp    $0x0,%ebx
  0x00007f73e07e59eb: je     0x00007f73e07e5a4e
  0x00007f73e07e59f1: movsbl 0x30(%r15),%edi
  0x00007f73e07e59f6: cmp    $0x0,%edi
  0x00007f73e07e59f9: jne    0x00007f73e07e5a6c
  0x00007f73e07e59ff: mov    %rdx,%r10
  0x00007f73e07e5a02: mov    %r10d,0xc(%rsi)
  0x00007f73e07e5a06: mov    %rsi,%rdi
  0x00007f73e07e5a09: xor    %rdx,%rdi
  0x00007f73e07e5a0c: shr    $0x14,%rdi
  0x00007f73e07e5a10: cmp    $0x0,%rdi
  0x00007f73e07e5a14: jne    0x00007f73e07e5a83  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)

  0x00007f73e07e5a1a: mov    %cl,0x14(%rsi)     ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@11 (line 3254)

  0x00007f73e07e5a1d: add    $0x30,%rsp
  0x00007f73e07e5a21: pop    %rbp
  0x00007f73e07e5a22: mov    0x108(%r15),%r10
  0x00007f73e07e5a29: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e5a2c: retq   
  0x00007f73e07e5a2d: movabs $0x800338cb8,%r10  ;   {metadata({method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e5a37: mov    %r10,0x8(%rsp)
  0x00007f73e07e5a3c: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e5a44: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 3252)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e5a49: jmpq   0x00007f73e07e59b4
  0x00007f73e07e5a4e: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07e5a58: mov    %r10,0x8(%rsp)
  0x00007f73e07e5a5d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e5a65: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ; - java.lang.String::<init>@1 (line 3252)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e5a6a: jmp    0x00007f73e07e59f1
  0x00007f73e07e5a6c: mov    0xc(%rsi),%edi
  0x00007f73e07e5a6f: cmp    $0x0,%rdi
  0x00007f73e07e5a73: je     0x00007f73e07e59ff
  0x00007f73e07e5a75: mov    %rdi,(%rsp)
  0x00007f73e07e5a79: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07e5a7e: jmpq   0x00007f73e07e59ff
  0x00007f73e07e5a83: cmp    $0x0,%rdx
  0x00007f73e07e5a87: je     0x00007f73e07e5a1a
  0x00007f73e07e5a89: mov    %rsi,(%rsp)
  0x00007f73e07e5a8d: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07e5a92: jmp    0x00007f73e07e5a1a
  0x00007f73e07e5a94: nop
  0x00007f73e07e5a95: nop
  0x00007f73e07e5a96: mov    0x428(%r15),%rax
  0x00007f73e07e5a9d: movabs $0x0,%r10
  0x00007f73e07e5aa7: mov    %r10,0x428(%r15)
  0x00007f73e07e5aae: movabs $0x0,%r10
  0x00007f73e07e5ab8: mov    %r10,0x430(%r15)
  0x00007f73e07e5abf: add    $0x30,%rsp
  0x00007f73e07e5ac3: pop    %rbp
  0x00007f73e07e5ac4: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e5ac9: hlt    
  0x00007f73e07e5aca: hlt    
  0x00007f73e07e5acb: hlt    
  0x00007f73e07e5acc: hlt    
  0x00007f73e07e5acd: hlt    
  0x00007f73e07e5ace: hlt    
  0x00007f73e07e5acf: hlt    
  0x00007f73e07e5ad0: hlt    
  0x00007f73e07e5ad1: hlt    
  0x00007f73e07e5ad2: hlt    
  0x00007f73e07e5ad3: hlt    
  0x00007f73e07e5ad4: hlt    
  0x00007f73e07e5ad5: hlt    
  0x00007f73e07e5ad6: hlt    
  0x00007f73e07e5ad7: hlt    
  0x00007f73e07e5ad8: hlt    
  0x00007f73e07e5ad9: hlt    
  0x00007f73e07e5ada: hlt    
  0x00007f73e07e5adb: hlt    
  0x00007f73e07e5adc: hlt    
  0x00007f73e07e5add: hlt    
  0x00007f73e07e5ade: hlt    
  0x00007f73e07e5adf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07e5ae0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07e5ae5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e5aef: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e5af3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e5af8: hlt    
[Deopt Handler Code]
  0x00007f73e07e5af9: movabs $0x7f73e07e5af9,%r10  ;   {section_word}
  0x00007f73e07e5b03: push   %r10
  0x00007f73e07e5b05: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e5b0a: hlt    
  0x00007f73e07e5b0b: hlt    
  0x00007f73e07e5b0c: hlt    
  0x00007f73e07e5b0d: hlt    
  0x00007f73e07e5b0e: hlt    
  0x00007f73e07e5b0f: hlt    

ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 265 298 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I  [0x00007f73e7d14620, 0x00007f73e7d14638]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3637448} 'linkToStatic' '(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d14620: mov    0x24(%rcx),%ebx
  0x00007f73e7d14623: mov    0x10(%rbx),%rbx
  0x00007f73e7d14627: test   %rbx,%rbx
  0x00007f73e7d1462a: je     0x00007f73e7d14633
  0x00007f73e7d14630: jmpq   *0x38(%rbx)
  0x00007f73e7d14633: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c2)   67429  216       4       java.lang.ref.Reference::reachabilityFence (1 bytes)
 total in heap  [0x00007f73e7d14690,0x00007f73e7d148a0] = 528
 relocation     [0x00007f73e7d14808,0x00007f73e7d14810] = 8
 main code      [0x00007f73e7d14820,0x00007f73e7d14840] = 32
 stub code      [0x00007f73e7d14840,0x00007f73e7d14858] = 24
 metadata       [0x00007f73e7d14858,0x00007f73e7d14860] = 8
 scopes data    [0x00007f73e7d14860,0x00007f73e7d14868] = 8
 scopes pcs     [0x00007f73e7d14868,0x00007f73e7d14898] = 48
 dependencies   [0x00007f73e7d14898,0x00007f73e7d148a0] = 8
----------------------------------------------------------------------
java/lang/ref/Reference.reachabilityFence(Ljava/lang/Object;)V  [0x00007f73e7d14820, 0x00007f73e7d14858]  56 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080000a6f0} 'reachabilityFence' '(Ljava/lang/Object;)V' in 'java/lang/ref/Reference'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d14820: sub    $0x18,%rsp
  0x00007f73e7d14827: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.ref.Reference::reachabilityFence@-1 (line 519)

  0x00007f73e7d1482c: add    $0x10,%rsp
  0x00007f73e7d14830: pop    %rbp
  0x00007f73e7d14831: mov    0x108(%r15),%r10
  0x00007f73e7d14838: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d1483b: retq   
  0x00007f73e7d1483c: hlt    
  0x00007f73e7d1483d: hlt    
  0x00007f73e7d1483e: hlt    
  0x00007f73e7d1483f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d14840: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d14845: callq  0x00007f73e7d1484a
  0x00007f73e7d1484a: subq   $0x5,(%rsp)
  0x00007f73e7d1484f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d14854: hlt    
  0x00007f73e7d14855: hlt    
  0x00007f73e7d14856: hlt    
  0x00007f73e7d14857: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(IIILjava/lang/invoke/MemberName;)I  [0x00007f73e7d14aa0, 0x00007f73e7d14ac0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d36376a0} 'linkToStatic' '(IIILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d14aa0: mov    0x24(%r8),%ebx
  0x00007f73e7d14aa4: mov    0x10(%rbx),%rbx
  0x00007f73e7d14aa8: test   %rbx,%rbx
  0x00007f73e7d14aab: je     0x00007f73e7d14ab4
  0x00007f73e7d14ab1: jmpq   *0x38(%rbx)
  0x00007f73e7d14ab4: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d14ab9: hlt    
  0x00007f73e7d14aba: hlt    
  0x00007f73e7d14abb: hlt    
  0x00007f73e7d14abc: hlt    
  0x00007f73e7d14abd: hlt    
  0x00007f73e7d14abe: hlt    
  0x00007f73e7d14abf: hlt    
Compiled method (c1)   67740  113       3       java.lang.StringBuilder::append (8 bytes)
 total in heap  [0x00007f73e07e5c10,0x00007f73e07e5fb8] = 936
 relocation     [0x00007f73e07e5d88,0x00007f73e07e5dc0] = 56
 main code      [0x00007f73e07e5dc0,0x00007f73e07e5ee0] = 288
 stub code      [0x00007f73e07e5ee0,0x00007f73e07e5f20] = 64
 metadata       [0x00007f73e07e5f20,0x00007f73e07e5f28] = 8
 scopes data    [0x00007f73e07e5f28,0x00007f73e07e5f50] = 40
 scopes pcs     [0x00007f73e07e5f50,0x00007f73e07e5fb0] = 96
 dependencies   [0x00007f73e07e5fb0,0x00007f73e07e5fb8] = 8
----------------------------------------------------------------------
java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;  [0x00007f73e07e5dc0, 0x00007f73e07e5f20]  352 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800386e20} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07e5dc0: mov    0x8(%rsi),%r10d
  0x00007f73e07e5dc4: shl    $0x3,%r10
  0x00007f73e07e5dc8: movabs $0x800000000,%r12
  0x00007f73e07e5dd2: add    %r12,%r10
  0x00007f73e07e5dd5: xor    %r12,%r12
  0x00007f73e07e5dd8: cmp    %rax,%r10
  0x00007f73e07e5ddb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e5de1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e5dec: data16 data16 xchg %ax,%ax
  0x00007f73e07e5df0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e5dfb: data16 data16 xchg %ax,%ax
  0x00007f73e07e5dff: nop
[Verified Entry Point]
  0x00007f73e07e5e00: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e5e07: push   %rbp
  0x00007f73e07e5e08: sub    $0x30,%rsp
  0x00007f73e07e5e0c: movabs $0x7f73d353fc00,%rdi  ;   {metadata(method data for {method} {0x0000000800386e20} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00007f73e07e5e16: mov    0x104(%rdi),%ebx
  0x00007f73e07e5e1c: add    $0x8,%ebx
  0x00007f73e07e5e1f: mov    %ebx,0x104(%rdi)
  0x00007f73e07e5e25: and    $0x1ff8,%ebx
  0x00007f73e07e5e2b: cmp    $0x0,%ebx
  0x00007f73e07e5e2e: je     0x00007f73e07e5e71  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@0 (line 174)

  0x00007f73e07e5e34: mov    %rsi,%rdi
  0x00007f73e07e5e37: movabs $0x7f73d353fc00,%rbx  ;   {metadata(method data for {method} {0x0000000800386e20} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00007f73e07e5e41: addq   $0x1,0x140(%rbx)
  0x00007f73e07e5e49: mov    %rsi,%rdi
  0x00007f73e07e5e4c: mov    %rdi,%rsi          ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 174)

  0x00007f73e07e5e4f: mov    %rdi,0x20(%rsp)
  0x00007f73e07e5e54: data16 xchg %ax,%ax
  0x00007f73e07e5e57: callq  0x00007f73e07e5ee5  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2 (line 174)
                                                ;   {optimized virtual_call}
  0x00007f73e07e5e5c: mov    0x20(%rsp),%rax
  0x00007f73e07e5e61: add    $0x30,%rsp
  0x00007f73e07e5e65: pop    %rbp
  0x00007f73e07e5e66: mov    0x108(%r15),%r10
  0x00007f73e07e5e6d: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e5e70: retq   
  0x00007f73e07e5e71: movabs $0x800386e20,%r10  ;   {metadata({method} {0x0000000800386e20} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00007f73e07e5e7b: mov    %r10,0x8(%rsp)
  0x00007f73e07e5e80: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e5e88: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 174)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e5e8d: jmp    0x00007f73e07e5e34
  0x00007f73e07e5e8f: nop
  0x00007f73e07e5e90: nop
  0x00007f73e07e5e91: mov    0x428(%r15),%rax
  0x00007f73e07e5e98: movabs $0x0,%r10
  0x00007f73e07e5ea2: mov    %r10,0x428(%r15)
  0x00007f73e07e5ea9: movabs $0x0,%r10
  0x00007f73e07e5eb3: mov    %r10,0x430(%r15)
  0x00007f73e07e5eba: add    $0x30,%rsp
  0x00007f73e07e5ebe: pop    %rbp
  0x00007f73e07e5ebf: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e5ec4: hlt    
  0x00007f73e07e5ec5: hlt    
  0x00007f73e07e5ec6: hlt    
  0x00007f73e07e5ec7: hlt    
  0x00007f73e07e5ec8: hlt    
  0x00007f73e07e5ec9: hlt    
  0x00007f73e07e5eca: hlt    
  0x00007f73e07e5ecb: hlt    
  0x00007f73e07e5ecc: hlt    
  0x00007f73e07e5ecd: hlt    
  0x00007f73e07e5ece: hlt    
  0x00007f73e07e5ecf: hlt    
  0x00007f73e07e5ed0: hlt    
  0x00007f73e07e5ed1: hlt    
  0x00007f73e07e5ed2: hlt    
  0x00007f73e07e5ed3: hlt    
  0x00007f73e07e5ed4: hlt    
  0x00007f73e07e5ed5: hlt    
  0x00007f73e07e5ed6: hlt    
  0x00007f73e07e5ed7: hlt    
  0x00007f73e07e5ed8: hlt    
  0x00007f73e07e5ed9: hlt    
  0x00007f73e07e5eda: hlt    
  0x00007f73e07e5edb: hlt    
  0x00007f73e07e5edc: hlt    
  0x00007f73e07e5edd: hlt    
  0x00007f73e07e5ede: hlt    
  0x00007f73e07e5edf: hlt    
[Stub Code]
  0x00007f73e07e5ee0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e5ee5: movabs $0x800382f60,%rbx  ;   {static_stub}
  0x00007f73e07e5eef: jmpq   0x00007f73e026a764  ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x00007f73e07e5ef4: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e5ef9: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e5f03: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e5f07: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e5f0c: hlt    
[Deopt Handler Code]
  0x00007f73e07e5f0d: movabs $0x7f73e07e5f0d,%r10  ;   {section_word}
  0x00007f73e07e5f17: push   %r10
  0x00007f73e07e5f19: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e5f1e: hlt    
  0x00007f73e07e5f1f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 156 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 205 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d14ca0, 0x00007f73e7d14cb8]  24 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3637b38} 'linkToStatic' '(IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d14ca0: mov    0x24(%rcx),%ebx
  0x00007f73e7d14ca3: mov    0x10(%rbx),%rbx
  0x00007f73e7d14ca7: test   %rbx,%rbx
  0x00007f73e7d14caa: je     0x00007f73e7d14cb3
  0x00007f73e7d14cb0: jmpq   *0x38(%rbx)
  0x00007f73e7d14cb3: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)   68383  228       3       jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)
 total in heap  [0x00007f73e07e6010,0x00007f73e07e6740] = 1840
 relocation     [0x00007f73e07e6188,0x00007f73e07e61d8] = 80
 main code      [0x00007f73e07e61e0,0x00007f73e07e6480] = 672
 stub code      [0x00007f73e07e6480,0x00007f73e07e64c0] = 64
 metadata       [0x00007f73e07e64c0,0x00007f73e07e64c8] = 8
 scopes data    [0x00007f73e07e64c8,0x00007f73e07e6570] = 168
 scopes pcs     [0x00007f73e07e6570,0x00007f73e07e6710] = 416
 dependencies   [0x00007f73e07e6710,0x00007f73e07e6718] = 8
 nul chk table  [0x00007f73e07e6718,0x00007f73e07e6740] = 40
----------------------------------------------------------------------
jdk/internal/org/objectweb/asm/ClassWriter.get(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;  [0x00007f73e07e61e0, 0x00007f73e07e64c0]  736 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter'
  # this:     rsi:rsi   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm0:    rdx:rdx   = 'jdk/internal/org/objectweb/asm/Item'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e07e61e0: mov    0x8(%rsi),%r10d
  0x00007f73e07e61e4: shl    $0x3,%r10
  0x00007f73e07e61e8: movabs $0x800000000,%r12
  0x00007f73e07e61f2: add    %r12,%r10
  0x00007f73e07e61f5: xor    %r12,%r12
  0x00007f73e07e61f8: cmp    %rax,%r10
  0x00007f73e07e61fb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e6201: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e620c: data16 data16 xchg %ax,%ax
  0x00007f73e07e6210: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e621b: data16 data16 xchg %ax,%ax
  0x00007f73e07e621f: nop
[Verified Entry Point]
  0x00007f73e07e6220: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e6227: push   %rbp
  0x00007f73e07e6228: sub    $0x40,%rsp
  0x00007f73e07e622c: mov    %rdx,0x28(%rsp)
  0x00007f73e07e6231: movabs $0x7f73d3607170,%rax  ;   {metadata(method data for {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e623b: mov    0x104(%rax),%edi
  0x00007f73e07e6241: add    $0x8,%edi
  0x00007f73e07e6244: mov    %edi,0x104(%rax)
  0x00007f73e07e624a: and    $0x1ff8,%edi
  0x00007f73e07e6250: cmp    $0x0,%edi
  0x00007f73e07e6253: je     0x00007f73e07e63d7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@0 (line 1816)

  0x00007f73e07e6259: mov    0x58(%rsi),%esi    ;*getfield items {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@1 (line 1816)

  0x00007f73e07e625c: mov    0x20(%rdx),%eax    ;*getfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1816)
                                                ; implicit exception: dispatches to 0x00007f73e07e63f8
  0x00007f73e07e625f: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1816)
                                                ; implicit exception: dispatches to 0x00007f73e07e63fd
  0x00007f73e07e6262: mov    %rdx,%rbx
  0x00007f73e07e6265: cmp    $0x80000000,%eax
  0x00007f73e07e626b: jne    0x00007f73e07e627c
  0x00007f73e07e6271: xor    %edx,%edx
  0x00007f73e07e6273: cmp    $0xffffffff,%edi
  0x00007f73e07e6276: je     0x00007f73e07e627f
  0x00007f73e07e627c: cltd   
  0x00007f73e07e627d: idiv   %edi               ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1816)
                                                ; implicit exception: dispatches to 0x00007f73e07e6402
  0x00007f73e07e627f: cmp    0xc(%rsi),%edx
  0x00007f73e07e6282: jae    0x00007f73e07e6407
  0x00007f73e07e6288: movslq %edx,%rdx
  0x00007f73e07e628b: mov    0x10(%rsi,%rdx,4),%edx  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1816)

  0x00007f73e07e628f: nop
  0x00007f73e07e6290: cmp    $0x0,%rdx
  0x00007f73e07e6294: movabs $0x7f73d3607170,%rsi  ;   {metadata(method data for {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e629e: movabs $0x140,%rdi
  0x00007f73e07e62a8: je     0x00007f73e07e62b8
  0x00007f73e07e62ae: movabs $0x150,%rdi
  0x00007f73e07e62b8: mov    (%rsi,%rdi,1),%rax
  0x00007f73e07e62bc: lea    0x1(%rax),%rax
  0x00007f73e07e62c0: mov    %rax,(%rsi,%rdi,1)
  0x00007f73e07e62c4: je     0x00007f73e07e63c4  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@17 (line 1817)

  0x00007f73e07e62ca: mov    0x18(%rdx),%esi    ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1817)
                                                ; implicit exception: dispatches to 0x00007f73e07e6415
  0x00007f73e07e62cd: mov    0x18(%rbx),%edi    ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@25 (line 1817)

  0x00007f73e07e62d0: cmp    %edi,%esi
  0x00007f73e07e62d2: movabs $0x7f73d3607170,%rsi  ;   {metadata(method data for {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e62dc: movabs $0x160,%rdi
  0x00007f73e07e62e6: jne    0x00007f73e07e62f6
  0x00007f73e07e62ec: movabs $0x170,%rdi
  0x00007f73e07e62f6: mov    (%rsi,%rdi,1),%rax
  0x00007f73e07e62fa: lea    0x1(%rax),%rax
  0x00007f73e07e62fe: mov    %rax,(%rsi,%rdi,1)
  0x00007f73e07e6302: jne    0x00007f73e07e6372  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@28 (line 1817)

  0x00007f73e07e6308: mov    %rbx,%rsi
  0x00007f73e07e630b: movabs $0x7f73d3607170,%rdi  ;   {metadata(method data for {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e6315: addq   $0x1,0x180(%rdi)
  0x00007f73e07e631d: mov    %rdx,%rdi
  0x00007f73e07e6320: mov    %rdi,%rdx
  0x00007f73e07e6323: mov    %rbx,%rsi          ;*invokevirtual isEqualTo {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1817)

  0x00007f73e07e6326: mov    %rdi,0x20(%rsp)
  0x00007f73e07e632b: nopl   0x0(%rax)
  0x00007f73e07e632f: callq  0x00007f73e0269100  ; ImmutableOopMap{[32]=Oop [40]=Oop }
                                                ;*invokevirtual isEqualTo {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33 (line 1817)
                                                ;   {optimized virtual_call}
  0x00007f73e07e6334: cmp    $0x0,%eax
  0x00007f73e07e6337: movabs $0x7f73d3607170,%rax  ;   {metadata(method data for {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e6341: movabs $0x1b8,%rsi
  0x00007f73e07e634b: jne    0x00007f73e07e635b
  0x00007f73e07e6351: movabs $0x1c8,%rsi
  0x00007f73e07e635b: mov    (%rax,%rsi,1),%rdi
  0x00007f73e07e635f: lea    0x1(%rdi),%rdi
  0x00007f73e07e6363: mov    %rdi,(%rax,%rsi,1)
  0x00007f73e07e6367: mov    0x20(%rsp),%rdx
  0x00007f73e07e636c: jne    0x00007f73e07e63c4  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@36 (line 1817)

  0x00007f73e07e6372: mov    0x30(%rdx),%eax    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@40 (line 1818)

  0x00007f73e07e6375: movabs $0x7f73d3607170,%rsi  ;   {metadata(method data for {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e637f: mov    0x108(%rsi),%edi
  0x00007f73e07e6385: add    $0x8,%edi
  0x00007f73e07e6388: mov    %edi,0x108(%rsi)
  0x00007f73e07e638e: and    $0xfff8,%edi
  0x00007f73e07e6394: cmp    $0x0,%edi
  0x00007f73e07e6397: je     0x00007f73e07e641a  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)

  0x00007f73e07e639d: mov    0x108(%r15),%r10   ; ImmutableOopMap{[40]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)

  0x00007f73e07e63a4: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e63a7: movabs $0x7f73d3607170,%rsi  ;   {metadata(method data for {method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e63b1: incl   0x1d8(%rsi)
  0x00007f73e07e63b7: mov    %rax,%rdx
  0x00007f73e07e63ba: mov    0x28(%rsp),%rbx
  0x00007f73e07e63bf: jmpq   0x00007f73e07e6290  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)

  0x00007f73e07e63c4: mov    %rdx,%rax
  0x00007f73e07e63c7: add    $0x40,%rsp
  0x00007f73e07e63cb: pop    %rbp
  0x00007f73e07e63cc: mov    0x108(%r15),%r10
  0x00007f73e07e63d3: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e63d6: retq   
  0x00007f73e07e63d7: movabs $0x8001c3568,%r10  ;   {metadata({method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e63e1: mov    %r10,0x8(%rsp)
  0x00007f73e07e63e6: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e63ee: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop [40]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@-1 (line 1816)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e63f3: jmpq   0x00007f73e07e6259
  0x00007f73e07e63f8: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop [40]=Oop rsi=Oop }
                                                ;*getfield hashCode {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5 (line 1816)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e63fd: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop [40]=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12 (line 1816)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e6402: callq  0x00007f73e03306a0  ; ImmutableOopMap{rsi=Oop rbx=Oop [40]=Oop }
                                                ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13 (line 1816)
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00007f73e07e6407: mov    %rdx,(%rsp)
  0x00007f73e07e640b: mov    %rsi,0x8(%rsp)
  0x00007f73e07e6410: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop rbx=Oop [40]=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14 (line 1816)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e6415: callq  0x00007f73e03308a0  ; ImmutableOopMap{rbx=Oop [40]=Oop rdx=Oop }
                                                ;*getfield type {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21 (line 1817)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e641a: movabs $0x8001c3568,%r10  ;   {metadata({method} {0x00000008001c3568} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x00007f73e07e6424: mov    %r10,0x8(%rsp)
  0x00007f73e07e6429: movq   $0x2c,(%rsp)
  0x00007f73e07e6431: callq  0x00007f73e0334d80  ; ImmutableOopMap{[40]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44 (line 1818)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e6436: jmpq   0x00007f73e07e639d
  0x00007f73e07e643b: nop
  0x00007f73e07e643c: nop
  0x00007f73e07e643d: mov    0x428(%r15),%rax
  0x00007f73e07e6444: movabs $0x0,%r10
  0x00007f73e07e644e: mov    %r10,0x428(%r15)
  0x00007f73e07e6455: movabs $0x0,%r10
  0x00007f73e07e645f: mov    %r10,0x430(%r15)
  0x00007f73e07e6466: add    $0x40,%rsp
  0x00007f73e07e646a: pop    %rbp
  0x00007f73e07e646b: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e6470: hlt    
  0x00007f73e07e6471: hlt    
  0x00007f73e07e6472: hlt    
  0x00007f73e07e6473: hlt    
  0x00007f73e07e6474: hlt    
  0x00007f73e07e6475: hlt    
  0x00007f73e07e6476: hlt    
  0x00007f73e07e6477: hlt    
  0x00007f73e07e6478: hlt    
  0x00007f73e07e6479: hlt    
  0x00007f73e07e647a: hlt    
  0x00007f73e07e647b: hlt    
  0x00007f73e07e647c: hlt    
  0x00007f73e07e647d: hlt    
  0x00007f73e07e647e: hlt    
  0x00007f73e07e647f: hlt    
[Stub Code]
  0x00007f73e07e6480: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e6485: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e648f: jmpq   0x00007f73e07e648f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e6494: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e6499: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e64a3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e64a7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e64ac: hlt    
[Deopt Handler Code]
  0x00007f73e07e64ad: movabs $0x7f73e07e64ad,%r10  ;   {section_word}
  0x00007f73e07e64b7: push   %r10
  0x00007f73e07e64b9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e64be: hlt    
  0x00007f73e07e64bf: hlt    

ImmutableOopMap{[32]=Oop [40]=Oop }pc offsets: 340 
ImmutableOopMap{[40]=Oop rax=Oop }pc offsets: 452 
ImmutableOopMap{rsi=Oop rdx=Oop [40]=Oop }pc offsets: 531 
ImmutableOopMap{rdx=Oop [40]=Oop rsi=Oop }pc offsets: 541 546 
ImmutableOopMap{rsi=Oop rbx=Oop [40]=Oop }pc offsets: 551 565 
ImmutableOopMap{rbx=Oop [40]=Oop rdx=Oop }pc offsets: 570 
ImmutableOopMap{[40]=Oop rax=Oop }pc offsets: 598 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(II)Ljava/lang/Object;  [0x00007f73e7d14ea0, 0x00007f73e7d14ec0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3638440} 'invokeBasic' '(II)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d14ea0: mov    0x14(%rsi),%ebx
  0x00007f73e7d14ea3: mov    0x28(%rbx),%ebx
  0x00007f73e7d14ea6: mov    0x24(%rbx),%ebx
  0x00007f73e7d14ea9: mov    0x10(%rbx),%rbx
  0x00007f73e7d14ead: test   %rbx,%rbx
  0x00007f73e7d14eb0: je     0x00007f73e7d14eb9
  0x00007f73e7d14eb6: jmpq   *0x38(%rbx)
  0x00007f73e7d14eb9: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d14ebe: hlt    
  0x00007f73e7d14ebf: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d150a0, 0x00007f73e7d150c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d36386d0} 'linkToSpecial' '(Ljava/lang/Object;IILjava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d150a0: cmp    (%rsi),%rax
  0x00007f73e7d150a3: mov    0x24(%r8),%ebx
  0x00007f73e7d150a7: mov    0x10(%rbx),%rbx
  0x00007f73e7d150ab: test   %rbx,%rbx
  0x00007f73e7d150ae: je     0x00007f73e7d150b7
  0x00007f73e7d150b4: jmpq   *0x38(%rbx)
  0x00007f73e7d150b7: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d150bc: hlt    
  0x00007f73e7d150bd: hlt    
  0x00007f73e7d150be: hlt    
  0x00007f73e7d150bf: hlt    
Compiled method (c1)   69933  184       3       java.lang.invoke.MemberName::testFlags (16 bytes)
 total in heap  [0x00007f73e07e6790,0x00007f73e07e6b70] = 992
 relocation     [0x00007f73e07e6908,0x00007f73e07e6930] = 40
 main code      [0x00007f73e07e6940,0x00007f73e07e6a80] = 320
 stub code      [0x00007f73e07e6a80,0x00007f73e07e6ab0] = 48
 metadata       [0x00007f73e07e6ab0,0x00007f73e07e6ab8] = 8
 scopes data    [0x00007f73e07e6ab8,0x00007f73e07e6ae8] = 48
 scopes pcs     [0x00007f73e07e6ae8,0x00007f73e07e6b68] = 128
 dependencies   [0x00007f73e07e6b68,0x00007f73e07e6b70] = 8
----------------------------------------------------------------------
java/lang/invoke/MemberName.testFlags(II)Z  [0x00007f73e07e6940, 0x00007f73e07e6ab0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080039a408} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName'
  # this:     rsi:rsi   = 'java/lang/invoke/MemberName'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07e6940: mov    0x8(%rsi),%r10d
  0x00007f73e07e6944: shl    $0x3,%r10
  0x00007f73e07e6948: movabs $0x800000000,%r12
  0x00007f73e07e6952: add    %r12,%r10
  0x00007f73e07e6955: xor    %r12,%r12
  0x00007f73e07e6958: cmp    %rax,%r10
  0x00007f73e07e695b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e6961: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e696c: data16 data16 xchg %ax,%ax
  0x00007f73e07e6970: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e697b: data16 data16 xchg %ax,%ax
  0x00007f73e07e697f: nop
[Verified Entry Point]
  0x00007f73e07e6980: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e6987: push   %rbp
  0x00007f73e07e6988: sub    $0x30,%rsp
  0x00007f73e07e698c: movabs $0x7f73d35f8b68,%rax  ;   {metadata(method data for {method} {0x000000080039a408} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x00007f73e07e6996: mov    0x104(%rax),%edi
  0x00007f73e07e699c: add    $0x8,%edi
  0x00007f73e07e699f: mov    %edi,0x104(%rax)
  0x00007f73e07e69a5: and    $0x1ff8,%edi
  0x00007f73e07e69ab: cmp    $0x0,%edi
  0x00007f73e07e69ae: je     0x00007f73e07e6a24  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@0 (line 363)

  0x00007f73e07e69b4: mov    0xc(%rsi),%eax     ;*getfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@1 (line 363)

  0x00007f73e07e69b7: and    %rdx,%rax
  0x00007f73e07e69ba: cmp    %ecx,%eax
  0x00007f73e07e69bc: movabs $0x7f73d35f8b68,%rax  ;   {metadata(method data for {method} {0x000000080039a408} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x00007f73e07e69c6: movabs $0x140,%rsi
  0x00007f73e07e69d0: jne    0x00007f73e07e69e0
  0x00007f73e07e69d6: movabs $0x150,%rsi
  0x00007f73e07e69e0: mov    (%rax,%rsi,1),%rdi
  0x00007f73e07e69e4: lea    0x1(%rdi),%rdi
  0x00007f73e07e69e8: mov    %rdi,(%rax,%rsi,1)
  0x00007f73e07e69ec: jne    0x00007f73e07e6a0c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@7 (line 363)

  0x00007f73e07e69f2: movabs $0x7f73d35f8b68,%rax  ;   {metadata(method data for {method} {0x000000080039a408} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x00007f73e07e69fc: incl   0x160(%rax)
  0x00007f73e07e6a02: mov    $0x1,%eax
  0x00007f73e07e6a07: jmpq   0x00007f73e07e6a11  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@11 (line 363)

  0x00007f73e07e6a0c: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@15 (line 363)

  0x00007f73e07e6a11: and    $0x1,%eax
  0x00007f73e07e6a14: add    $0x30,%rsp
  0x00007f73e07e6a18: pop    %rbp
  0x00007f73e07e6a19: mov    0x108(%r15),%r10
  0x00007f73e07e6a20: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e6a23: retq   
  0x00007f73e07e6a24: movabs $0x80039a408,%r10  ;   {metadata({method} {0x000000080039a408} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x00007f73e07e6a2e: mov    %r10,0x8(%rsp)
  0x00007f73e07e6a33: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e6a3b: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1 (line 363)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e6a40: jmpq   0x00007f73e07e69b4
  0x00007f73e07e6a45: nop
  0x00007f73e07e6a46: nop
  0x00007f73e07e6a47: mov    0x428(%r15),%rax
  0x00007f73e07e6a4e: movabs $0x0,%r10
  0x00007f73e07e6a58: mov    %r10,0x428(%r15)
  0x00007f73e07e6a5f: movabs $0x0,%r10
  0x00007f73e07e6a69: mov    %r10,0x430(%r15)
  0x00007f73e07e6a70: add    $0x30,%rsp
  0x00007f73e07e6a74: pop    %rbp
  0x00007f73e07e6a75: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e6a7a: hlt    
  0x00007f73e07e6a7b: hlt    
  0x00007f73e07e6a7c: hlt    
  0x00007f73e07e6a7d: hlt    
  0x00007f73e07e6a7e: hlt    
  0x00007f73e07e6a7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07e6a80: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07e6a85: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e6a8f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e6a93: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e6a98: hlt    
[Deopt Handler Code]
  0x00007f73e07e6a99: movabs $0x7f73e07e6a99,%r10  ;   {section_word}
  0x00007f73e07e6aa3: push   %r10
  0x00007f73e07e6aa5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e6aaa: hlt    
  0x00007f73e07e6aab: hlt    
  0x00007f73e07e6aac: hlt    
  0x00007f73e07e6aad: hlt    
  0x00007f73e07e6aae: hlt    
  0x00007f73e07e6aaf: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 256 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I  [0x00007f73e7d152a0, 0x00007f73e7d152c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3639698} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d152a0: cmp    (%rsi),%rax
  0x00007f73e7d152a3: mov    0x24(%r8),%ebx
  0x00007f73e7d152a7: mov    0x10(%rbx),%rbx
  0x00007f73e7d152ab: test   %rbx,%rbx
  0x00007f73e7d152ae: je     0x00007f73e7d152b7
  0x00007f73e7d152b4: jmpq   *0x38(%rbx)
  0x00007f73e7d152b7: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d152bc: hlt    
  0x00007f73e7d152bd: hlt    
  0x00007f73e7d152be: hlt    
  0x00007f73e7d152bf: hlt    
Compiled method (c1)   70586  234       3       java.lang.invoke.MethodType::hashCode (53 bytes)
 total in heap  [0x00007f73e07e6b90,0x00007f73e07e7328] = 1944
 relocation     [0x00007f73e07e6d08,0x00007f73e07e6d60] = 88
 main code      [0x00007f73e07e6d60,0x00007f73e07e70a0] = 832
 stub code      [0x00007f73e07e70a0,0x00007f73e07e70f0] = 80
 metadata       [0x00007f73e07e70f0,0x00007f73e07e70f8] = 8
 scopes data    [0x00007f73e07e70f8,0x00007f73e07e71b0] = 184
 scopes pcs     [0x00007f73e07e71b0,0x00007f73e07e7300] = 336
 dependencies   [0x00007f73e07e7300,0x00007f73e07e7308] = 8
 nul chk table  [0x00007f73e07e7308,0x00007f73e07e7328] = 32
----------------------------------------------------------------------
java/lang/invoke/MethodType.hashCode()I  [0x00007f73e07e6d60, 0x00007f73e07e70f0]  912 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType'
  #           [sp+0x60]  (sp of caller)
  0x00007f73e07e6d60: mov    0x8(%rsi),%r10d
  0x00007f73e07e6d64: shl    $0x3,%r10
  0x00007f73e07e6d68: movabs $0x800000000,%r12
  0x00007f73e07e6d72: add    %r12,%r10
  0x00007f73e07e6d75: xor    %r12,%r12
  0x00007f73e07e6d78: cmp    %rax,%r10
  0x00007f73e07e6d7b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e6d81: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e6d8c: data16 data16 xchg %ax,%ax
  0x00007f73e07e6d90: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e6d9b: data16 data16 xchg %ax,%ax
  0x00007f73e07e6d9f: nop
[Verified Entry Point]
  0x00007f73e07e6da0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e6da7: push   %rbp
  0x00007f73e07e6da8: sub    $0x50,%rsp
  0x00007f73e07e6dac: movabs $0x7f73d3626c80,%rdi  ;   {metadata(method data for {method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e6db6: mov    0x104(%rdi),%ebx
  0x00007f73e07e6dbc: add    $0x8,%ebx
  0x00007f73e07e6dbf: mov    %ebx,0x104(%rdi)
  0x00007f73e07e6dc5: and    $0x1ff8,%ebx
  0x00007f73e07e6dcb: cmp    $0x0,%ebx
  0x00007f73e07e6dce: je     0x00007f73e07e7016  ;*bipush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@0 (line 812)

  0x00007f73e07e6dd4: mov    0xc(%rsi),%edi     ;*getfield rtype {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@3 (line 812)

  0x00007f73e07e6dd7: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x00007f73e07e7037
  0x00007f73e07e6dda: mov    %rdi,%rbx
  0x00007f73e07e6ddd: movabs $0x7f73d3626c80,%rax  ;   {metadata(method data for {method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e6de7: mov    0x8(%rbx),%ebx
  0x00007f73e07e6dea: shl    $0x3,%rbx
  0x00007f73e07e6dee: movabs $0x800000000,%r12
  0x00007f73e07e6df8: add    %r12,%rbx
  0x00007f73e07e6dfb: xor    %r12,%r12
  0x00007f73e07e6dfe: cmp    0x150(%rax),%rbx
  0x00007f73e07e6e05: jne    0x00007f73e07e6e14
  0x00007f73e07e6e07: addq   $0x1,0x158(%rax)
  0x00007f73e07e6e0f: jmpq   0x00007f73e07e6e7a
  0x00007f73e07e6e14: cmp    0x160(%rax),%rbx
  0x00007f73e07e6e1b: jne    0x00007f73e07e6e2a
  0x00007f73e07e6e1d: addq   $0x1,0x168(%rax)
  0x00007f73e07e6e25: jmpq   0x00007f73e07e6e7a
  0x00007f73e07e6e2a: cmpq   $0x0,0x150(%rax)
  0x00007f73e07e6e35: jne    0x00007f73e07e6e4e
  0x00007f73e07e6e37: mov    %rbx,0x150(%rax)
  0x00007f73e07e6e3e: movq   $0x1,0x158(%rax)
  0x00007f73e07e6e49: jmpq   0x00007f73e07e6e7a
  0x00007f73e07e6e4e: cmpq   $0x0,0x160(%rax)
  0x00007f73e07e6e59: jne    0x00007f73e07e6e72
  0x00007f73e07e6e5b: mov    %rbx,0x160(%rax)
  0x00007f73e07e6e62: movq   $0x1,0x168(%rax)
  0x00007f73e07e6e6d: jmpq   0x00007f73e07e6e7a
  0x00007f73e07e6e72: addq   $0x1,0x140(%rax)
  0x00007f73e07e6e7a: mov    %rsi,0x20(%rsp)
  0x00007f73e07e6e7f: mov    %rdi,%rsi          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 812)

  0x00007f73e07e6e82: nopl   0x0(%rax,%rax,1)
  0x00007f73e07e6e87: callq  0x00007f73e7d0c1e8  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 812)
                                                ;   {optimized virtual_call}
  0x00007f73e07e6e8c: add    $0x1f,%eax
  0x00007f73e07e6e8f: mov    0x20(%rsp),%rsi
  0x00007f73e07e6e94: mov    0x10(%rsi),%edi    ;*getfield ptypes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@12 (line 813)

  0x00007f73e07e6e97: mov    %rdi,0x38(%rsp)
  0x00007f73e07e6e9c: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 813)
                                                ; implicit exception: dispatches to 0x00007f73e07e703c
  0x00007f73e07e6e9f: mov    %ebx,0x30(%rsp)
  0x00007f73e07e6ea3: mov    $0x0,%edx
  0x00007f73e07e6ea8: jmpq   0x00007f73e07e6fce  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@22 (line 813)

  0x00007f73e07e6ead: data16 xchg %ax,%ax
  0x00007f73e07e6eb0: movslq %edx,%rsi
  0x00007f73e07e6eb3: mov    0x10(%rdi,%rsi,4),%esi  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@31 (line 813)

  0x00007f73e07e6eb7: cmp    (%rsi),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 814)
                                                ; implicit exception: dispatches to 0x00007f73e07e7041
  0x00007f73e07e6eba: mov    %rsi,%rcx
  0x00007f73e07e6ebd: movabs $0x7f73d3626c80,%r8  ;   {metadata(method data for {method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e6ec7: mov    0x8(%rcx),%ecx
  0x00007f73e07e6eca: shl    $0x3,%rcx
  0x00007f73e07e6ece: movabs $0x800000000,%r12
  0x00007f73e07e6ed8: add    %r12,%rcx
  0x00007f73e07e6edb: xor    %r12,%r12
  0x00007f73e07e6ede: cmp    0x1a8(%r8),%rcx
  0x00007f73e07e6ee5: jne    0x00007f73e07e6ef4
  0x00007f73e07e6ee7: addq   $0x1,0x1b0(%r8)
  0x00007f73e07e6eef: jmpq   0x00007f73e07e6f5a
  0x00007f73e07e6ef4: cmp    0x1b8(%r8),%rcx
  0x00007f73e07e6efb: jne    0x00007f73e07e6f0a
  0x00007f73e07e6efd: addq   $0x1,0x1c0(%r8)
  0x00007f73e07e6f05: jmpq   0x00007f73e07e6f5a
  0x00007f73e07e6f0a: cmpq   $0x0,0x1a8(%r8)
  0x00007f73e07e6f15: jne    0x00007f73e07e6f2e
  0x00007f73e07e6f17: mov    %rcx,0x1a8(%r8)
  0x00007f73e07e6f1e: movq   $0x1,0x1b0(%r8)
  0x00007f73e07e6f29: jmpq   0x00007f73e07e6f5a
  0x00007f73e07e6f2e: cmpq   $0x0,0x1b8(%r8)
  0x00007f73e07e6f39: jne    0x00007f73e07e6f52
  0x00007f73e07e6f3b: mov    %rcx,0x1b8(%r8)
  0x00007f73e07e6f42: movq   $0x1,0x1c0(%r8)
  0x00007f73e07e6f4d: jmpq   0x00007f73e07e6f5a
  0x00007f73e07e6f52: addq   $0x1,0x198(%r8)
  0x00007f73e07e6f5a: mov    %rax,%rcx
  0x00007f73e07e6f5d: shl    $0x5,%eax
  0x00007f73e07e6f60: sub    %ecx,%eax
  0x00007f73e07e6f62: mov    %edx,0x2c(%rsp)
  0x00007f73e07e6f66: mov    %eax,0x28(%rsp)
  0x00007f73e07e6f6a: nopl   0x0(%rax,%rax,1)
  0x00007f73e07e6f6f: callq  0x00007f73e7d0c1e8  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 814)
                                                ;   {optimized virtual_call}
  0x00007f73e07e6f74: mov    0x28(%rsp),%esi
  0x00007f73e07e6f78: add    %eax,%esi
  0x00007f73e07e6f7a: mov    0x2c(%rsp),%edx
  0x00007f73e07e6f7e: inc    %edx
  0x00007f73e07e6f80: movabs $0x7f73d3626c80,%rax  ;   {metadata(method data for {method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e6f8a: mov    0x108(%rax),%edi
  0x00007f73e07e6f90: add    $0x8,%edi
  0x00007f73e07e6f93: mov    %edi,0x108(%rax)
  0x00007f73e07e6f99: and    $0xfff8,%edi
  0x00007f73e07e6f9f: cmp    $0x0,%edi
  0x00007f73e07e6fa2: je     0x00007f73e07e7046  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 813)

  0x00007f73e07e6fa8: mov    0x108(%r15),%r10   ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 813)

  0x00007f73e07e6faf: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e6fb2: movabs $0x7f73d3626c80,%rax  ;   {metadata(method data for {method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e6fbc: incl   0x1d0(%rax)
  0x00007f73e07e6fc2: mov    %rsi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 813)

  0x00007f73e07e6fc5: mov    0x30(%rsp),%ebx
  0x00007f73e07e6fc9: mov    0x38(%rsp),%rdi
  0x00007f73e07e6fce: cmp    %ebx,%edx
  0x00007f73e07e6fd0: movabs $0x7f73d3626c80,%rsi  ;   {metadata(method data for {method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e6fda: movabs $0x188,%rcx
  0x00007f73e07e6fe4: jl     0x00007f73e07e6ff4
  0x00007f73e07e6fea: movabs $0x178,%rcx
  0x00007f73e07e6ff4: mov    (%rsi,%rcx,1),%r8
  0x00007f73e07e6ff8: lea    0x1(%r8),%r8
  0x00007f73e07e6ffc: mov    %r8,(%rsi,%rcx,1)
  0x00007f73e07e7000: jl     0x00007f73e07e6eb0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@25 (line 813)

  0x00007f73e07e7006: add    $0x50,%rsp
  0x00007f73e07e700a: pop    %rbp
  0x00007f73e07e700b: mov    0x108(%r15),%r10
  0x00007f73e07e7012: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e7015: retq   
  0x00007f73e07e7016: movabs $0x80038f488,%r10  ;   {metadata({method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e7020: mov    %r10,0x8(%rsp)
  0x00007f73e07e7025: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e702d: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MethodType::hashCode@-1 (line 812)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e7032: jmpq   0x00007f73e07e6dd4
  0x00007f73e07e7037: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop rdi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@6 (line 812)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e703c: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdi=Oop [56]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@17 (line 813)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e7041: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdi=Oop [56]=Oop rsi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@40 (line 814)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e7046: movabs $0x80038f488,%r10  ;   {metadata({method} {0x000000080038f488} 'hashCode' '()I' in 'java/lang/invoke/MethodType')}
  0x00007f73e07e7050: mov    %r10,0x8(%rsp)
  0x00007f73e07e7055: movq   $0x30,(%rsp)
  0x00007f73e07e705d: callq  0x00007f73e0334d80  ; ImmutableOopMap{[56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::hashCode@48 (line 813)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e7062: jmpq   0x00007f73e07e6fa8
  0x00007f73e07e7067: nop
  0x00007f73e07e7068: nop
  0x00007f73e07e7069: mov    0x428(%r15),%rax
  0x00007f73e07e7070: movabs $0x0,%r10
  0x00007f73e07e707a: mov    %r10,0x428(%r15)
  0x00007f73e07e7081: movabs $0x0,%r10
  0x00007f73e07e708b: mov    %r10,0x430(%r15)
  0x00007f73e07e7092: add    $0x50,%rsp
  0x00007f73e07e7096: pop    %rbp
  0x00007f73e07e7097: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e709c: hlt    
  0x00007f73e07e709d: hlt    
  0x00007f73e07e709e: hlt    
  0x00007f73e07e709f: hlt    
[Stub Code]
  0x00007f73e07e70a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e70a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e70af: jmpq   0x00007f73e07e70af  ;   {runtime_call}
  0x00007f73e07e70b4: nop
  0x00007f73e07e70b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e70bf: jmpq   0x00007f73e07e70bf  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e70c4: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e70c9: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e70d3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e70d7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e70dc: hlt    
[Deopt Handler Code]
  0x00007f73e07e70dd: movabs $0x7f73e07e70dd,%r10  ;   {section_word}
  0x00007f73e07e70e7: push   %r10
  0x00007f73e07e70e9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e70ee: hlt    
  0x00007f73e07e70ef: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 300 
ImmutableOopMap{[56]=Oop }pc offsets: 532 591 
ImmutableOopMap{rsi=Oop }pc offsets: 722 
ImmutableOopMap{rsi=Oop rdi=Oop }pc offsets: 732 
ImmutableOopMap{rdi=Oop [56]=Oop }pc offsets: 737 
ImmutableOopMap{rdi=Oop [56]=Oop rsi=Oop }pc offsets: 742 
ImmutableOopMap{[56]=Oop }pc offsets: 770 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007f73e7d154a0, 0x00007f73e7d154c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d36398a0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rsi:rsi   = 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d154a0: mov    0x14(%rsi),%ebx
  0x00007f73e7d154a3: mov    0x28(%rbx),%ebx
  0x00007f73e7d154a6: mov    0x24(%rbx),%ebx
  0x00007f73e7d154a9: mov    0x10(%rbx),%rbx
  0x00007f73e7d154ad: test   %rbx,%rbx
  0x00007f73e7d154b0: je     0x00007f73e7d154b9
  0x00007f73e7d154b6: jmpq   *0x38(%rbx)
  0x00007f73e7d154b9: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d154be: hlt    
  0x00007f73e7d154bf: hlt    
Compiled method (c1)   71825  237       3       java.lang.StringLatin1::replace (196 bytes)
 total in heap  [0x00007f73e07e7390,0x00007f73e07e8b18] = 6024
 relocation     [0x00007f73e07e7508,0x00007f73e07e75f0] = 232
 main code      [0x00007f73e07e7600,0x00007f73e07e8240] = 3136
 stub code      [0x00007f73e07e8240,0x00007f73e07e8290] = 80
 metadata       [0x00007f73e07e8290,0x00007f73e07e82b8] = 40
 scopes data    [0x00007f73e07e82b8,0x00007f73e07e85f8] = 832
 scopes pcs     [0x00007f73e07e85f8,0x00007f73e07e8af8] = 1280
 dependencies   [0x00007f73e07e8af8,0x00007f73e07e8b00] = 8
 nul chk table  [0x00007f73e07e8b00,0x00007f73e07e8b18] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.replace([BCC)Ljava/lang/String;  [0x00007f73e07e7600, 0x00007f73e07e8290]  3216 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = char
  # parm2:    rcx       = char
  #           [sp+0xa0]  (sp of caller)
  0x00007f73e07e7600: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e7607: push   %rbp
  0x00007f73e07e7608: sub    $0x90,%rsp
  0x00007f73e07e760f: movabs $0x7f73d359d0d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7619: mov    0x104(%rbx),%edi
  0x00007f73e07e761f: add    $0x8,%edi
  0x00007f73e07e7622: mov    %edi,0x104(%rbx)
  0x00007f73e07e7628: and    $0x1ff8,%edi
  0x00007f73e07e762e: cmp    $0x0,%edi
  0x00007f73e07e7631: je     0x00007f73e07e7f81  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@0 (line 297)

  0x00007f73e07e7637: movabs $0x7f73d359d0d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7641: addq   $0x1,0x140(%rbx)
  0x00007f73e07e7649: movabs $0x7f73d3530f40,%rbx  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e7653: mov    0x104(%rbx),%edi
  0x00007f73e07e7659: add    $0x8,%edi
  0x00007f73e07e765c: mov    %edi,0x104(%rbx)
  0x00007f73e07e7662: and    $0x7ffff8,%edi
  0x00007f73e07e7668: cmp    $0x0,%edi
  0x00007f73e07e766b: je     0x00007f73e07e7fa2
  0x00007f73e07e7671: mov    %rdx,%rbx
  0x00007f73e07e7674: shr    $0x8,%ebx
  0x00007f73e07e7677: cmp    $0x0,%ebx
  0x00007f73e07e767a: movabs $0x7f73d3530f40,%rbx  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e7684: movabs $0x140,%rdi
  0x00007f73e07e768e: jne    0x00007f73e07e769e
  0x00007f73e07e7694: movabs $0x150,%rdi
  0x00007f73e07e769e: mov    (%rbx,%rdi,1),%rax
  0x00007f73e07e76a2: lea    0x1(%rax),%rax
  0x00007f73e07e76a6: mov    %rax,(%rbx,%rdi,1)
  0x00007f73e07e76aa: jne    0x00007f73e07e76ca  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::replace@1 (line 297)

  0x00007f73e07e76b0: movabs $0x7f73d3530f40,%rbx  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e76ba: incl   0x160(%rbx)
  0x00007f73e07e76c0: mov    $0x1,%ebx
  0x00007f73e07e76c5: jmpq   0x00007f73e07e76cf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::replace@1 (line 297)

  0x00007f73e07e76ca: mov    $0x0,%ebx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::replace@1 (line 297)

  0x00007f73e07e76cf: and    $0x1,%ebx
  0x00007f73e07e76d2: cmp    $0x0,%ebx
  0x00007f73e07e76d5: movabs $0x7f73d359d0d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e76df: movabs $0x150,%rdi
  0x00007f73e07e76e9: je     0x00007f73e07e76f9
  0x00007f73e07e76ef: movabs $0x160,%rdi
  0x00007f73e07e76f9: mov    (%rbx,%rdi,1),%rax
  0x00007f73e07e76fd: lea    0x1(%rax),%rax
  0x00007f73e07e7701: mov    %rax,(%rbx,%rdi,1)
  0x00007f73e07e7705: je     0x00007f73e07e7f64  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@4 (line 297)

  0x00007f73e07e770b: mov    0xc(%rsi),%r8d     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@8 (line 298)
                                                ; implicit exception: dispatches to 0x00007f73e07e7fc3
  0x00007f73e07e770f: mov    $0xffffffff,%ebx
  0x00007f73e07e7714: jmpq   0x00007f73e07e77c9  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@13 (line 300)

  0x00007f73e07e7719: nopl   0x0(%rax)
  0x00007f73e07e7720: cmp    0xc(%rsi),%ebx
  0x00007f73e07e7723: jae    0x00007f73e07e7fc8
  0x00007f73e07e7729: movslq %ebx,%rdi
  0x00007f73e07e772c: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@25 (line 301)

  0x00007f73e07e7731: mov    %rdx,%rax
  0x00007f73e07e7734: movsbl %al,%eax
  0x00007f73e07e7737: cmp    %eax,%edi
  0x00007f73e07e7739: mov    $0x8,%r9d
  0x00007f73e07e773f: jne    0x00007f73e07e774b
  0x00007f73e07e7745: mov    $0x0,%r9d
  0x00007f73e07e774b: movabs $0x7f73d359d0d8,%r11  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7755: mov    0x108(%r11),%r13d
  0x00007f73e07e775c: add    %r9d,%r13d
  0x00007f73e07e775f: mov    %r13d,0x108(%r11)
  0x00007f73e07e7766: cmp    $0x0,%r9d
  0x00007f73e07e776a: jne    0x00007f73e07e7776
  0x00007f73e07e7770: mov    $0x8,%r13d
  0x00007f73e07e7776: and    $0xfff8,%r13d
  0x00007f73e07e777d: cmp    $0x0,%r13d
  0x00007f73e07e7781: je     0x00007f73e07e7fd6  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@28 (line 301)

  0x00007f73e07e7787: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@28 (line 301)

  0x00007f73e07e778e: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e7791: cmp    %eax,%edi
  0x00007f73e07e7793: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e779d: movabs $0x1a0,%rax
  0x00007f73e07e77a7: je     0x00007f73e07e77b7
  0x00007f73e07e77ad: movabs $0x190,%rax
  0x00007f73e07e77b7: mov    (%rdi,%rax,1),%r9
  0x00007f73e07e77bb: lea    0x1(%r9),%r9
  0x00007f73e07e77bf: mov    %r9,(%rdi,%rax,1)
  0x00007f73e07e77c3: je     0x00007f73e07e7809  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@28 (line 301)

  0x00007f73e07e77c9: inc    %ebx
  0x00007f73e07e77cb: cmp    %r8d,%ebx
  0x00007f73e07e77ce: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e77d8: movabs $0x170,%rax
  0x00007f73e07e77e2: jge    0x00007f73e07e77f2
  0x00007f73e07e77e8: movabs $0x180,%rax
  0x00007f73e07e77f2: mov    (%rdi,%rax,1),%r9
  0x00007f73e07e77f6: lea    0x1(%r9),%r9
  0x00007f73e07e77fa: mov    %r9,(%rdi,%rax,1)
  0x00007f73e07e77fe: jge    0x00007f73e07e7819
  0x00007f73e07e7804: jmpq   0x00007f73e07e7720  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@19 (line 300)

  0x00007f73e07e7809: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7813: incl   0x1b0(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@31 (line 302)

  0x00007f73e07e7819: cmp    %r8d,%ebx
  0x00007f73e07e781c: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7826: movabs $0x1c8,%rax
  0x00007f73e07e7830: jge    0x00007f73e07e7840
  0x00007f73e07e7836: movabs $0x1d8,%rax
  0x00007f73e07e7840: mov    (%rdi,%rax,1),%r9
  0x00007f73e07e7844: lea    0x1(%r9),%r9
  0x00007f73e07e7848: mov    %r9,(%rdi,%rax,1)
  0x00007f73e07e784c: jge    0x00007f73e07e7f64  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@37 (line 305)

  0x00007f73e07e7852: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e785c: addq   $0x1,0x1e8(%rdi)
  0x00007f73e07e7864: movabs $0x7f73d3530f40,%rdi  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e786e: mov    0x104(%rdi),%eax
  0x00007f73e07e7874: add    $0x8,%eax
  0x00007f73e07e7877: mov    %eax,0x104(%rdi)
  0x00007f73e07e787d: and    $0x7ffff8,%eax
  0x00007f73e07e7883: cmp    $0x0,%eax
  0x00007f73e07e7886: je     0x00007f73e07e7ff7
  0x00007f73e07e788c: mov    %rcx,%rdi
  0x00007f73e07e788f: shr    $0x8,%edi
  0x00007f73e07e7892: cmp    $0x0,%edi
  0x00007f73e07e7895: movabs $0x7f73d3530f40,%rdi  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e789f: movabs $0x140,%rax
  0x00007f73e07e78a9: jne    0x00007f73e07e78b9
  0x00007f73e07e78af: movabs $0x150,%rax
  0x00007f73e07e78b9: mov    (%rdi,%rax,1),%r9
  0x00007f73e07e78bd: lea    0x1(%r9),%r9
  0x00007f73e07e78c1: mov    %r9,(%rdi,%rax,1)
  0x00007f73e07e78c5: jne    0x00007f73e07e78e5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::replace@41 (line 306)

  0x00007f73e07e78cb: movabs $0x7f73d3530f40,%rdi  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e78d5: incl   0x160(%rdi)
  0x00007f73e07e78db: mov    $0x1,%edi
  0x00007f73e07e78e0: jmpq   0x00007f73e07e78ea  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::replace@41 (line 306)

  0x00007f73e07e78e5: mov    $0x0,%edi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::replace@41 (line 306)

  0x00007f73e07e78ea: and    $0x1,%edi
  0x00007f73e07e78ed: cmp    $0x0,%edi
  0x00007f73e07e78f0: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e78fa: movabs $0x1f8,%rax
  0x00007f73e07e7904: je     0x00007f73e07e7914
  0x00007f73e07e790a: movabs $0x208,%rax
  0x00007f73e07e7914: mov    (%rdi,%rax,1),%r9
  0x00007f73e07e7918: lea    0x1(%r9),%r9
  0x00007f73e07e791c: mov    %r9,(%rdi,%rax,1)
  0x00007f73e07e7920: je     0x00007f73e07e7b91  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@44 (line 306)

  0x00007f73e07e7926: mov    %rbx,%r9
  0x00007f73e07e7929: mov    %r8,%rbx
  0x00007f73e07e792c: mov    %rdx,%r11
  0x00007f73e07e792f: movabs $0x8003b78a0,%rdx  ;   {metadata({type array byte})}
  0x00007f73e07e7939: mov    %rcx,%r14
  0x00007f73e07e793c: mov    %rsi,%r13
  0x00007f73e07e793f: movslq %ebx,%rbx
  0x00007f73e07e7942: mov    %rbx,%rdi
  0x00007f73e07e7945: cmp    $0xffffff,%rbx
  0x00007f73e07e794c: ja     0x00007f73e07e8018
  0x00007f73e07e7952: movabs $0x17,%rsi
  0x00007f73e07e795c: lea    (%rsi,%rbx,1),%rsi
  0x00007f73e07e7960: and    $0xfffffffffffffff8,%rsi
  0x00007f73e07e7964: mov    0x118(%r15),%rax
  0x00007f73e07e796b: lea    (%rax,%rsi,1),%rsi
  0x00007f73e07e796f: cmp    0x128(%r15),%rsi
  0x00007f73e07e7976: ja     0x00007f73e07e8018
  0x00007f73e07e797c: mov    %rsi,0x118(%r15)
  0x00007f73e07e7983: sub    %rax,%rsi
  0x00007f73e07e7986: movq   $0x1,(%rax)
  0x00007f73e07e798d: mov    %rdx,%rcx
  0x00007f73e07e7990: movabs $0x800000000,%r12
  0x00007f73e07e799a: sub    %r12,%rcx
  0x00007f73e07e799d: shr    $0x3,%rcx
  0x00007f73e07e79a1: xor    %r12,%r12
  0x00007f73e07e79a4: mov    %ecx,0x8(%rax)
  0x00007f73e07e79a7: mov    %ebx,0xc(%rax)
  0x00007f73e07e79aa: sub    $0x10,%rsi
  0x00007f73e07e79ae: je     0x00007f73e07e79ce
  0x00007f73e07e79b4: test   %rsi,%rsi
  0x00007f73e07e79b7: je     0x00007f73e07e79ce
  0x00007f73e07e79bd: xor    %rbx,%rbx
  0x00007f73e07e79c0: shr    $0x3,%rsi
  0x00007f73e07e79c4: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f73e07e79c9: dec    %rsi
  0x00007f73e07e79cc: jne    0x00007f73e07e79c4
  0x00007f73e07e79ce: mov    %rax,%rbx          ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@48 (line 307)

  0x00007f73e07e79d1: mov    $0x0,%esi
  0x00007f73e07e79d6: jmpq   0x00007f73e07e7a48  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@55 (line 308)

  0x00007f73e07e79db: nopl   0x0(%rax,%rax,1)
  0x00007f73e07e79e0: cmp    0xc(%r13),%esi
  0x00007f73e07e79e4: jae    0x00007f73e07e8022
  0x00007f73e07e79ea: movslq %esi,%rdi
  0x00007f73e07e79ed: movsbl 0x10(%r13,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@69 (line 309)

  0x00007f73e07e79f3: cmp    0xc(%rbx),%esi
  0x00007f73e07e79f6: jae    0x00007f73e07e8030
  0x00007f73e07e79fc: movslq %esi,%rax
  0x00007f73e07e79ff: mov    %dil,0x10(%rbx,%rax,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@70 (line 309)

  0x00007f73e07e7a04: inc    %esi
  0x00007f73e07e7a06: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7a10: mov    0x108(%rdi),%eax
  0x00007f73e07e7a16: add    $0x8,%eax
  0x00007f73e07e7a19: mov    %eax,0x108(%rdi)
  0x00007f73e07e7a1f: and    $0xfff8,%eax
  0x00007f73e07e7a25: cmp    $0x0,%eax
  0x00007f73e07e7a28: je     0x00007f73e07e803e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@74 (line 308)

  0x00007f73e07e7a2e: mov    0x108(%r15),%r10   ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@74 (line 308)

  0x00007f73e07e7a35: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e7a38: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7a42: incl   0x238(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@74 (line 308)

  0x00007f73e07e7a48: cmp    %r9d,%esi
  0x00007f73e07e7a4b: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7a55: movabs $0x228,%rax
  0x00007f73e07e7a5f: jl     0x00007f73e07e7a6f
  0x00007f73e07e7a65: movabs $0x218,%rax
  0x00007f73e07e7a6f: mov    (%rdi,%rax,1),%rdx
  0x00007f73e07e7a73: lea    0x1(%rdx),%rdx
  0x00007f73e07e7a77: mov    %rdx,(%rdi,%rax,1)
  0x00007f73e07e7a7b: jl     0x00007f73e07e79e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@59 (line 308)

  0x00007f73e07e7a81: mov    %r9,%rsi
  0x00007f73e07e7a84: jmpq   0x00007f73e07e7b53  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@77 (line 311)

  0x00007f73e07e7a89: nopl   0x0(%rax)
  0x00007f73e07e7a90: cmp    0xc(%r13),%esi
  0x00007f73e07e7a94: jae    0x00007f73e07e805f
  0x00007f73e07e7a9a: movslq %esi,%rdi
  0x00007f73e07e7a9d: movsbl 0x10(%r13,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@86 (line 312)

  0x00007f73e07e7aa3: mov    %r11,%rdx
  0x00007f73e07e7aa6: movsbl %dl,%edx
  0x00007f73e07e7aa9: cmp    %edx,%edi
  0x00007f73e07e7aab: movabs $0x7f73d359d0d8,%rax  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7ab5: movabs $0x270,%rdx
  0x00007f73e07e7abf: jne    0x00007f73e07e7acf
  0x00007f73e07e7ac5: movabs $0x280,%rdx
  0x00007f73e07e7acf: mov    (%rax,%rdx,1),%rcx
  0x00007f73e07e7ad3: lea    0x1(%rcx),%rcx
  0x00007f73e07e7ad7: mov    %rcx,(%rax,%rdx,1)
  0x00007f73e07e7adb: jne    0x00007f73e07e7afc  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@97 (line 313)

  0x00007f73e07e7ae1: mov    %r14,%rcx
  0x00007f73e07e7ae4: movsbl %cl,%ecx
  0x00007f73e07e7ae7: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7af1: incl   0x290(%rdi)
  0x00007f73e07e7af7: jmpq   0x00007f73e07e7aff  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@102 (line 313)

  0x00007f73e07e7afc: mov    %rdi,%rcx
  0x00007f73e07e7aff: cmp    0xc(%rbx),%esi
  0x00007f73e07e7b02: jae    0x00007f73e07e806d
  0x00007f73e07e7b08: movslq %esi,%rdi
  0x00007f73e07e7b0b: mov    %cl,0x10(%rbx,%rdi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@107 (line 313)

  0x00007f73e07e7b0f: inc    %esi
  0x00007f73e07e7b11: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7b1b: mov    0x108(%rdi),%eax
  0x00007f73e07e7b21: add    $0x8,%eax
  0x00007f73e07e7b24: mov    %eax,0x108(%rdi)
  0x00007f73e07e7b2a: and    $0xfff8,%eax
  0x00007f73e07e7b30: cmp    $0x0,%eax
  0x00007f73e07e7b33: je     0x00007f73e07e807b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@111 (line 315)

  0x00007f73e07e7b39: mov    0x108(%r15),%r10   ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@111 (line 315)

  0x00007f73e07e7b40: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e7b43: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7b4d: incl   0x2a8(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@111 (line 315)

  0x00007f73e07e7b53: cmp    %r8d,%esi
  0x00007f73e07e7b56: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7b60: movabs $0x250,%rax
  0x00007f73e07e7b6a: jge    0x00007f73e07e7b7a
  0x00007f73e07e7b70: movabs $0x260,%rax
  0x00007f73e07e7b7a: mov    (%rdi,%rax,1),%rdx
  0x00007f73e07e7b7e: lea    0x1(%rdx),%rdx
  0x00007f73e07e7b82: mov    %rdx,(%rdi,%rax,1)
  0x00007f73e07e7b86: jge    0x00007f73e07e7e54
  0x00007f73e07e7b8c: jmpq   0x00007f73e07e7a90  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@80 (line 311)

  0x00007f73e07e7b91: mov    %ebx,0x68(%rsp)
  0x00007f73e07e7b95: mov    %ecx,0x74(%rsp)
  0x00007f73e07e7b99: mov    %edx,0x70(%rsp)
  0x00007f73e07e7b9d: mov    %rsi,0x60(%rsp)
  0x00007f73e07e7ba2: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7bac: addq   $0x1,0x2d0(%rdi)
  0x00007f73e07e7bb4: mov    %r8,%rsi           ;*invokestatic newBytesFor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@126 (line 318)

  0x00007f73e07e7bb7: mov    %r8d,0x6c(%rsp)
  0x00007f73e07e7bbc: data16 xchg %ax,%ax
  0x00007f73e07e7bbf: callq  0x00007f73e0269600  ; ImmutableOopMap{[96]=Oop }
                                                ;*invokestatic newBytesFor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@126 (line 318)
                                                ;   {static_call}
  0x00007f73e07e7bc4: movabs $0x7f73d359d0d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7bce: addq   $0x1,0x2e0(%rsi)
  0x00007f73e07e7bd6: movabs $0x7f73d3639c10,%rsi  ;   {metadata(method data for {method} {0x000000080033e660} 'inflate' '([BI[BII)V' in 'java/lang/StringLatin1')}
  0x00007f73e07e7be0: mov    0x104(%rsi),%edx
  0x00007f73e07e7be6: add    $0x8,%edx
  0x00007f73e07e7be9: mov    %edx,0x104(%rsi)
  0x00007f73e07e7bef: and    $0x7ffff8,%edx
  0x00007f73e07e7bf5: cmp    $0x0,%edx
  0x00007f73e07e7bf8: je     0x00007f73e07e809c
  0x00007f73e07e7bfe: movabs $0x7f73d3639c10,%rsi  ;   {metadata(method data for {method} {0x000000080033e660} 'inflate' '([BI[BII)V' in 'java/lang/StringLatin1')}
  0x00007f73e07e7c08: addq   $0x1,0x140(%rsi)
  0x00007f73e07e7c10: mov    0x60(%rsp),%rsi
  0x00007f73e07e7c15: mov    $0x0,%edx
  0x00007f73e07e7c1a: mov    %rax,%rcx
  0x00007f73e07e7c1d: mov    $0x0,%r8d
  0x00007f73e07e7c23: mov    0x68(%rsp),%r9d    ;*invokestatic inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::inflate@6 (line 734)
                                                ; - java.lang.StringLatin1::replace@138 (line 320)

  0x00007f73e07e7c28: mov    %rax,0x78(%rsp)
  0x00007f73e07e7c2d: xchg   %ax,%ax
  0x00007f73e07e7c2f: callq  0x00007f73e0269600  ; ImmutableOopMap{[96]=Oop [120]=Oop }
                                                ;*invokestatic inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::inflate@6 (line 734)
                                                ; - java.lang.StringLatin1::replace@138 (line 320)
                                                ;   {static_call}
  0x00007f73e07e7c34: mov    0x68(%rsp),%ebx
  0x00007f73e07e7c38: mov    0x78(%rsp),%r9
  0x00007f73e07e7c3d: mov    0x6c(%rsp),%r8d
  0x00007f73e07e7c42: mov    0x74(%rsp),%ecx
  0x00007f73e07e7c46: mov    0x70(%rsp),%edx
  0x00007f73e07e7c4a: mov    0x60(%rsp),%rsi
  0x00007f73e07e7c4f: jmpq   0x00007f73e07e7d07  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@141 (line 321)

  0x00007f73e07e7c54: nopl   0x0(%rax)
  0x00007f73e07e7c58: cmp    0xc(%rsi),%ebx
  0x00007f73e07e7c5b: jae    0x00007f73e07e80bd
  0x00007f73e07e7c61: movslq %ebx,%rdi
  0x00007f73e07e7c64: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@150 (line 322)

  0x00007f73e07e7c69: and    $0xff,%edi
  0x00007f73e07e7c6f: cmp    %edx,%edi
  0x00007f73e07e7c71: movabs $0x7f73d359d0d8,%rax  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7c7b: movabs $0x310,%r11
  0x00007f73e07e7c85: jne    0x00007f73e07e7c95
  0x00007f73e07e7c8b: movabs $0x320,%r11
  0x00007f73e07e7c95: mov    (%rax,%r11,1),%r13
  0x00007f73e07e7c99: lea    0x1(%r13),%r13
  0x00007f73e07e7c9d: mov    %r13,(%rax,%r11,1)
  0x00007f73e07e7ca1: jne    0x00007f73e07e7cba  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@165 (line 323)

  0x00007f73e07e7ca7: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7cb1: incl   0x330(%rdi)
  0x00007f73e07e7cb7: mov    %rcx,%rdi          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@169 (line 323)

  0x00007f73e07e7cba: movslq %ebx,%rax
  0x00007f73e07e7cbd: mov    %di,0x10(%r9,%rax,2)  ;*invokestatic putChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@174 (line 323)
                                                ; implicit exception: dispatches to 0x00007f73e07e80cb
  0x00007f73e07e7cc3: inc    %ebx
  0x00007f73e07e7cc5: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7ccf: mov    0x108(%rdi),%eax
  0x00007f73e07e7cd5: add    $0x8,%eax
  0x00007f73e07e7cd8: mov    %eax,0x108(%rdi)
  0x00007f73e07e7cde: and    $0xfff8,%eax
  0x00007f73e07e7ce4: cmp    $0x0,%eax
  0x00007f73e07e7ce7: je     0x00007f73e07e80d0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@180 (line 325)

  0x00007f73e07e7ced: mov    0x108(%r15),%r10   ; ImmutableOopMap{r9=Oop rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@180 (line 325)

  0x00007f73e07e7cf4: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e7cf7: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7d01: incl   0x358(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@180 (line 325)

  0x00007f73e07e7d07: cmp    %r8d,%ebx
  0x00007f73e07e7d0a: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7d14: movabs $0x300,%rax
  0x00007f73e07e7d1e: jl     0x00007f73e07e7d2e
  0x00007f73e07e7d24: movabs $0x2f0,%rax
  0x00007f73e07e7d2e: mov    (%rdi,%rax,1),%r11
  0x00007f73e07e7d32: lea    0x1(%r11),%r11
  0x00007f73e07e7d36: mov    %r11,(%rdi,%rax,1)
  0x00007f73e07e7d3a: jl     0x00007f73e07e7c58  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@144 (line 321)

  0x00007f73e07e7d40: movabs $0x800336890,%rdx  ;   {metadata('java/lang/String')}
  0x00007f73e07e7d4a: mov    0x118(%r15),%rax
  0x00007f73e07e7d51: lea    0x18(%rax),%rdi
  0x00007f73e07e7d55: cmp    0x128(%r15),%rdi
  0x00007f73e07e7d5c: ja     0x00007f73e07e80f1
  0x00007f73e07e7d62: mov    %rdi,0x118(%r15)
  0x00007f73e07e7d69: mov    0xb8(%rdx),%rcx
  0x00007f73e07e7d70: mov    %rcx,(%rax)
  0x00007f73e07e7d73: mov    %rdx,%rcx
  0x00007f73e07e7d76: movabs $0x800000000,%r12
  0x00007f73e07e7d80: sub    %r12,%rcx
  0x00007f73e07e7d83: shr    $0x3,%rcx
  0x00007f73e07e7d87: xor    %r12,%r12
  0x00007f73e07e7d8a: mov    %ecx,0x8(%rax)
  0x00007f73e07e7d8d: xor    %rcx,%rcx
  0x00007f73e07e7d90: mov    %ecx,0xc(%rax)
  0x00007f73e07e7d93: xor    %rcx,%rcx
  0x00007f73e07e7d96: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@183 (line 326)

  0x00007f73e07e7d9a: mov    %rax,%rdx
  0x00007f73e07e7d9d: movabs $0x7f73d359d0d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7da7: addq   $0x1,0x370(%rsi)
  0x00007f73e07e7daf: movabs $0x7f73d353ca80,%rdx  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e7db9: mov    0x104(%rdx),%esi
  0x00007f73e07e7dbf: add    $0x8,%esi
  0x00007f73e07e7dc2: mov    %esi,0x104(%rdx)
  0x00007f73e07e7dc8: and    $0x7ffff8,%esi
  0x00007f73e07e7dce: cmp    $0x0,%esi
  0x00007f73e07e7dd1: je     0x00007f73e07e80fe
  0x00007f73e07e7dd7: mov    %rax,%rdx
  0x00007f73e07e7dda: movabs $0x7f73d353ca80,%rsi  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e7de4: addq   $0x1,0x140(%rsi)
  0x00007f73e07e7dec: movabs $0x7f73d350be50,%rdx  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07e7df6: mov    0x104(%rdx),%esi
  0x00007f73e07e7dfc: add    $0x8,%esi
  0x00007f73e07e7dff: mov    %esi,0x104(%rdx)
  0x00007f73e07e7e05: and    $0x7ffff8,%esi
  0x00007f73e07e7e0b: cmp    $0x0,%esi
  0x00007f73e07e7e0e: je     0x00007f73e07e811f
  0x00007f73e07e7e14: movsbl 0x30(%r15),%edx
  0x00007f73e07e7e19: cmp    $0x0,%edx
  0x00007f73e07e7e1c: jne    0x00007f73e07e8140
  0x00007f73e07e7e22: mov    %r9,%r10
  0x00007f73e07e7e25: mov    %r10d,0xc(%rax)
  0x00007f73e07e7e29: mov    %rax,%rdx
  0x00007f73e07e7e2c: xor    %r9,%rdx
  0x00007f73e07e7e2f: shr    $0x14,%rdx
  0x00007f73e07e7e33: cmp    $0x0,%rdx
  0x00007f73e07e7e37: jne    0x00007f73e07e815b  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::replace@190 (line 326)

  0x00007f73e07e7e3d: movb   $0x1,0x14(%rax)    ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@11 (line 3254)
                                                ; - java.lang.StringLatin1::replace@190 (line 326)

  0x00007f73e07e7e41: add    $0x90,%rsp
  0x00007f73e07e7e48: pop    %rbp
  0x00007f73e07e7e49: mov    0x108(%r15),%r10
  0x00007f73e07e7e50: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e7e53: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@193 (line 326)

  0x00007f73e07e7e54: movabs $0x800336890,%rdx  ;   {metadata('java/lang/String')}
  0x00007f73e07e7e5e: mov    0x118(%r15),%rax
  0x00007f73e07e7e65: lea    0x18(%rax),%rdi
  0x00007f73e07e7e69: cmp    0x128(%r15),%rdi
  0x00007f73e07e7e70: ja     0x00007f73e07e8173
  0x00007f73e07e7e76: mov    %rdi,0x118(%r15)
  0x00007f73e07e7e7d: mov    0xb8(%rdx),%rcx
  0x00007f73e07e7e84: mov    %rcx,(%rax)
  0x00007f73e07e7e87: mov    %rdx,%rcx
  0x00007f73e07e7e8a: movabs $0x800000000,%r12
  0x00007f73e07e7e94: sub    %r12,%rcx
  0x00007f73e07e7e97: shr    $0x3,%rcx
  0x00007f73e07e7e9b: xor    %r12,%r12
  0x00007f73e07e7e9e: mov    %ecx,0x8(%rax)
  0x00007f73e07e7ea1: xor    %rcx,%rcx
  0x00007f73e07e7ea4: mov    %ecx,0xc(%rax)
  0x00007f73e07e7ea7: xor    %rcx,%rcx
  0x00007f73e07e7eaa: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@114 (line 316)

  0x00007f73e07e7eae: mov    %rax,%rsi
  0x00007f73e07e7eb1: movabs $0x7f73d359d0d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7ebb: addq   $0x1,0x2c0(%rdi)
  0x00007f73e07e7ec3: movabs $0x7f73d353ca80,%rsi  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e7ecd: mov    0x104(%rsi),%edi
  0x00007f73e07e7ed3: add    $0x8,%edi
  0x00007f73e07e7ed6: mov    %edi,0x104(%rsi)
  0x00007f73e07e7edc: and    $0x7ffff8,%edi
  0x00007f73e07e7ee2: cmp    $0x0,%edi
  0x00007f73e07e7ee5: je     0x00007f73e07e8180
  0x00007f73e07e7eeb: mov    %rax,%rsi
  0x00007f73e07e7eee: movabs $0x7f73d353ca80,%rdi  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e7ef8: addq   $0x1,0x140(%rdi)
  0x00007f73e07e7f00: movabs $0x7f73d350be50,%rsi  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07e7f0a: mov    0x104(%rsi),%edi
  0x00007f73e07e7f10: add    $0x8,%edi
  0x00007f73e07e7f13: mov    %edi,0x104(%rsi)
  0x00007f73e07e7f19: and    $0x7ffff8,%edi
  0x00007f73e07e7f1f: cmp    $0x0,%edi
  0x00007f73e07e7f22: je     0x00007f73e07e81a1
  0x00007f73e07e7f28: movsbl 0x30(%r15),%esi
  0x00007f73e07e7f2d: cmp    $0x0,%esi
  0x00007f73e07e7f30: jne    0x00007f73e07e81c2
  0x00007f73e07e7f36: mov    %rbx,%r10
  0x00007f73e07e7f39: mov    %r10d,0xc(%rax)
  0x00007f73e07e7f3d: mov    %rax,%rsi
  0x00007f73e07e7f40: xor    %rbx,%rsi
  0x00007f73e07e7f43: shr    $0x14,%rsi
  0x00007f73e07e7f47: cmp    $0x0,%rsi
  0x00007f73e07e7f4b: jne    0x00007f73e07e81dd  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::replace@121 (line 316)

  0x00007f73e07e7f51: add    $0x90,%rsp
  0x00007f73e07e7f58: pop    %rbp
  0x00007f73e07e7f59: mov    0x108(%r15),%r10
  0x00007f73e07e7f60: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e7f63: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@124 (line 316)

  0x00007f73e07e7f64: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07e7f6e: add    $0x90,%rsp
  0x00007f73e07e7f75: pop    %rbp
  0x00007f73e07e7f76: mov    0x108(%r15),%r10
  0x00007f73e07e7f7d: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e7f80: retq   
  0x00007f73e07e7f81: movabs $0x80033ed40,%r10  ;   {metadata({method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7f8b: mov    %r10,0x8(%rsp)
  0x00007f73e07e7f90: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e7f98: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::replace@-1 (line 297)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e7f9d: jmpq   0x00007f73e07e7637
  0x00007f73e07e7fa2: movabs $0x80033f1b8,%r10  ;   {metadata({method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e7fac: mov    %r10,0x8(%rsp)
  0x00007f73e07e7fb1: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e7fb9: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::replace@1 (line 297)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e7fbe: jmpq   0x00007f73e07e7671
  0x00007f73e07e7fc3: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@8 (line 298)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e7fc8: mov    %rbx,(%rsp)
  0x00007f73e07e7fcc: mov    %rsi,0x8(%rsp)
  0x00007f73e07e7fd1: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@25 (line 301)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e7fd6: movabs $0x80033ed40,%r10  ;   {metadata({method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e7fe0: mov    %r10,0x8(%rsp)
  0x00007f73e07e7fe5: movq   $0x1c,(%rsp)
  0x00007f73e07e7fed: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@28 (line 301)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e7ff2: jmpq   0x00007f73e07e7787
  0x00007f73e07e7ff7: movabs $0x80033f1b8,%r10  ;   {metadata({method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07e8001: mov    %r10,0x8(%rsp)
  0x00007f73e07e8006: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e800e: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::replace@41 (line 306)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e8013: jmpq   0x00007f73e07e788c
  0x00007f73e07e8018: callq  0x00007f73e0331680  ; ImmutableOopMap{r13=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@48 (line 307)
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x00007f73e07e801d: jmpq   0x00007f73e07e79ce
  0x00007f73e07e8022: mov    %rsi,(%rsp)
  0x00007f73e07e8026: mov    %r13,0x8(%rsp)
  0x00007f73e07e802b: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@69 (line 309)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e8030: mov    %rsi,(%rsp)
  0x00007f73e07e8034: mov    %rbx,0x8(%rsp)
  0x00007f73e07e8039: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@70 (line 309)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e803e: movabs $0x80033ed40,%r10  ;   {metadata({method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e8048: mov    %r10,0x8(%rsp)
  0x00007f73e07e804d: movq   $0x4a,(%rsp)
  0x00007f73e07e8055: callq  0x00007f73e0334d80  ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@74 (line 308)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e805a: jmpq   0x00007f73e07e7a2e
  0x00007f73e07e805f: mov    %rsi,(%rsp)
  0x00007f73e07e8063: mov    %r13,0x8(%rsp)
  0x00007f73e07e8068: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@86 (line 312)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e806d: mov    %rsi,(%rsp)
  0x00007f73e07e8071: mov    %rbx,0x8(%rsp)
  0x00007f73e07e8076: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@107 (line 313)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e807b: movabs $0x80033ed40,%r10  ;   {metadata({method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e8085: mov    %r10,0x8(%rsp)
  0x00007f73e07e808a: movq   $0x6f,(%rsp)
  0x00007f73e07e8092: callq  0x00007f73e0334d80  ; ImmutableOopMap{r13=Oop rbx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@111 (line 315)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e8097: jmpq   0x00007f73e07e7b39
  0x00007f73e07e809c: movabs $0x80033e660,%r10  ;   {metadata({method} {0x000000080033e660} 'inflate' '([BI[BII)V' in 'java/lang/StringLatin1')}
  0x00007f73e07e80a6: mov    %r10,0x8(%rsp)
  0x00007f73e07e80ab: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e80b3: callq  0x00007f73e0334d80  ; ImmutableOopMap{[96]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::inflate@-1 (line 734)
                                                ; - java.lang.StringLatin1::replace@138 (line 320)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e80b8: jmpq   0x00007f73e07e7bfe
  0x00007f73e07e80bd: mov    %rbx,(%rsp)
  0x00007f73e07e80c1: mov    %rsi,0x8(%rsp)
  0x00007f73e07e80c6: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{r9=Oop rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@150 (line 322)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e80cb: callq  0x00007f73e03308a0  ; ImmutableOopMap{r9=Oop rsi=Oop }
                                                ;*invokestatic putChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@174 (line 323)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e80d0: movabs $0x80033ed40,%r10  ;   {metadata({method} {0x000000080033ed40} 'replace' '([BCC)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07e80da: mov    %r10,0x8(%rsp)
  0x00007f73e07e80df: movq   $0xb4,(%rsp)
  0x00007f73e07e80e7: callq  0x00007f73e0334d80  ; ImmutableOopMap{r9=Oop rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@180 (line 325)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e80ec: jmpq   0x00007f73e07e7ced
  0x00007f73e07e80f1: mov    %rdx,%rdx
  0x00007f73e07e80f4: callq  0x00007f73e0331080  ; ImmutableOopMap{r9=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@183 (line 326)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07e80f9: jmpq   0x00007f73e07e7d9a
  0x00007f73e07e80fe: movabs $0x800338cb8,%r10  ;   {metadata({method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e8108: mov    %r10,0x8(%rsp)
  0x00007f73e07e810d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e8115: callq  0x00007f73e0334d80  ; ImmutableOopMap{r9=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 3252)
                                                ; - java.lang.StringLatin1::replace@190 (line 326)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e811a: jmpq   0x00007f73e07e7dd7
  0x00007f73e07e811f: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07e8129: mov    %r10,0x8(%rsp)
  0x00007f73e07e812e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e8136: callq  0x00007f73e0334d80  ; ImmutableOopMap{r9=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ; - java.lang.String::<init>@1 (line 3252)
                                                ; - java.lang.StringLatin1::replace@190 (line 326)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e813b: jmpq   0x00007f73e07e7e14
  0x00007f73e07e8140: mov    0xc(%rax),%edx
  0x00007f73e07e8143: cmp    $0x0,%rdx
  0x00007f73e07e8147: je     0x00007f73e07e7e22
  0x00007f73e07e814d: mov    %rdx,(%rsp)
  0x00007f73e07e8151: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07e8156: jmpq   0x00007f73e07e7e22
  0x00007f73e07e815b: cmp    $0x0,%r9
  0x00007f73e07e815f: je     0x00007f73e07e7e3d
  0x00007f73e07e8165: mov    %rax,(%rsp)
  0x00007f73e07e8169: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07e816e: jmpq   0x00007f73e07e7e3d
  0x00007f73e07e8173: mov    %rdx,%rdx
  0x00007f73e07e8176: callq  0x00007f73e0331080  ; ImmutableOopMap{rbx=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::replace@114 (line 316)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07e817b: jmpq   0x00007f73e07e7eae
  0x00007f73e07e8180: movabs $0x800338cb8,%r10  ;   {metadata({method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07e818a: mov    %r10,0x8(%rsp)
  0x00007f73e07e818f: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e8197: callq  0x00007f73e0334d80  ; ImmutableOopMap{rbx=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 3252)
                                                ; - java.lang.StringLatin1::replace@121 (line 316)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e819c: jmpq   0x00007f73e07e7eeb
  0x00007f73e07e81a1: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07e81ab: mov    %r10,0x8(%rsp)
  0x00007f73e07e81b0: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e81b8: callq  0x00007f73e0334d80  ; ImmutableOopMap{rbx=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ; - java.lang.String::<init>@1 (line 3252)
                                                ; - java.lang.StringLatin1::replace@121 (line 316)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e81bd: jmpq   0x00007f73e07e7f28
  0x00007f73e07e81c2: mov    0xc(%rax),%esi
  0x00007f73e07e81c5: cmp    $0x0,%rsi
  0x00007f73e07e81c9: je     0x00007f73e07e7f36
  0x00007f73e07e81cf: mov    %rsi,(%rsp)
  0x00007f73e07e81d3: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07e81d8: jmpq   0x00007f73e07e7f36
  0x00007f73e07e81dd: cmp    $0x0,%rbx
  0x00007f73e07e81e1: je     0x00007f73e07e7f51
  0x00007f73e07e81e7: mov    %rax,(%rsp)
  0x00007f73e07e81eb: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07e81f0: jmpq   0x00007f73e07e7f51
  0x00007f73e07e81f5: nop
  0x00007f73e07e81f6: nop
  0x00007f73e07e81f7: mov    0x428(%r15),%rax
  0x00007f73e07e81fe: movabs $0x0,%r10
  0x00007f73e07e8208: mov    %r10,0x428(%r15)
  0x00007f73e07e820f: movabs $0x0,%r10
  0x00007f73e07e8219: mov    %r10,0x430(%r15)
  0x00007f73e07e8220: add    $0x90,%rsp
  0x00007f73e07e8227: pop    %rbp
  0x00007f73e07e8228: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e822d: hlt    
  0x00007f73e07e822e: hlt    
  0x00007f73e07e822f: hlt    
  0x00007f73e07e8230: hlt    
  0x00007f73e07e8231: hlt    
  0x00007f73e07e8232: hlt    
  0x00007f73e07e8233: hlt    
  0x00007f73e07e8234: hlt    
  0x00007f73e07e8235: hlt    
  0x00007f73e07e8236: hlt    
  0x00007f73e07e8237: hlt    
  0x00007f73e07e8238: hlt    
  0x00007f73e07e8239: hlt    
  0x00007f73e07e823a: hlt    
  0x00007f73e07e823b: hlt    
  0x00007f73e07e823c: hlt    
  0x00007f73e07e823d: hlt    
  0x00007f73e07e823e: hlt    
  0x00007f73e07e823f: hlt    
[Stub Code]
  0x00007f73e07e8240: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07e8245: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e824f: jmpq   0x00007f73e07e824f  ;   {runtime_call}
  0x00007f73e07e8254: nop
  0x00007f73e07e8255: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07e825f: jmpq   0x00007f73e07e825f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07e8264: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07e8269: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e8273: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e8277: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e827c: hlt    
[Deopt Handler Code]
  0x00007f73e07e827d: movabs $0x7f73e07e827d,%r10  ;   {section_word}
  0x00007f73e07e8287: push   %r10
  0x00007f73e07e8289: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e828e: hlt    
  0x00007f73e07e828f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 398 
ImmutableOopMap{r13=Oop rbx=Oop }pc offsets: 1077 1344 
ImmutableOopMap{[96]=Oop }pc offsets: 1476 
ImmutableOopMap{[96]=Oop [120]=Oop }pc offsets: 1588 
ImmutableOopMap{r9=Oop rsi=Oop }pc offsets: 1780 
ImmutableOopMap{rsi=Oop }pc offsets: 2461 2494 2504 2518 2546 2579 
ImmutableOopMap{r13=Oop }pc offsets: 2589 
ImmutableOopMap{r13=Oop rbx=Oop }pc offsets: 2608 2622 2650 2669 2683 2711 
ImmutableOopMap{[96]=Oop rax=Oop }pc offsets: 2744 
ImmutableOopMap{r9=Oop rsi=Oop }pc offsets: 2763 2768 2796 
ImmutableOopMap{r9=Oop }pc offsets: 2809 
ImmutableOopMap{r9=Oop rax=Oop }pc offsets: 2842 2875 
ImmutableOopMap{rbx=Oop }pc offsets: 2939 
ImmutableOopMap{rbx=Oop rax=Oop }pc offsets: 2972 3005 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x00007f73e7d156a0, 0x00007f73e7d156c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d363a068} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d156a0: cmp    (%rsi),%rax
  0x00007f73e7d156a3: mov    0x24(%r8),%ebx
  0x00007f73e7d156a7: mov    0x10(%rbx),%rbx
  0x00007f73e7d156ab: test   %rbx,%rbx
  0x00007f73e7d156ae: je     0x00007f73e7d156b7
  0x00007f73e7d156b4: jmpq   *0x38(%rbx)
  0x00007f73e7d156b7: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d156bc: hlt    
  0x00007f73e7d156bd: hlt    
  0x00007f73e7d156be: hlt    
  0x00007f73e7d156bf: hlt    
Compiled method (c1)   75879  170       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode# Run progress: 0.00% complete, ETA 00:00:30 (5 bytes)

# Fork: N/A, test runs in the host VM total in heap  [0x00007f73e7d15710,0x00007f73e7d159f0] = 736
 relocation     [0x00007f73e7d15888,0x00007f73e7d158a8] = 32

 main code      [0x00007f73e7d158c0,0x00007f73e7d15960] = 160
 stub code      [0x00007f73e7d15960,0x00007f73e7d15990] = 48
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. *** metadata       [0x00007f73e7d15990,0x00007f73e7d15998] = 8
 scopes data    [0x00007f73e7d15998,0x00007f73e7d159a8] = 16

 scopes pcs     [0x00007f73e7d159a8,0x00007f73e7d159e8] = 64
 dependencies   [0x00007f73e7d159e8,0x00007f73e7d159f0] = 8
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
----------------------------------------------------------------------
java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry.hashCode()I  [0x00007f73e7d158c0, 0x00007f73e7d15990]  208 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080022b8c0} 'hashCode' '()I' in 'java/lang/invoke/MethodType$ConcurrentWeakInter# Warmup Iteration   1: nSet$WeakEntry'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d158c0: mov    0x8(%rsi),%r10d
  0x00007f73e7d158c4: shl    $0x3,%r10
  0x00007f73e7d158c8: movabs $0x800000000,%r12
  0x00007f73e7d158d2: add    %r12,%r10
  0x00007f73e7d158d5: xor    %r12,%r12
  0x00007f73e7d158d8: cmp    %rax,%r10
  0x00007f73e7d158db: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d158e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d158ec: data16 data16 xchg %ax,%ax
  0x00007f73e7d158f0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d158fb: data16 data16 xchg %ax,%ax
  0x00007f73e7d158ff: nop
[Verified Entry Point]
  0x00007f73e7d15900: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d15907: push   %rbp
  0x00007f73e7d15908: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@0 (line 1348)

  0x00007f73e7d1590c: mov    0x1c(%rsi),%eax    ;*getfield hashcode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode@1 (line 1348)

  0x00007f73e7d1590f: add    $0x30,%rsp
  0x00007f73e7d15913: pop    %rbp
  0x00007f73e7d15914: mov    0x108(%r15),%r10
  0x00007f73e7d1591b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d1591e: retq   
  0x00007f73e7d1591f: nop
  0x00007f73e7d15920: nop
  0x00007f73e7d15921: mov    0x428(%r15),%rax
  0x00007f73e7d15928: movabs $0x0,%r10
  0x00007f73e7d15932: mov    %r10,0x428(%r15)
  0x00007f73e7d15939: movabs $0x0,%r10
  0x00007f73e7d15943: mov    %r10,0x430(%r15)
  0x00007f73e7d1594a: add    $0x30,%rsp
  0x00007f73e7d1594e: pop    %rbp
  0x00007f73e7d1594f: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e7d15954: hlt    
  0x00007f73e7d15955: hlt    
  0x00007f73e7d15956: hlt    
  0x00007f73e7d15957: hlt    
  0x00007f73e7d15958: hlt    
  0x00007f73e7d15959: hlt    
  0x00007f73e7d1595a: hlt    
  0x00007f73e7d1595b: hlt    
  0x00007f73e7d1595c: hlt    
  0x00007f73e7d1595d: hlt    
  0x00007f73e7d1595e: hlt    
  0x00007f73e7d1595f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d15960: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e7d15965: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e7d1596f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d15973: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e7d15978: hlt    
[Deopt Handler Code]
  0x00007f73e7d15979: movabs $0x7f73e7d15979,%r10  ;   {section_word}
  0x00007f73e7d15983: push   %r10
  0x00007f73e7d15985: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d1598a: hlt    
  0x00007f73e7d1598b: hlt    
  0x00007f73e7d1598c: hlt    
  0x00007f73e7d1598d: hlt    
  0x00007f73e7d1598e: hlt    
  0x00007f73e7d1598f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x00007f73e7d15e20, 0x00007f73e7d15e40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d36723b0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/Object'
  # parm4:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d15e20: mov    0x24(%r9),%ebx
  0x00007f73e7d15e24: mov    0x10(%rbx),%rbx
  0x00007f73e7d15e28: test   %rbx,%rbx
  0x00007f73e7d15e2b: je     0x00007f73e7d15e34
  0x00007f73e7d15e31: jmpq   *0x38(%rbx)
  0x00007f73e7d15e34: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d15e39: hlt    
  0x00007f73e7d15e3a: hlt    
  0x00007f73e7d15e3b: hlt    
  0x00007f73e7d15e3c: hlt    
  0x00007f73e7d15e3d: hlt    
  0x00007f73e7d15e3e: hlt    
  0x00007f73e7d15e3f: hlt    
Compiled method (c2)   76411  247       4       java.lang.Math::min (11 bytes)
 total in heap  [0x00007f73e7d15a10,0x00007f73e7d15c58] = 584
 relocation     [0x00007f73e7d15b88,0x00007f73e7d15b90] = 8
 main code      [0x00007f73e7d15ba0,0x00007f73e7d15be0] = 64
 stub code      [0x00007f73e7d15be0,0x00007f73e7d15bf8] = 24
 metadata       [0x00007f73e7d15bf8,0x00007f73e7d15c00] = 8
 scopes data    [0x00007f73e7d15c00,0x00007f73e7d15c10] = 16
 scopes pcs     [0x00007f73e7d15c10,0x00007f73e7d15c50] = 64
 dependencies   [0x00007f73e7d15c50,0x00007f73e7d15c58] = 8
----------------------------------------------------------------------
java/lang/Math.min(II)I  [0x00007f73e7d15ba0, 0x00007f73e7d15bf8]  88 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d15ba0: sub    $0x18,%rsp
  0x00007f73e7d15ba7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1518)

  0x00007f73e7d15bac: cmp    %edx,%esi
  0x00007f73e7d15bae: mov    %edx,%eax
  0x00007f73e7d15bb0: cmovle %esi,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10 (line 1518)

  0x00007f73e7d15bb3: add    $0x10,%rsp
  0x00007f73e7d15bb7: pop    %rbp
  0x00007f73e7d15bb8: mov    0x108(%r15),%r10
  0x00007f73e7d15bbf: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d15bc2: retq   
  0x00007f73e7d15bc3: hlt    
  0x00007f73e7d15bc4: hlt    
  0x00007f73e7d15bc5: hlt    
  0x00007f73e7d15bc6: hlt    
  0x00007f73e7d15bc7: hlt    
  0x00007f73e7d15bc8: hlt    
  0x00007f73e7d15bc9: hlt    
  0x00007f73e7d15bca: hlt    
  0x00007f73e7d15bcb: hlt    
  0x00007f73e7d15bcc: hlt    
  0x00007f73e7d15bcd: hlt    
  0x00007f73e7d15bce: hlt    
  0x00007f73e7d15bcf: hlt    
  0x00007f73e7d15bd0: hlt    
  0x00007f73e7d15bd1: hlt    
  0x00007f73e7d15bd2: hlt    
  0x00007f73e7d15bd3: hlt    
  0x00007f73e7d15bd4: hlt    
  0x00007f73e7d15bd5: hlt    
  0x00007f73e7d15bd6: hlt    
  0x00007f73e7d15bd7: hlt    
  0x00007f73e7d15bd8: hlt    
  0x00007f73e7d15bd9: hlt    
  0x00007f73e7d15bda: hlt    
  0x00007f73e7d15bdb: hlt    
  0x00007f73e7d15bdc: hlt    
  0x00007f73e7d15bdd: hlt    
  0x00007f73e7d15bde: hlt    
  0x00007f73e7d15bdf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d15be0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d15be5: callq  0x00007f73e7d15bea
  0x00007f73e7d15bea: subq   $0x5,(%rsp)
  0x00007f73e7d15bef: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d15bf4: hlt    
  0x00007f73e7d15bf5: hlt    
  0x00007f73e7d15bf6: hlt    
  0x00007f73e7d15bf7: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V  [0x00007f73e7d16020, 0x00007f73e7d16040]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d3672518} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d16020: mov    0x24(%r8),%ebx
  0x00007f73e7d16024: mov    0x10(%rbx),%rbx
  0x00007f73e7d16028: test   %rbx,%rbx
  0x00007f73e7d1602b: je     0x00007f73e7d16034
  0x00007f73e7d16031: jmpq   *0x38(%rbx)
  0x00007f73e7d16034: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d16039: hlt    
  0x00007f73e7d1603a: hlt    
  0x00007f73e7d1603b: hlt    
  0x00007f73e7d1603c: hlt    
  0x00007f73e7d1603d: hlt    
  0x00007f73e7d1603e: hlt    
  0x00007f73e7d1603f: hlt    
Compiled method (c1)   76813  249       3       java.lang.String::startsWith (138 bytes)
 total in heap  [0x00007f73e07e8b90,0x00007f73e07e9ed0] = 4928
 relocation     [0x00007f73e07e8d08,0x00007f73e07e8dc0] = 184
 main code      [0x00007f73e07e8dc0,0x00007f73e07e9760] = 2464
 stub code      [0x00007f73e07e9760,0x00007f73e07e9790] = 48
 metadata       [0x00007f73e07e9790,0x00007f73e07e97b0] = 32
 scopes data    [0x00007f73e07e97b0,0x00007f73e07e9a68] = 696
 scopes pcs     [0x00007f73e07e9a68,0x00007f73e07e9ea8] = 1088
 dependencies   [0x00007f73e07e9ea8,0x00007f73e07e9eb0] = 8
 nul chk table  [0x00007f73e07e9eb0,0x00007f73e07e9ed0] = 32
----------------------------------------------------------------------
java/lang/String.startsWith(Ljava/lang/String;I)Z  [0x00007f73e07e8dc0, 0x00007f73e07e9790]  2512 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f73e07e8dc0: mov    0x8(%rsi),%r10d
  0x00007f73e07e8dc4: shl    $0x3,%r10
  0x00007f73e07e8dc8: movabs $0x800000000,%r12
  0x00007f73e07e8dd2: add    %r12,%r10
  0x00007f73e07e8dd5: xor    %r12,%r12
  0x00007f73e07e8dd8: cmp    %rax,%r10
  0x00007f73e07e8ddb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07e8de1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e8dec: data16 data16 xchg %ax,%ax
  0x00007f73e07e8df0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07e8dfb: data16 data16 xchg %ax,%ax
  0x00007f73e07e8dff: nop
[Verified Entry Point]
  0x00007f73e07e8e00: mov    %eax,-0x14000(%rsp)
  0x00007f73e07e8e07: push   %rbp
  0x00007f73e07e8e08: sub    $0x60,%rsp
  0x00007f73e07e8e0c: mov    %rcx,%rax
  0x00007f73e07e8e0f: movabs $0x7f73d35aa148,%rcx  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e8e19: mov    0x104(%rcx),%edi
  0x00007f73e07e8e1f: add    $0x8,%edi
  0x00007f73e07e8e22: mov    %edi,0x104(%rcx)
  0x00007f73e07e8e28: and    $0x1ff8,%edi
  0x00007f73e07e8e2e: cmp    $0x0,%edi
  0x00007f73e07e8e31: je     0x00007f73e07e959d  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@0 (line 1428)

  0x00007f73e07e8e37: cmp    $0x0,%eax
  0x00007f73e07e8e3a: movabs $0x7f73d35aa148,%rcx  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e8e44: movabs $0x140,%rdi
  0x00007f73e07e8e4e: jl     0x00007f73e07e8e5e
  0x00007f73e07e8e54: movabs $0x150,%rdi
  0x00007f73e07e8e5e: mov    (%rcx,%rdi,1),%rbx
  0x00007f73e07e8e62: lea    0x1(%rbx),%rbx
  0x00007f73e07e8e66: mov    %rbx,(%rcx,%rdi,1)
  0x00007f73e07e8e6a: jl     0x00007f73e07e9588  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@1 (line 1428)

  0x00007f73e07e8e70: mov    %rsi,%rcx
  0x00007f73e07e8e73: movabs $0x7f73d35aa148,%rdi  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e8e7d: addq   $0x1,0x160(%rdi)
  0x00007f73e07e8e85: movabs $0x7f73d350ed08,%rcx  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07e8e8f: mov    0x104(%rcx),%edi
  0x00007f73e07e8e95: add    $0x8,%edi
  0x00007f73e07e8e98: mov    %edi,0x104(%rcx)
  0x00007f73e07e8e9e: and    $0x7ffff8,%edi
  0x00007f73e07e8ea4: cmp    $0x0,%edi
  0x00007f73e07e8ea7: je     0x00007f73e07e95be
  0x00007f73e07e8ead: mov    0xc(%rsi),%edi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)

  0x00007f73e07e8eb0: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)
                                                ; implicit exception: dispatches to 0x00007f73e07e95df
  0x00007f73e07e8eb3: mov    %rsi,%rcx
  0x00007f73e07e8eb6: movabs $0x7f73d350ed08,%r8  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07e8ec0: addq   $0x1,0x140(%r8)
  0x00007f73e07e8ec8: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e8ed2: mov    0x104(%rcx),%r8d
  0x00007f73e07e8ed9: add    $0x8,%r8d
  0x00007f73e07e8edd: mov    %r8d,0x104(%rcx)
  0x00007f73e07e8ee4: and    $0x7ffff8,%r8d
  0x00007f73e07e8eeb: cmp    $0x0,%r8d
  0x00007f73e07e8eef: je     0x00007f73e07e95e4
  0x00007f73e07e8ef5: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e8eff: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)

  0x00007f73e07e8f05: movsbl 0x14(%rsi),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)

  0x00007f73e07e8f0a: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e8f14: incl   0x160(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)

  0x00007f73e07e8f1a: mov    %r8,%rcx
  0x00007f73e07e8f1d: shl    $0x18,%ecx
  0x00007f73e07e8f20: mov    %rcx,%r9
  0x00007f73e07e8f23: sar    $0x18,%r9d
  0x00007f73e07e8f27: mov    %r9,%rcx
  0x00007f73e07e8f2a: mov    %rbx,%r11
  0x00007f73e07e8f2d: sar    %cl,%r11d
  0x00007f73e07e8f30: mov    %rdi,0x50(%rsp)
  0x00007f73e07e8f35: cmp    (%rdx),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@10 (line 1428)
                                                ; implicit exception: dispatches to 0x00007f73e07e9605
  0x00007f73e07e8f38: mov    %rdx,%rcx
  0x00007f73e07e8f3b: movabs $0x7f73d35aa148,%r13  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e8f45: addq   $0x1,0x198(%r13)
  0x00007f73e07e8f4d: movabs $0x7f73d350ed08,%rcx  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07e8f57: mov    0x104(%rcx),%r13d
  0x00007f73e07e8f5e: add    $0x8,%r13d
  0x00007f73e07e8f62: mov    %r13d,0x104(%rcx)
  0x00007f73e07e8f69: and    $0x7ffff8,%r13d
  0x00007f73e07e8f70: cmp    $0x0,%r13d
  0x00007f73e07e8f74: je     0x00007f73e07e960a
  0x00007f73e07e8f7a: mov    0xc(%rdx),%r13d    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)

  0x00007f73e07e8f7e: mov    0xc(%r13),%r14d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)
                                                ; implicit exception: dispatches to 0x00007f73e07e962b
  0x00007f73e07e8f82: mov    %rdx,%rcx
  0x00007f73e07e8f85: mov    %r13,0x48(%rsp)
  0x00007f73e07e8f8a: movabs $0x7f73d350ed08,%r13  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07e8f94: addq   $0x1,0x140(%r13)
  0x00007f73e07e8f9c: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e8fa6: mov    0x104(%rcx),%edi
  0x00007f73e07e8fac: add    $0x8,%edi
  0x00007f73e07e8faf: mov    %edi,0x104(%rcx)
  0x00007f73e07e8fb5: and    $0x7ffff8,%edi
  0x00007f73e07e8fbb: cmp    $0x0,%edi
  0x00007f73e07e8fbe: je     0x00007f73e07e9630
  0x00007f73e07e8fc4: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e8fce: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)

  0x00007f73e07e8fd4: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)

  0x00007f73e07e8fd8: movabs $0x7f73d350d1b0,%rdi  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e8fe2: incl   0x160(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)

  0x00007f73e07e8fe8: shl    $0x18,%ecx
  0x00007f73e07e8feb: mov    %rcx,%rdi
  0x00007f73e07e8fee: sar    $0x18,%edi
  0x00007f73e07e8ff1: mov    %rdi,%rcx
  0x00007f73e07e8ff4: mov    %r14,%r13
  0x00007f73e07e8ff7: sar    %cl,%r13d
  0x00007f73e07e8ffa: sub    %r13d,%r11d
  0x00007f73e07e8ffd: cmp    %r11d,%eax
  0x00007f73e07e9000: movabs $0x7f73d35aa148,%rcx  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e900a: movabs $0x1e0,%r11
  0x00007f73e07e9014: jg     0x00007f73e07e9024
  0x00007f73e07e901a: movabs $0x1d0,%r11
  0x00007f73e07e9024: mov    (%rcx,%r11,1),%r13
  0x00007f73e07e9028: lea    0x1(%r13),%r13
  0x00007f73e07e902c: mov    %r13,(%rcx,%r11,1)
  0x00007f73e07e9030: jg     0x00007f73e07e9588  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@14 (line 1428)

  0x00007f73e07e9036: mov    %rsi,%rcx
  0x00007f73e07e9039: movabs $0x7f73d35aa148,%r11  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e9043: addq   $0x1,0x1f0(%r11)
  0x00007f73e07e904b: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e9055: mov    0x104(%rcx),%r11d
  0x00007f73e07e905c: add    $0x8,%r11d
  0x00007f73e07e9060: mov    %r11d,0x104(%rcx)
  0x00007f73e07e9067: and    $0x7ffff8,%r11d
  0x00007f73e07e906e: cmp    $0x0,%r11d
  0x00007f73e07e9072: je     0x00007f73e07e9651
  0x00007f73e07e9078: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e9082: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::startsWith@39 (line 1435)

  0x00007f73e07e9088: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e9092: incl   0x160(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::startsWith@39 (line 1435)

  0x00007f73e07e9098: mov    %rdx,%rcx
  0x00007f73e07e909b: movabs $0x7f73d35aa148,%r11  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e90a5: addq   $0x1,0x228(%r11)
  0x00007f73e07e90ad: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e90b7: mov    0x104(%rcx),%r11d
  0x00007f73e07e90be: add    $0x8,%r11d
  0x00007f73e07e90c2: mov    %r11d,0x104(%rcx)
  0x00007f73e07e90c9: and    $0x7ffff8,%r11d
  0x00007f73e07e90d0: cmp    $0x0,%r11d
  0x00007f73e07e90d4: je     0x00007f73e07e9672
  0x00007f73e07e90da: movabs $0x7f73d350d1b0,%rdx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e90e4: incl   0x150(%rdx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::startsWith@43 (line 1435)

  0x00007f73e07e90ea: movabs $0x7f73d350d1b0,%rdx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e90f4: incl   0x160(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::startsWith@43 (line 1435)

  0x00007f73e07e90fa: cmp    %edi,%r9d
  0x00007f73e07e90fd: movabs $0x7f73d35aa148,%rdi  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e9107: movabs $0x260,%rdx
  0x00007f73e07e9111: jne    0x00007f73e07e9121
  0x00007f73e07e9117: movabs $0x270,%rdx
  0x00007f73e07e9121: mov    (%rdi,%rdx,1),%rcx
  0x00007f73e07e9125: lea    0x1(%rcx),%rcx
  0x00007f73e07e9129: mov    %rcx,(%rdi,%rdx,1)
  0x00007f73e07e912d: jne    0x00007f73e07e9339  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@46 (line 1435)

  0x00007f73e07e9133: mov    %rsi,%rdi
  0x00007f73e07e9136: movabs $0x7f73d35aa148,%rdx  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e9140: addq   $0x1,0x280(%rdx)
  0x00007f73e07e9148: movabs $0x7f73d350b2d8,%rdi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e9152: mov    0x104(%rdi),%edx
  0x00007f73e07e9158: add    $0x8,%edx
  0x00007f73e07e915b: mov    %edx,0x104(%rdi)
  0x00007f73e07e9161: and    $0x7ffff8,%edx
  0x00007f73e07e9167: cmp    $0x0,%edx
  0x00007f73e07e916a: je     0x00007f73e07e9693
  0x00007f73e07e9170: movabs $0x7f73d350b2d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e917a: incl   0x150(%rsi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::startsWith@50 (line 1436)

  0x00007f73e07e9180: cmp    $0x0,%r8d
  0x00007f73e07e9184: movabs $0x7f73d350b2d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e918e: movabs $0x160,%rdi
  0x00007f73e07e9198: jne    0x00007f73e07e91a8
  0x00007f73e07e919e: movabs $0x170,%rdi
  0x00007f73e07e91a8: mov    (%rsi,%rdi,1),%rdx
  0x00007f73e07e91ac: lea    0x1(%rdx),%rdx
  0x00007f73e07e91b0: mov    %rdx,(%rsi,%rdi,1)
  0x00007f73e07e91b4: jne    0x00007f73e07e91d4  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::startsWith@50 (line 1436)

  0x00007f73e07e91ba: movabs $0x7f73d350b2d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e91c4: incl   0x180(%rsi)
  0x00007f73e07e91ca: mov    $0x1,%esi
  0x00007f73e07e91cf: jmpq   0x00007f73e07e91d9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::startsWith@50 (line 1436)

  0x00007f73e07e91d4: mov    $0x0,%esi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::startsWith@50 (line 1436)

  0x00007f73e07e91d9: and    $0x1,%esi
  0x00007f73e07e91dc: cmp    $0x0,%esi
  0x00007f73e07e91df: movabs $0x7f73d35aa148,%rsi  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e91e9: movabs $0x2b8,%rdi
  0x00007f73e07e91f3: je     0x00007f73e07e9203
  0x00007f73e07e91f9: movabs $0x2c8,%rdi
  0x00007f73e07e9203: mov    (%rsi,%rdi,1),%rdx
  0x00007f73e07e9207: lea    0x1(%rdx),%rdx
  0x00007f73e07e920b: mov    %rdx,(%rsi,%rdi,1)
  0x00007f73e07e920f: je     0x00007f73e07e922a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@53 (line 1436)

  0x00007f73e07e9215: movabs $0x7f73d35aa148,%rsi  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e921f: incl   0x2d8(%rsi)
  0x00007f73e07e9225: jmpq   0x00007f73e07e922c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@57 (line 1436)

  0x00007f73e07e922a: shl    %eax
  0x00007f73e07e922c: mov    $0x0,%esi
  0x00007f73e07e9231: mov    0x48(%rsp),%r13
  0x00007f73e07e9236: mov    0x50(%rsp),%rdi
  0x00007f73e07e923b: jmpq   0x00007f73e07e92fb  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1437)

  0x00007f73e07e9240: mov    %rax,%rdx
  0x00007f73e07e9243: inc    %edx
  0x00007f73e07e9245: cmp    %eax,%ebx
  0x00007f73e07e9247: jbe    0x00007f73e07e96b4
  0x00007f73e07e924d: movslq %eax,%rax
  0x00007f73e07e9250: movsbl 0x10(%rdi,%rax,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@78 (line 1438)

  0x00007f73e07e9255: mov    %rsi,%rcx
  0x00007f73e07e9258: inc    %ecx
  0x00007f73e07e925a: movslq %esi,%rsi
  0x00007f73e07e925d: movsbl 0x10(%r13,%rsi,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@86 (line 1438)

  0x00007f73e07e9263: cmp    %esi,%eax
  0x00007f73e07e9265: mov    $0x8,%r8d
  0x00007f73e07e926b: je     0x00007f73e07e9277
  0x00007f73e07e9271: mov    $0x0,%r8d
  0x00007f73e07e9277: movabs $0x7f73d35aa148,%r9  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e9281: mov    0x108(%r9),%r11d
  0x00007f73e07e9288: add    %r8d,%r11d
  0x00007f73e07e928b: mov    %r11d,0x108(%r9)
  0x00007f73e07e9292: cmp    $0x0,%r8d
  0x00007f73e07e9296: jne    0x00007f73e07e92a2
  0x00007f73e07e929c: mov    $0x8,%r11d
  0x00007f73e07e92a2: and    $0xfff8,%r11d
  0x00007f73e07e92a9: cmp    $0x0,%r11d
  0x00007f73e07e92ad: je     0x00007f73e07e96c2  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@87 (line 1438)

  0x00007f73e07e92b3: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdi=Oop r13=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@87 (line 1438)

  0x00007f73e07e92ba: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e92bd: cmp    %esi,%eax
  0x00007f73e07e92bf: movabs $0x7f73d35aa148,%rax  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e92c9: movabs $0x320,%rsi
  0x00007f73e07e92d3: jne    0x00007f73e07e92e3
  0x00007f73e07e92d9: movabs $0x310,%rsi
  0x00007f73e07e92e3: mov    (%rax,%rsi,1),%r8
  0x00007f73e07e92e7: lea    0x1(%r8),%r8
  0x00007f73e07e92eb: mov    %r8,(%rax,%rsi,1)
  0x00007f73e07e92ef: jne    0x00007f73e07e954e  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@87 (line 1438)

  0x00007f73e07e92f5: mov    %rdx,%rax
  0x00007f73e07e92f8: mov    %rcx,%rsi          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@65 (line 1437)

  0x00007f73e07e92fb: cmp    %r14d,%esi
  0x00007f73e07e92fe: movabs $0x7f73d35aa148,%rdx  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e9308: movabs $0x2f0,%rcx
  0x00007f73e07e9312: jge    0x00007f73e07e9322
  0x00007f73e07e9318: movabs $0x300,%rcx
  0x00007f73e07e9322: mov    (%rdx,%rcx,1),%r8
  0x00007f73e07e9326: lea    0x1(%r8),%r8
  0x00007f73e07e932a: mov    %r8,(%rdx,%rcx,1)
  0x00007f73e07e932e: jge    0x00007f73e07e9563
  0x00007f73e07e9334: jmpq   0x00007f73e07e9240  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@69 (line 1437)

  0x00007f73e07e9339: mov    0x48(%rsp),%r13
  0x00007f73e07e933e: mov    0x50(%rsp),%rdi
  0x00007f73e07e9343: mov    %rsi,%rbx
  0x00007f73e07e9346: movabs $0x7f73d35aa148,%rdx  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e9350: addq   $0x1,0x348(%rdx)
  0x00007f73e07e9358: movabs $0x7f73d350b2d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e9362: mov    0x104(%rbx),%edx
  0x00007f73e07e9368: add    $0x8,%edx
  0x00007f73e07e936b: mov    %edx,0x104(%rbx)
  0x00007f73e07e9371: and    $0x7ffff8,%edx
  0x00007f73e07e9377: cmp    $0x0,%edx
  0x00007f73e07e937a: je     0x00007f73e07e96e3
  0x00007f73e07e9380: movabs $0x7f73d350b2d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e938a: incl   0x150(%rsi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::startsWith@96 (line 1443)

  0x00007f73e07e9390: cmp    $0x0,%r8d
  0x00007f73e07e9394: movabs $0x7f73d350b2d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e939e: movabs $0x160,%rbx
  0x00007f73e07e93a8: jne    0x00007f73e07e93b8
  0x00007f73e07e93ae: movabs $0x170,%rbx
  0x00007f73e07e93b8: mov    (%rsi,%rbx,1),%rdx
  0x00007f73e07e93bc: lea    0x1(%rdx),%rdx
  0x00007f73e07e93c0: mov    %rdx,(%rsi,%rbx,1)
  0x00007f73e07e93c4: jne    0x00007f73e07e93e4  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::startsWith@96 (line 1443)

  0x00007f73e07e93ca: movabs $0x7f73d350b2d8,%rsi  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e93d4: incl   0x180(%rsi)
  0x00007f73e07e93da: mov    $0x1,%esi
  0x00007f73e07e93df: jmpq   0x00007f73e07e93e9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::startsWith@96 (line 1443)

  0x00007f73e07e93e4: mov    $0x0,%esi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::startsWith@96 (line 1443)

  0x00007f73e07e93e9: and    $0x1,%esi
  0x00007f73e07e93ec: cmp    $0x0,%esi
  0x00007f73e07e93ef: movabs $0x7f73d35aa148,%rsi  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e93f9: movabs $0x390,%rbx
  0x00007f73e07e9403: jne    0x00007f73e07e9413
  0x00007f73e07e9409: movabs $0x380,%rbx
  0x00007f73e07e9413: mov    (%rsi,%rbx,1),%rdx
  0x00007f73e07e9417: lea    0x1(%rdx),%rdx
  0x00007f73e07e941b: mov    %rdx,(%rsi,%rbx,1)
  0x00007f73e07e941f: jne    0x00007f73e07e9539  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@99 (line 1443)

  0x00007f73e07e9425: mov    $0x0,%esi
  0x00007f73e07e942a: jmpq   0x00007f73e07e94e6  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@104 (line 1447)

  0x00007f73e07e942f: nop
  0x00007f73e07e9430: mov    %rax,%rbx
  0x00007f73e07e9433: inc    %ebx
  0x00007f73e07e9435: movslq %eax,%rax
  0x00007f73e07e9438: movzwl 0x10(%rdi,%rax,2),%eax  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@116 (line 1448)

  0x00007f73e07e943d: mov    %rsi,%rdx
  0x00007f73e07e9440: inc    %edx
  0x00007f73e07e9442: movslq %esi,%rsi
  0x00007f73e07e9445: movsbl 0x10(%r13,%rsi,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@126 (line 1448)

  0x00007f73e07e944b: and    $0xff,%esi
  0x00007f73e07e9451: cmp    %esi,%eax
  0x00007f73e07e9453: mov    $0x8,%ecx
  0x00007f73e07e9458: je     0x00007f73e07e9463
  0x00007f73e07e945e: mov    $0x0,%ecx
  0x00007f73e07e9463: movabs $0x7f73d35aa148,%r8  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e946d: mov    0x108(%r8),%r9d
  0x00007f73e07e9474: add    %ecx,%r9d
  0x00007f73e07e9477: mov    %r9d,0x108(%r8)
  0x00007f73e07e947e: cmp    $0x0,%ecx
  0x00007f73e07e9481: jne    0x00007f73e07e948d
  0x00007f73e07e9487: mov    $0x8,%r9d
  0x00007f73e07e948d: and    $0xfff8,%r9d
  0x00007f73e07e9494: cmp    $0x0,%r9d
  0x00007f73e07e9498: je     0x00007f73e07e9704  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@131 (line 1448)

  0x00007f73e07e949e: mov    0x108(%r15),%r10   ; ImmutableOopMap{rdi=Oop r13=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@131 (line 1448)

  0x00007f73e07e94a5: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07e94a8: cmp    %esi,%eax
  0x00007f73e07e94aa: movabs $0x7f73d35aa148,%rax  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e94b4: movabs $0x3e0,%rsi
  0x00007f73e07e94be: jne    0x00007f73e07e94ce
  0x00007f73e07e94c4: movabs $0x3d0,%rsi
  0x00007f73e07e94ce: mov    (%rax,%rsi,1),%rcx
  0x00007f73e07e94d2: lea    0x1(%rcx),%rcx
  0x00007f73e07e94d6: mov    %rcx,(%rax,%rsi,1)
  0x00007f73e07e94da: jne    0x00007f73e07e9524  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@131 (line 1448)

  0x00007f73e07e94e0: mov    %rdx,%rsi
  0x00007f73e07e94e3: mov    %rbx,%rax          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@104 (line 1447)

  0x00007f73e07e94e6: cmp    %r14d,%esi
  0x00007f73e07e94e9: movabs $0x7f73d35aa148,%rbx  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e94f3: movabs $0x3a0,%rdx
  0x00007f73e07e94fd: jge    0x00007f73e07e950d
  0x00007f73e07e9503: movabs $0x3b0,%rdx
  0x00007f73e07e950d: mov    (%rbx,%rdx,1),%rcx
  0x00007f73e07e9511: lea    0x1(%rcx),%rcx
  0x00007f73e07e9515: mov    %rcx,(%rbx,%rdx,1)
  0x00007f73e07e9519: jge    0x00007f73e07e9573
  0x00007f73e07e951f: jmpq   0x00007f73e07e9430  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@108 (line 1447)

  0x00007f73e07e9524: mov    $0x0,%eax
  0x00007f73e07e9529: add    $0x60,%rsp
  0x00007f73e07e952d: pop    %rbp
  0x00007f73e07e952e: mov    0x108(%r15),%r10
  0x00007f73e07e9535: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e9538: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@135 (line 1449)

  0x00007f73e07e9539: mov    $0x0,%eax
  0x00007f73e07e953e: add    $0x60,%rsp
  0x00007f73e07e9542: pop    %rbp
  0x00007f73e07e9543: mov    0x108(%r15),%r10
  0x00007f73e07e954a: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e954d: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@103 (line 1444)

  0x00007f73e07e954e: mov    $0x0,%eax
  0x00007f73e07e9553: add    $0x60,%rsp
  0x00007f73e07e9557: pop    %rbp
  0x00007f73e07e9558: mov    0x108(%r15),%r10
  0x00007f73e07e955f: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e9562: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@91 (line 1439)

  0x00007f73e07e9563: movabs $0x7f73d35aa148,%rax  ;   {metadata(method data for {method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e956d: incl   0x330(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@92 (line 1442)

  0x00007f73e07e9573: mov    $0x1,%eax
  0x00007f73e07e9578: add    $0x60,%rsp
  0x00007f73e07e957c: pop    %rbp
  0x00007f73e07e957d: mov    0x108(%r15),%r10
  0x00007f73e07e9584: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e9587: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@137 (line 1453)

  0x00007f73e07e9588: mov    $0x0,%eax
  0x00007f73e07e958d: add    $0x60,%rsp
  0x00007f73e07e9591: pop    %rbp
  0x00007f73e07e9592: mov    0x108(%r15),%r10
  0x00007f73e07e9599: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07e959c: retq   
  0x00007f73e07e959d: movabs $0x800339e98,%r10  ;   {metadata({method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e95a7: mov    %r10,0x8(%rsp)
  0x00007f73e07e95ac: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e95b4: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1428)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e95b9: jmpq   0x00007f73e07e8e37
  0x00007f73e07e95be: movabs $0x800339080,%r10  ;   {metadata({method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07e95c8: mov    %r10,0x8(%rsp)
  0x00007f73e07e95cd: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e95d5: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e95da: jmpq   0x00007f73e07e8ead
  0x00007f73e07e95df: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop rsi=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e95e4: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e95ee: mov    %r10,0x8(%rsp)
  0x00007f73e07e95f3: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e95fb: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdx=Oop rsi=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@6 (line 1428)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e9600: jmpq   0x00007f73e07e8ef5
  0x00007f73e07e9605: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop rsi=Oop [80]=Oop }
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@10 (line 1428)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e960a: movabs $0x800339080,%r10  ;   {metadata({method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07e9614: mov    %r10,0x8(%rsp)
  0x00007f73e07e9619: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e9621: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdx=Oop rsi=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e9626: jmpq   0x00007f73e07e8f7a
  0x00007f73e07e962b: callq  0x00007f73e03308a0  ; ImmutableOopMap{rdx=Oop rsi=Oop [80]=Oop r13=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07e9630: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e963a: mov    %r10,0x8(%rsp)
  0x00007f73e07e963f: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e9647: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdx=Oop rsi=Oop [80]=Oop [72]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.String::startsWith@10 (line 1428)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e964c: jmpq   0x00007f73e07e8fc4
  0x00007f73e07e9651: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e965b: mov    %r10,0x8(%rsp)
  0x00007f73e07e9660: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e9668: callq  0x00007f73e0334d80  ; ImmutableOopMap{[72]=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::startsWith@39 (line 1435)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e966d: jmpq   0x00007f73e07e9078
  0x00007f73e07e9672: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07e967c: mov    %r10,0x8(%rsp)
  0x00007f73e07e9681: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e9689: callq  0x00007f73e0334d80  ; ImmutableOopMap{[72]=Oop [80]=Oop rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::startsWith@43 (line 1435)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e968e: jmpq   0x00007f73e07e90da
  0x00007f73e07e9693: movabs $0x80033ac68,%r10  ;   {metadata({method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e969d: mov    %r10,0x8(%rsp)
  0x00007f73e07e96a2: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e96aa: callq  0x00007f73e0334d80  ; ImmutableOopMap{[72]=Oop [80]=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::startsWith@50 (line 1436)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e96af: jmpq   0x00007f73e07e9170
  0x00007f73e07e96b4: mov    %rax,(%rsp)
  0x00007f73e07e96b8: mov    %rdi,0x8(%rsp)
  0x00007f73e07e96bd: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rdi=Oop r13=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@78 (line 1438)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07e96c2: movabs $0x800339e98,%r10  ;   {metadata({method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e96cc: mov    %r10,0x8(%rsp)
  0x00007f73e07e96d1: movq   $0x57,(%rsp)
  0x00007f73e07e96d9: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdi=Oop r13=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@87 (line 1438)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e96de: jmpq   0x00007f73e07e92b3
  0x00007f73e07e96e3: movabs $0x80033ac68,%r10  ;   {metadata({method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07e96ed: mov    %r10,0x8(%rsp)
  0x00007f73e07e96f2: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07e96fa: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdi=Oop r13=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::startsWith@96 (line 1443)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e96ff: jmpq   0x00007f73e07e9380
  0x00007f73e07e9704: movabs $0x800339e98,%r10  ;   {metadata({method} {0x0000000800339e98} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00007f73e07e970e: mov    %r10,0x8(%rsp)
  0x00007f73e07e9713: movq   $0x83,(%rsp)
  0x00007f73e07e971b: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdi=Oop r13=Oop }
                                                ;*if_icmpeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::startsWith@131 (line 1448)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07e9720: jmpq   0x00007f73e07e949e
  0x00007f73e07e9725: nop
  0x00007f73e07e9726: nop
  0x00007f73e07e9727: mov    0x428(%r15),%rax
  0x00007f73e07e972e: movabs $0x0,%r10
  0x00007f73e07e9738: mov    %r10,0x428(%r15)
  0x00007f73e07e973f: movabs $0x0,%r10
  0x00007f73e07e9749: mov    %r10,0x430(%r15)
  0x00007f73e07e9750: add    $0x60,%rsp
  0x00007f73e07e9754: pop    %rbp
  0x00007f73e07e9755: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07e975a: hlt    
  0x00007f73e07e975b: hlt    
  0x00007f73e07e975c: hlt    
  0x00007f73e07e975d: hlt    
  0x00007f73e07e975e: hlt    
  0x00007f73e07e975f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07e9760: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07e9765: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07e976f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07e9773: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07e9778: hlt    
[Deopt Handler Code]
  0x00007f73e07e9779: movabs $0x7f73e07e9779,%r10  ;   {section_word}
  0x00007f73e07e9783: push   %r10
  0x00007f73e07e9785: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07e978a: hlt    
  0x00007f73e07e978b: hlt    
  0x00007f73e07e978c: hlt    
  0x00007f73e07e978d: hlt    
  0x00007f73e07e978e: hlt    
  0x00007f73e07e978f: hlt    

ImmutableOopMap{rdi=Oop r13=Oop }pc offsets: 1274 1765 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 2041 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 2074 
ImmutableOopMap{rdx=Oop rsi=Oop rdi=Oop }pc offsets: 2084 2112 
ImmutableOopMap{rdx=Oop rsi=Oop [80]=Oop }pc offsets: 2122 2150 
ImmutableOopMap{rdx=Oop rsi=Oop [80]=Oop r13=Oop }pc offsets: 2160 
ImmutableOopMap{rdx=Oop rsi=Oop [80]=Oop [72]=Oop }pc offsets: 2188 
ImmutableOopMap{[72]=Oop [80]=Oop rsi=Oop rdx=Oop }pc offsets: 2221 2254 
ImmutableOopMap{[72]=Oop [80]=Oop rsi=Oop }pc offsets: 2287 
ImmutableOopMap{rdi=Oop r13=Oop }pc offsets: 2306 2334 
ImmutableOopMap{rdi=Oop r13=Oop rsi=Oop }pc offsets: 2367 
ImmutableOopMap{rdi=Oop r13=Oop }pc offsets: 2400 Compiled method (c1)   80051  301       3       java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
 total in heap  [0x00007f73e07e9f10,0x00007f73e07ea320] = 1040
 relocation     [0x00007f73e07ea088,0x00007f73e07ea0b8] = 48
 main code      [0x00007f73e07ea0c0,0x00007f73e07ea220] = 352
 stub code      [0x00007f73e07ea220,0x00007f73e07ea250] = 48
 metadata       [0x00007f73e07ea250,0x00007f73e07ea258] = 8
 scopes data    [0x00007f73e07ea258,0x00007f73e07ea288] = 48
 scopes pcs     [0x00007f73e07ea288,0x00007f73e07ea318] = 144
 dependencies   [0x00007f73e07ea318,0x00007f73e07ea320] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.isLatin1()Z  [0x00007f73e07ea0c0, 0x00007f73e07ea250]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800384560} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07ea0c0: mov    0x8(%rsi),%r10d
  0x00007f73e07ea0c4: shl    $0x3,%r10
  0x00007f73e07ea0c8: movabs $0x800000000,%r12
  0x00007f73e07ea0d2: add    %r12,%r10
  0x00007f73e07ea0d5: xor    %r12,%r12
  0x00007f73e07ea0d8: cmp    %rax,%r10
  0x00007f73e07ea0db: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07ea0e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ea0ec: data16 data16 xchg %ax,%ax
  0x00007f73e07ea0f0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ea0fb: data16 data16 xchg %ax,%ax
  0x00007f73e07ea0ff: nop
[Verified Entry Point]
  0x00007f73e07ea100: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ea107: push   %rbp
  0x00007f73e07ea108: sub    $0x30,%rsp
  0x00007f73e07ea10c: movabs $0x7f73d35811e0,%rax  ;   {metadata(method data for {method} {0x0000000800384560} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07ea116: mov    0x104(%rax),%edi
  0x00007f73e07ea11c: add    $0x8,%edi
  0x00007f73e07ea11f: mov    %edi,0x104(%rax)
  0x00007f73e07ea125: and    $0x1ff8,%edi
  0x00007f73e07ea12b: cmp    $0x0,%edi
  0x00007f73e07ea12e: je     0x00007f73e07ea1b3  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@0 (line 1624)

  0x00007f73e07ea134: movabs $0x7f73d35811e0,%rax  ;   {metadata(method data for {method} {0x0000000800384560} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07ea13e: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@3 (line 1624)

  0x00007f73e07ea144: movsbl 0x10(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7 (line 1624)

  0x00007f73e07ea148: cmp    $0x0,%eax
  0x00007f73e07ea14b: movabs $0x7f73d35811e0,%rax  ;   {metadata(method data for {method} {0x0000000800384560} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07ea155: movabs $0x160,%rsi
  0x00007f73e07ea15f: jne    0x00007f73e07ea16f
  0x00007f73e07ea165: movabs $0x170,%rsi
  0x00007f73e07ea16f: mov    (%rax,%rsi,1),%rdi
  0x00007f73e07ea173: lea    0x1(%rdi),%rdi
  0x00007f73e07ea177: mov    %rdi,(%rax,%rsi,1)
  0x00007f73e07ea17b: jne    0x00007f73e07ea19b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10 (line 1624)

  0x00007f73e07ea181: movabs $0x7f73d35811e0,%rax  ;   {metadata(method data for {method} {0x0000000800384560} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07ea18b: incl   0x180(%rax)
  0x00007f73e07ea191: mov    $0x1,%eax
  0x00007f73e07ea196: jmpq   0x00007f73e07ea1a0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@14 (line 1624)

  0x00007f73e07ea19b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@18 (line 1624)

  0x00007f73e07ea1a0: and    $0x1,%eax
  0x00007f73e07ea1a3: add    $0x30,%rsp
  0x00007f73e07ea1a7: pop    %rbp
  0x00007f73e07ea1a8: mov    0x108(%r15),%r10
  0x00007f73e07ea1af: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ea1b2: retq   
  0x00007f73e07ea1b3: movabs $0x800384560,%r10  ;   {metadata({method} {0x0000000800384560} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07ea1bd: mov    %r10,0x8(%rsp)
  0x00007f73e07ea1c2: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ea1ca: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::isLatin1@-1 (line 1624)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ea1cf: jmpq   0x00007f73e07ea134
  0x00007f73e07ea1d4: nop
  0x00007f73e07ea1d5: nop
  0x00007f73e07ea1d6: mov    0x428(%r15),%rax
  0x00007f73e07ea1dd: movabs $0x0,%r10
  0x00007f73e07ea1e7: mov    %r10,0x428(%r15)
  0x00007f73e07ea1ee: movabs $0x0,%r10
  0x00007f73e07ea1f8: mov    %r10,0x430(%r15)
  0x00007f73e07ea1ff: add    $0x30,%rsp
  0x00007f73e07ea203: pop    %rbp
  0x00007f73e07ea204: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ea209: hlt    
  0x00007f73e07ea20a: hlt    
  0x00007f73e07ea20b: hlt    
  0x00007f73e07ea20c: hlt    
  0x00007f73e07ea20d: hlt    
  0x00007f73e07ea20e: hlt    
  0x00007f73e07ea20f: hlt    
  0x00007f73e07ea210: hlt    
  0x00007f73e07ea211: hlt    
  0x00007f73e07ea212: hlt    
  0x00007f73e07ea213: hlt    
  0x00007f73e07ea214: hlt    
  0x00007f73e07ea215: hlt    
  0x00007f73e07ea216: hlt    
  0x00007f73e07ea217: hlt    
  0x00007f73e07ea218: hlt    
  0x00007f73e07ea219: hlt    
  0x00007f73e07ea21a: hlt    
  0x00007f73e07ea21b: hlt    
  0x00007f73e07ea21c: hlt    
  0x00007f73e07ea21d: hlt    
  0x00007f73e07ea21e: hlt    
  0x00007f73e07ea21f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07ea220: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07ea225: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ea22f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ea233: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ea238: hlt    
[Deopt Handler Code]
  0x00007f73e07ea239: movabs $0x7f73e07ea239,%r10  ;   {section_word}
  0x00007f73e07ea243: push   %r10
  0x00007f73e07ea245: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ea24a: hlt    
  0x00007f73e07ea24b: hlt    
  0x00007f73e07ea24c: hlt    
  0x00007f73e07ea24d: hlt    
  0x00007f73e07ea24e: hlt    
  0x00007f73e07ea24f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 271 Compiled method (c1)   80527  304       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
 total in heap  [0x00007f73e07ea390,0x00007f73e07ea720] = 912
 relocation     [0x00007f73e07ea508,0x00007f73e07ea540] = 56
 main code      [0x00007f73e07ea540,0x00007f73e07ea640] = 256
 stub code      [0x00007f73e07ea640,0x00007f73e07ea680] = 64
 metadata       [0x00007f73e07ea680,0x00007f73e07ea690] = 16
 scopes data    [0x00007f73e07ea690,0x00007f73e07ea6b8] = 40
 scopes pcs     [0x00007f73e07ea6b8,0x00007f73e07ea718] = 96
 dependencies   [0x00007f73e07ea718,0x00007f73e07ea720] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00007f73e07ea540, 0x00007f73e07ea680]  320 bytes
[Entry Point]
[Constants]
  # {method} {0x000000080034dda8} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rsi:rsi   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07ea540: mov    0x8(%rsi),%r10d
  0x00007f73e07ea544: shl    $0x3,%r10
  0x00007f73e07ea548: movabs $0x800000000,%r12
  0x00007f73e07ea552: add    %r12,%r10
  0x00007f73e07ea555: xor    %r12,%r12
  0x00007f73e07ea558: cmp    %rax,%r10
  0x00007f73e07ea55b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07ea561: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ea56c: data16 data16 xchg %ax,%ax
  0x00007f73e07ea570: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ea57b: data16 data16 xchg %ax,%ax
  0x00007f73e07ea57f: nop
[Verified Entry Point]
  0x00007f73e07ea580: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ea587: push   %rbp
  0x00007f73e07ea588: sub    $0x30,%rsp
  0x00007f73e07ea58c: movabs $0x7f73d350e970,%r8  ;   {metadata(method data for {method} {0x000000080034dda8} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07ea596: mov    0x104(%r8),%edi
  0x00007f73e07ea59d: add    $0x8,%edi
  0x00007f73e07ea5a0: mov    %edi,0x104(%r8)
  0x00007f73e07ea5a7: and    $0x1ff8,%edi
  0x00007f73e07ea5ad: cmp    $0x0,%edi
  0x00007f73e07ea5b0: je     0x00007f73e07ea5ec  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@0 (line 1541)

  0x00007f73e07ea5b6: mov    %rsi,%r8
  0x00007f73e07ea5b9: movabs $0x7f73d350e970,%rdi  ;   {metadata(method data for {method} {0x000000080034dda8} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07ea5c3: addq   $0x1,0x140(%rdi)
  0x00007f73e07ea5cb: mov    $0x1,%r8d          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)

  0x00007f73e07ea5d1: nopw   0x0(%rax,%rax,1)
  0x00007f73e07ea5d7: callq  0x00007f73e0269100  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@4 (line 1541)
                                                ;   {optimized virtual_call}
  0x00007f73e07ea5dc: add    $0x30,%rsp
  0x00007f73e07ea5e0: pop    %rbp
  0x00007f73e07ea5e1: mov    0x108(%r15),%r10
  0x00007f73e07ea5e8: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ea5eb: retq   
  0x00007f73e07ea5ec: movabs $0x80034dda8,%r10  ;   {metadata({method} {0x000000080034dda8} 'putIfAbsent' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00007f73e07ea5f6: mov    %r10,0x8(%rsp)
  0x00007f73e07ea5fb: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ea603: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putIfAbsent@-1 (line 1541)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ea608: jmp    0x00007f73e07ea5b6
  0x00007f73e07ea60a: nop
  0x00007f73e07ea60b: nop
  0x00007f73e07ea60c: mov    0x428(%r15),%rax
  0x00007f73e07ea613: movabs $0x0,%r10
  0x00007f73e07ea61d: mov    %r10,0x428(%r15)
  0x00007f73e07ea624: movabs $0x0,%r10
  0x00007f73e07ea62e: mov    %r10,0x430(%r15)
  0x00007f73e07ea635: add    $0x30,%rsp
  0x00007f73e07ea639: pop    %rbp
  0x00007f73e07ea63a: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ea63f: hlt    
[Stub Code]
  0x00007f73e07ea640: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07ea645: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ea64f: jmpq   0x00007f73e07ea64f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07ea654: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07ea659: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ea663: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ea667: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ea66c: hlt    
[Deopt Handler Code]
  0x00007f73e07ea66d: movabs $0x7f73e07ea66d,%r10  ;   {section_word}
  0x00007f73e07ea677: push   %r10
  0x00007f73e07ea679: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ea67e: hlt    
  0x00007f73e07ea67f: hlt    

ImmutableOopMap{}pc offsets: 156 
ImmutableOopMap{rsi=Oop rdx=Oop rcx=Oop }pc offsets: 200 Compiled method (c2)   81026  269       4       java.lang.StringLatin1::lastIndexOf (40 bytes)
 total in heap  [0x00007f73e7d16090,0x00007f73e7d16788] = 1784
 relocation     [0x00007f73e7d16208,0x00007f73e7d16218] = 16
 main code      [0x00007f73e7d16220,0x00007f73e7d163c0] = 416
 stub code      [0x00007f73e7d163c0,0x00007f73e7d163d8] = 24
 metadata       [0x00007f73e7d163d8,0x00007f73e7d163e8] = 16
 scopes data    [0x00007f73e7d163e8,0x00007f73e7d16490] = 168
 scopes pcs     [0x00007f73e7d16490,0x00007f73e7d16770] = 736
 dependencies   [0x00007f73e7d16770,0x00007f73e7d16778] = 8
 nul chk table  [0x00007f73e7d16778,0x00007f73e7d16788] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.lastIndexOf([BII)I  [0x00007f73e7d16220, 0x00007f73e7d163d8]  440 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033ec90} 'lastIndexOf' '([BII)I' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007f73e7d16220: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d16227: push   %rbp
  0x00007f73e7d16228: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::lastIndexOf@-1 (line 284)

  0x00007f73e7d1622c: mov    %edx,%ebp
  0x00007f73e7d1622e: shr    $0x8,%ebp          ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@3 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007f73e7d16231: test   %ebp,%ebp
  0x00007f73e7d16233: jne    0x00007f73e7d1638c  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)

  0x00007f73e7d16239: mov    0xc(%rsi),%r11d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@11 (line 287)
                                                ; implicit exception: dispatches to 0x00007f73e7d163a4
  0x00007f73e7d1623d: mov    %r11d,%eax
  0x00007f73e7d16240: dec    %eax               ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@13 (line 287)

  0x00007f73e7d16242: cmp    %eax,%ecx
  0x00007f73e7d16244: cmovl  %ecx,%eax          ;*invokestatic min {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@14 (line 287)

  0x00007f73e7d16247: test   %eax,%eax
  0x00007f73e7d16249: jl     0x00007f73e7d1633e  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@19 (line 288)

  0x00007f73e7d1624f: test   %r11d,%r11d
  0x00007f73e7d16252: jbe    0x00007f73e7d16375
  0x00007f73e7d16258: cmp    %r11d,%eax
  0x00007f73e7d1625b: jae    0x00007f73e7d16375
  0x00007f73e7d16261: mov    %eax,%r10d
  0x00007f73e7d16264: dec    %r10d
  0x00007f73e7d16267: movsbl %dl,%r9d           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@22 (line 289)

  0x00007f73e7d1626b: movsbl 0x10(%rsi,%rax,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d16271: cmp    %r9d,%r11d
  0x00007f73e7d16274: je     0x00007f73e7d16347  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d1627a: dec    %eax               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@32 (line 288)

  0x00007f73e7d1627c: cmp    %r10d,%eax
  0x00007f73e7d1627f: jg     0x00007f73e7d1626b  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@19 (line 288)

  0x00007f73e7d16281: cmp    $0x6,%eax
  0x00007f73e7d16284: jle    0x00007f73e7d16324
  0x00007f73e7d1628a: mov    $0x1f40,%r10d
  0x00007f73e7d16290: mov    %eax,%r11d
  0x00007f73e7d16293: add    $0xfffffffa,%r11d
  0x00007f73e7d16297: cmp    %r10d,%r11d
  0x00007f73e7d1629a: cmovg  %r10d,%r11d
  0x00007f73e7d1629e: mov    %eax,%ecx
  0x00007f73e7d162a0: sub    %r11d,%ecx         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@22 (line 289)

  0x00007f73e7d162a3: movslq %eax,%r8
  0x00007f73e7d162a6: movsbl 0x10(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d162ac: cmp    %r9d,%r11d
  0x00007f73e7d162af: je     0x00007f73e7d16347  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d162b5: movsbl 0xf(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d162bb: cmp    %r9d,%r11d
  0x00007f73e7d162be: je     0x00007f73e7d16345  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d162c4: movsbl 0xe(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d162ca: cmp    %r9d,%r11d
  0x00007f73e7d162cd: je     0x00007f73e7d16357  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d162d3: movsbl 0xd(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d162d9: cmp    %r9d,%r11d
  0x00007f73e7d162dc: je     0x00007f73e7d1635c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d162de: movsbl 0xc(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d162e4: cmp    %r9d,%r11d
  0x00007f73e7d162e7: je     0x00007f73e7d16361  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d162e9: movsbl 0xb(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d162ef: cmp    %r9d,%r11d
  0x00007f73e7d162f2: je     0x00007f73e7d16366  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d162f4: movsbl 0xa(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d162fa: cmp    %r9d,%r11d
  0x00007f73e7d162fd: je     0x00007f73e7d1636b  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d162ff: movsbl 0x9(%rsi,%r8,1),%r11d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d16305: cmp    %r9d,%r11d
  0x00007f73e7d16308: je     0x00007f73e7d16370  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d1630a: add    $0xfffffff8,%eax   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@32 (line 288)

  0x00007f73e7d1630d: cmp    %ecx,%eax
  0x00007f73e7d1630f: jg     0x00007f73e7d162a3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007f73e7d16311: mov    0x108(%r15),%r11   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)

  0x00007f73e7d16318: test   %eax,(%r11)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@35 (line 288)
                                                ;   {poll}
  0x00007f73e7d1631b: cmp    $0x6,%eax
  0x00007f73e7d1631e: jg     0x00007f73e7d16290
  0x00007f73e7d16324: cmp    $0xffffffff,%eax
  0x00007f73e7d16327: jle    0x00007f73e7d1633e
  0x00007f73e7d16329: data16 xchg %ax,%ax       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@22 (line 289)

  0x00007f73e7d1632c: movsbl 0x10(%rsi,%rax,1),%r10d  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@24 (line 289)

  0x00007f73e7d16332: cmp    %r9d,%r10d
  0x00007f73e7d16335: je     0x00007f73e7d16347  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@27 (line 289)

  0x00007f73e7d16337: dec    %eax               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@32 (line 288)

  0x00007f73e7d16339: cmp    $0xffffffff,%eax
  0x00007f73e7d1633c: jg     0x00007f73e7d1632c  ;*iconst_m1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@38 (line 293)

  0x00007f73e7d1633e: mov    $0xffffffff,%eax
  0x00007f73e7d16343: jmp    0x00007f73e7d16347
  0x00007f73e7d16345: dec    %eax               ;*synchronization entry
                                                ; - java.lang.StringLatin1::lastIndexOf@-1 (line 284)

  0x00007f73e7d16347: add    $0x20,%rsp
  0x00007f73e7d1634b: pop    %rbp
  0x00007f73e7d1634c: mov    0x108(%r15),%r10
  0x00007f73e7d16353: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d16356: retq   
  0x00007f73e7d16357: add    $0xfffffffe,%eax
  0x00007f73e7d1635a: jmp    0x00007f73e7d16347
  0x00007f73e7d1635c: add    $0xfffffffd,%eax
  0x00007f73e7d1635f: jmp    0x00007f73e7d16347
  0x00007f73e7d16361: add    $0xfffffffc,%eax
  0x00007f73e7d16364: jmp    0x00007f73e7d16347
  0x00007f73e7d16366: add    $0xfffffffb,%eax
  0x00007f73e7d16369: jmp    0x00007f73e7d16347
  0x00007f73e7d1636b: add    $0xfffffffa,%eax
  0x00007f73e7d1636e: jmp    0x00007f73e7d16347
  0x00007f73e7d16370: add    $0xfffffff9,%eax   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@32 (line 288)

  0x00007f73e7d16373: jmp    0x00007f73e7d16347  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@19 (line 288)

  0x00007f73e7d16375: mov    %rsi,%rbp
  0x00007f73e7d16378: mov    %eax,0x4(%rsp)
  0x00007f73e7d1637c: mov    %edx,0x8(%rsp)
  0x00007f73e7d16380: mov    $0xffffff7e,%esi
  0x00007f73e7d16385: xchg   %ax,%ax
  0x00007f73e7d16387: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@19 (line 288)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d1638c: mov    %rsi,(%rsp)
  0x00007f73e7d16390: mov    %edx,0x8(%rsp)
  0x00007f73e7d16394: mov    %ecx,0xc(%rsp)
  0x00007f73e7d16398: mov    $0xffffff4d,%esi
  0x00007f73e7d1639d: xchg   %ax,%ax
  0x00007f73e7d1639f: callq  0x00007f73e0269880  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::lastIndexOf@1 (line 284)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d163a4: mov    $0xfffffff6,%esi
  0x00007f73e7d163a9: xchg   %ax,%ax
  0x00007f73e7d163ab: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::lastIndexOf@11 (line 287)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d163b0: hlt    
  0x00007f73e7d163b1: hlt    
  0x00007f73e7d163b2: hlt    
  0x00007f73e7d163b3: hlt    
  0x00007f73e7d163b4: hlt    
  0x00007f73e7d163b5: hlt    
  0x00007f73e7d163b6: hlt    
  0x00007f73e7d163b7: hlt    
  0x00007f73e7d163b8: hlt    
  0x00007f73e7d163b9: hlt    
  0x00007f73e7d163ba: hlt    
  0x00007f73e7d163bb: hlt    
  0x00007f73e7d163bc: hlt    
  0x00007f73e7d163bd: hlt    
  0x00007f73e7d163be: hlt    
  0x00007f73e7d163bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d163c0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d163c5: callq  0x00007f73e7d163ca
  0x00007f73e7d163ca: subq   $0x5,(%rsp)
  0x00007f73e7d163cf: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d163d4: hlt    
  0x00007f73e7d163d5: hlt    
  0x00007f73e7d163d6: hlt    
  0x00007f73e7d163d7: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 248 
ImmutableOopMap{rbp=Oop }pc offsets: 364 
ImmutableOopMap{[0]=Oop }pc offsets: 388 
ImmutableOopMap{}pc offsets: 400 Compiled method (c1)   82059  305       3       java.lang.StringCoding::hasNegatives (25 bytes)
 total in heap  [0x00007f73e07ea790,0x00007f73e07eacd8] = 1352
 relocation     [0x00007f73e07ea908,0x00007f73e07ea940] = 56
 main code      [0x00007f73e07ea940,0x00007f73e07eab20] = 480
 stub code      [0x00007f73e07eab20,0x00007f73e07eab50] = 48
 metadata       [0x00007f73e07eab50,0x00007f73e07eab58] = 8
 scopes data    [0x00007f73e07eab58,0x00007f73e07eabb8] = 96
 scopes pcs     [0x00007f73e07eabb8,0x00007f73e07eacb8] = 256
 dependencies   [0x00007f73e07eacb8,0x00007f73e07eacc0] = 8
 nul chk table  [0x00007f73e07eacc0,0x00007f73e07eacd8] = 24
----------------------------------------------------------------------
java/lang/StringCoding.hasNegatives([BII)Z  [0x00007f73e07ea940, 0x00007f73e07eab50]  528 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07ea940: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ea947: push   %rbp
  0x00007f73e07ea948: sub    $0x30,%rsp
  0x00007f73e07ea94c: movabs $0x7f73d35e4858,%rax  ;   {metadata(method data for {method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding')}
  0x00007f73e07ea956: mov    0x104(%rax),%edi
  0x00007f73e07ea95c: add    $0x8,%edi
  0x00007f73e07ea95f: mov    %edi,0x104(%rax)
  0x00007f73e07ea965: and    $0x1ff8,%edi
  0x00007f73e07ea96b: cmp    $0x0,%edi
  0x00007f73e07ea96e: je     0x00007f73e07eaa7a  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@0 (line 144)

  0x00007f73e07ea974: mov    %rdx,%rax
  0x00007f73e07ea977: jmpq   0x00007f73e07eaa0e  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@2 (line 144)

  0x00007f73e07ea97c: nopl   0x0(%rax)
  0x00007f73e07ea980: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00007f73e07eaa9b
  0x00007f73e07ea983: jae    0x00007f73e07eaaa5
  0x00007f73e07ea989: movslq %eax,%rdi
  0x00007f73e07ea98c: movsbl 0x10(%rsi,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@11 (line 145)

  0x00007f73e07ea991: cmp    $0x0,%edi
  0x00007f73e07ea994: movabs $0x7f73d35e4858,%rdi  ;   {metadata(method data for {method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding')}
  0x00007f73e07ea99e: movabs $0x170,%rbx
  0x00007f73e07ea9a8: jl     0x00007f73e07ea9b8
  0x00007f73e07ea9ae: movabs $0x160,%rbx
  0x00007f73e07ea9b8: mov    (%rdi,%rbx,1),%r8
  0x00007f73e07ea9bc: lea    0x1(%r8),%r8
  0x00007f73e07ea9c0: mov    %r8,(%rdi,%rbx,1)
  0x00007f73e07ea9c4: jl     0x00007f73e07eaa50  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@12 (line 145)

  0x00007f73e07ea9ca: inc    %eax
  0x00007f73e07ea9cc: movabs $0x7f73d35e4858,%rdi  ;   {metadata(method data for {method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding')}
  0x00007f73e07ea9d6: mov    0x108(%rdi),%ebx
  0x00007f73e07ea9dc: add    $0x8,%ebx
  0x00007f73e07ea9df: mov    %ebx,0x108(%rdi)
  0x00007f73e07ea9e5: and    $0xfff8,%ebx
  0x00007f73e07ea9eb: cmp    $0x0,%ebx
  0x00007f73e07ea9ee: je     0x00007f73e07eaab3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@20 (line 144)

  0x00007f73e07ea9f4: mov    0x108(%r15),%r10   ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@20 (line 144)

  0x00007f73e07ea9fb: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07ea9fe: movabs $0x7f73d35e4858,%rdi  ;   {metadata(method data for {method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding')}
  0x00007f73e07eaa08: incl   0x180(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@20 (line 144)

  0x00007f73e07eaa0e: mov    %rcx,%rdi
  0x00007f73e07eaa11: add    %edx,%edi
  0x00007f73e07eaa13: cmp    %edi,%eax
  0x00007f73e07eaa15: movabs $0x7f73d35e4858,%rdi  ;   {metadata(method data for {method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding')}
  0x00007f73e07eaa1f: movabs $0x140,%rbx
  0x00007f73e07eaa29: jge    0x00007f73e07eaa39
  0x00007f73e07eaa2f: movabs $0x150,%rbx
  0x00007f73e07eaa39: mov    (%rdi,%rbx,1),%r8
  0x00007f73e07eaa3d: lea    0x1(%r8),%r8
  0x00007f73e07eaa41: mov    %r8,(%rdi,%rbx,1)
  0x00007f73e07eaa45: jge    0x00007f73e07eaa65
  0x00007f73e07eaa4b: jmpq   0x00007f73e07ea980  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@6 (line 144)

  0x00007f73e07eaa50: mov    $0x1,%eax
  0x00007f73e07eaa55: add    $0x30,%rsp
  0x00007f73e07eaa59: pop    %rbp
  0x00007f73e07eaa5a: mov    0x108(%r15),%r10
  0x00007f73e07eaa61: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07eaa64: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@16 (line 146)

  0x00007f73e07eaa65: mov    $0x0,%eax
  0x00007f73e07eaa6a: add    $0x30,%rsp
  0x00007f73e07eaa6e: pop    %rbp
  0x00007f73e07eaa6f: mov    0x108(%r15),%r10
  0x00007f73e07eaa76: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07eaa79: retq   
  0x00007f73e07eaa7a: movabs $0x800324908,%r10  ;   {metadata({method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding')}
  0x00007f73e07eaa84: mov    %r10,0x8(%rsp)
  0x00007f73e07eaa89: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07eaa91: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::hasNegatives@-1 (line 144)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07eaa96: jmpq   0x00007f73e07ea974
  0x00007f73e07eaa9b: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@11 (line 145)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07eaaa0: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@11 (line 145)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07eaaa5: mov    %rax,(%rsp)
  0x00007f73e07eaaa9: mov    %rsi,0x8(%rsp)
  0x00007f73e07eaaae: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@11 (line 145)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07eaab3: movabs $0x800324908,%r10  ;   {metadata({method} {0x0000000800324908} 'hasNegatives' '([BII)Z' in 'java/lang/StringCoding')}
  0x00007f73e07eaabd: mov    %r10,0x8(%rsp)
  0x00007f73e07eaac2: movq   $0x14,(%rsp)
  0x00007f73e07eaaca: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringCoding::hasNegatives@20 (line 144)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07eaacf: jmpq   0x00007f73e07ea9f4
  0x00007f73e07eaad4: nop
  0x00007f73e07eaad5: nop
  0x00007f73e07eaad6: mov    0x428(%r15),%rax
  0x00007f73e07eaadd: movabs $0x0,%r10
  0x00007f73e07eaae7: mov    %r10,0x428(%r15)
  0x00007f73e07eaaee: movabs $0x0,%r10
  0x00007f73e07eaaf8: mov    %r10,0x430(%r15)
  0x00007f73e07eaaff: add    $0x30,%rsp
  0x00007f73e07eab03: pop    %rbp
  0x00007f73e07eab04: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07eab09: hlt    
  0x00007f73e07eab0a: hlt    
  0x00007f73e07eab0b: hlt    
  0x00007f73e07eab0c: hlt    
  0x00007f73e07eab0d: hlt    
  0x00007f73e07eab0e: hlt    
  0x00007f73e07eab0f: hlt    
  0x00007f73e07eab10: hlt    
  0x00007f73e07eab11: hlt    
  0x00007f73e07eab12: hlt    
  0x00007f73e07eab13: hlt    
  0x00007f73e07eab14: hlt    
  0x00007f73e07eab15: hlt    
  0x00007f73e07eab16: hlt    
  0x00007f73e07eab17: hlt    
  0x00007f73e07eab18: hlt    
  0x00007f73e07eab19: hlt    
  0x00007f73e07eab1a: hlt    
  0x00007f73e07eab1b: hlt    
  0x00007f73e07eab1c: hlt    
  0x00007f73e07eab1d: hlt    
  0x00007f73e07eab1e: hlt    
  0x00007f73e07eab1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07eab20: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07eab25: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07eab2f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07eab33: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07eab38: hlt    
[Deopt Handler Code]
  0x00007f73e07eab39: movabs $0x7f73e07eab39,%r10  ;   {section_word}
  0x00007f73e07eab43: push   %r10
  0x00007f73e07eab45: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07eab4a: hlt    
  0x00007f73e07eab4b: hlt    
  0x00007f73e07eab4c: hlt    
  0x00007f73e07eab4d: hlt    
  0x00007f73e07eab4e: hlt    
  0x00007f73e07eab4f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 187 342 352 357 371 399 Compiled method (c2)   82770  293 %     4       java.util.zip.ZipFile$Source::hashN @ 2 (26 bytes)
 total in heap  [0x00007f73e7d16810,0x00007f73e7d16e48] = 1592
 relocation     [0x00007f73e7d16988,0x00007f73e7d169a0] = 24
 main code      [0x00007f73e7d169a0,0x00007f73e7d16c20] = 640
 stub code      [0x00007f73e7d16c20,0x00007f73e7d16c38] = 24
 metadata       [0x00007f73e7d16c38,0x00007f73e7d16c48] = 16
 scopes data    [0x00007f73e7d16c48,0x00007f73e7d16cc0] = 120
 scopes pcs     [0x00007f73e7d16cc0,0x00007f73e7d16e30] = 368
 dependencies   [0x00007f73e7d16e30,0x00007f73e7d16e38] = 8
 nul chk table  [0x00007f73e7d16e38,0x00007f73e7d16e48] = 16
----------------------------------------------------------------------
java/util/zip/ZipFile$Source.hashN([BII)I  [0x00007f73e7d169a0, 0x00007f73e7d16c38]  664 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080026f5c8} 'hashN' '([BII)I' in 'java/util/zip/ZipFile$Source'
  0x00007f73e7d169a0: callq  0x00007f73fe2db430  ;   {runtime_call}
  0x00007f73e7d169a5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d169b0: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d169b7: push   %rbp
  0x00007f73e7d169b8: sub    $0x30,%rsp
  0x00007f73e7d169bc: mov    0x18(%rsi),%r14
  0x00007f73e7d169c0: mov    0x10(%rsi),%ebx
  0x00007f73e7d169c3: mov    0x8(%rsi),%r13d
  0x00007f73e7d169c7: mov    (%rsi),%ebp
  0x00007f73e7d169c9: mov    %rsi,%rdi
  0x00007f73e7d169cc: movabs $0x7f73fe3a7140,%r10
  0x00007f73e7d169d6: callq  *%r10
  0x00007f73e7d169d9: mov    0x8(%r14),%r10d    ; implicit exception: dispatches to 0x00007f73e7d16bf8
  0x00007f73e7d169dd: cmp    $0x76f14,%r10d     ;   {metadata({type array byte})}
  0x00007f73e7d169e4: jne    0x00007f73e7d16be0
  0x00007f73e7d169ea: test   %r13d,%r13d
  0x00007f73e7d169ed: jle    0x00007f73e7d16b9e
  0x00007f73e7d169f3: add    %r13d,%ebx         ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@2 (line 1363)

  0x00007f73e7d169f6: mov    0xc(%r14),%r8d
  0x00007f73e7d169fa: mov    %r13d,%r9d
  0x00007f73e7d169fd: dec    %r9d
  0x00007f73e7d16a00: cmp    %ebx,%r9d
  0x00007f73e7d16a03: cmovg  %ebx,%r9d
  0x00007f73e7d16a07: xor    %ecx,%ecx
  0x00007f73e7d16a09: cmp    %ecx,%r9d
  0x00007f73e7d16a0c: cmovl  %ecx,%r9d
  0x00007f73e7d16a10: mov    %ebx,%r11d
  0x00007f73e7d16a13: sub    %r13d,%r11d        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)

  0x00007f73e7d16a16: mov    %ebp,%r10d
  0x00007f73e7d16a19: shl    $0x5,%r10d
  0x00007f73e7d16a1d: sub    %ebp,%r10d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@12 (line 1364)

  0x00007f73e7d16a20: dec    %r13d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@3 (line 1363)

  0x00007f73e7d16a23: cmp    %r8d,%r11d
  0x00007f73e7d16a26: jae    0x00007f73e7d16bb0
  0x00007f73e7d16a2c: movsbl 0x10(%r14,%r11,1),%ebp
  0x00007f73e7d16a32: add    %r10d,%ebp         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@19 (line 1364)

  0x00007f73e7d16a35: cmp    %r9d,%r13d
  0x00007f73e7d16a38: jg     0x00007f73e7d16a10  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@6 (line 1363)

  0x00007f73e7d16a3a: movslq %r8d,%r10
  0x00007f73e7d16a3d: movslq %ebx,%r11
  0x00007f73e7d16a40: sub    %r10,%r11
  0x00007f73e7d16a43: mov    %r11d,%r10d
  0x00007f73e7d16a46: cmp    %ecx,%r10d
  0x00007f73e7d16a49: cmovl  %ecx,%r10d
  0x00007f73e7d16a4d: mov    %r10d,%eax
  0x00007f73e7d16a50: add    $0x7,%eax
  0x00007f73e7d16a53: mov    $0x7fffffff,%r9d
  0x00007f73e7d16a59: cmp    %eax,%r10d
  0x00007f73e7d16a5c: cmovg  %r9d,%eax
  0x00007f73e7d16a60: cmp    %eax,%r13d
  0x00007f73e7d16a63: jle    0x00007f73e7d16b70
  0x00007f73e7d16a69: mov    %ebx,%edi
  0x00007f73e7d16a6b: inc    %edi               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1364)

  0x00007f73e7d16a6d: jmp    0x00007f73e7d16a74
  0x00007f73e7d16a6f: vmovd  %xmm1,%r8d
  0x00007f73e7d16a74: mov    %r13d,%r11d
  0x00007f73e7d16a77: sub    %eax,%r11d
  0x00007f73e7d16a7a: mov    $0x1f40,%r10d
  0x00007f73e7d16a80: cmp    %r10d,%r11d
  0x00007f73e7d16a83: mov    $0x1f40,%r9d
  0x00007f73e7d16a89: cmovg  %r9d,%r11d
  0x00007f73e7d16a8d: mov    %r13d,%esi
  0x00007f73e7d16a90: sub    %r11d,%esi
  0x00007f73e7d16a93: vmovd  %r8d,%xmm1
  0x00007f73e7d16a98: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d16aa0: mov    %edi,%r11d
  0x00007f73e7d16aa3: sub    %r13d,%r11d
  0x00007f73e7d16aa6: movsbl 0x10(%r14,%r11,1),%r10d
  0x00007f73e7d16aac: mov    %ebx,%ecx
  0x00007f73e7d16aae: sub    %r13d,%ecx         ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)

  0x00007f73e7d16ab1: movsbl 0x10(%r14,%rcx,1),%r11d
  0x00007f73e7d16ab7: mov    %ebp,%r8d
  0x00007f73e7d16aba: shl    $0x5,%r8d
  0x00007f73e7d16abe: sub    %ebp,%r8d
  0x00007f73e7d16ac1: add    %r11d,%r8d
  0x00007f73e7d16ac4: movslq %ecx,%rdx
  0x00007f73e7d16ac7: movsbl 0x12(%r14,%rdx,1),%r11d
  0x00007f73e7d16acd: mov    %r8d,%r9d
  0x00007f73e7d16ad0: shl    $0x5,%r9d
  0x00007f73e7d16ad4: sub    %r8d,%r9d
  0x00007f73e7d16ad7: add    %r10d,%r9d
  0x00007f73e7d16ada: movsbl 0x16(%r14,%rdx,1),%r10d
  0x00007f73e7d16ae0: mov    %r9d,%r8d
  0x00007f73e7d16ae3: shl    $0x5,%r8d
  0x00007f73e7d16ae7: sub    %r9d,%r8d
  0x00007f73e7d16aea: add    %r11d,%r8d
  0x00007f73e7d16aed: movsbl 0x15(%r14,%rdx,1),%r11d
  0x00007f73e7d16af3: mov    %r8d,%r9d
  0x00007f73e7d16af6: shl    $0x5,%r9d
  0x00007f73e7d16afa: sub    %r8d,%r9d
  0x00007f73e7d16afd: movsbl 0x14(%r14,%rdx,1),%r8d
  0x00007f73e7d16b03: movsbl 0x13(%r14,%rdx,1),%ebp
  0x00007f73e7d16b09: add    %ebp,%r9d
  0x00007f73e7d16b0c: movsbl 0x17(%r14,%rdx,1),%ebp
  0x00007f73e7d16b12: mov    %r9d,%edx
  0x00007f73e7d16b15: shl    $0x5,%edx
  0x00007f73e7d16b18: sub    %r9d,%edx
  0x00007f73e7d16b1b: add    %r8d,%edx
  0x00007f73e7d16b1e: mov    %edx,%r8d
  0x00007f73e7d16b21: shl    $0x5,%r8d
  0x00007f73e7d16b25: sub    %edx,%r8d
  0x00007f73e7d16b28: add    %r11d,%r8d
  0x00007f73e7d16b2b: mov    %r8d,%r11d
  0x00007f73e7d16b2e: shl    $0x5,%r11d
  0x00007f73e7d16b32: sub    %r8d,%r11d
  0x00007f73e7d16b35: add    %r10d,%r11d
  0x00007f73e7d16b38: mov    %r11d,%r8d
  0x00007f73e7d16b3b: shl    $0x5,%r8d
  0x00007f73e7d16b3f: sub    %r11d,%r8d
  0x00007f73e7d16b42: add    %ebp,%r8d          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@19 (line 1364)

  0x00007f73e7d16b45: mov    %r8d,%ebp
  0x00007f73e7d16b48: add    $0xfffffff8,%r13d  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@3 (line 1363)

  0x00007f73e7d16b4c: cmp    %esi,%r13d
  0x00007f73e7d16b4f: jg     0x00007f73e7d16aa0  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@6 (line 1363)

  0x00007f73e7d16b55: mov    0x108(%r15),%r10
  0x00007f73e7d16b5c: add    $0x8,%ecx          ; ImmutableOopMap{r14=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1364)

  0x00007f73e7d16b5f: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@21 (line 1364)
                                                ;   {poll}
  0x00007f73e7d16b62: cmp    %eax,%r13d
  0x00007f73e7d16b65: jg     0x00007f73e7d16a6f
  0x00007f73e7d16b6b: vmovd  %xmm1,%r8d
  0x00007f73e7d16b70: test   %r13d,%r13d
  0x00007f73e7d16b73: jle    0x00007f73e7d16b9e
  0x00007f73e7d16b75: data16 xchg %ax,%ax
  0x00007f73e7d16b78: mov    %ebx,%r11d
  0x00007f73e7d16b7b: sub    %r13d,%r11d        ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)

  0x00007f73e7d16b7e: dec    %r13d              ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@3 (line 1363)

  0x00007f73e7d16b81: mov    %ebp,%r10d
  0x00007f73e7d16b84: shl    $0x5,%r10d
  0x00007f73e7d16b88: sub    %ebp,%r10d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@12 (line 1364)

  0x00007f73e7d16b8b: cmp    %r8d,%r11d
  0x00007f73e7d16b8e: jae    0x00007f73e7d16bb8
  0x00007f73e7d16b90: movsbl 0x10(%r14,%r11,1),%ebp
  0x00007f73e7d16b96: add    %r10d,%ebp         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@19 (line 1364)

  0x00007f73e7d16b99: test   %r13d,%r13d
  0x00007f73e7d16b9c: jg     0x00007f73e7d16b78  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@2 (line 1363)

  0x00007f73e7d16b9e: mov    %ebp,%eax
  0x00007f73e7d16ba0: add    $0x30,%rsp
  0x00007f73e7d16ba4: pop    %rbp
  0x00007f73e7d16ba5: mov    0x108(%r15),%r10
  0x00007f73e7d16bac: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d16baf: retq   
  0x00007f73e7d16bb0: mov    %r11d,%r8d
  0x00007f73e7d16bb3: inc    %r8d
  0x00007f73e7d16bb6: jmp    0x00007f73e7d16bbe
  0x00007f73e7d16bb8: mov    %r11d,%r8d
  0x00007f73e7d16bbb: inc    %r8d
  0x00007f73e7d16bbe: mov    $0xffffffe4,%esi
  0x00007f73e7d16bc3: mov    %r13d,(%rsp)
  0x00007f73e7d16bc7: mov    %r14,0x8(%rsp)
  0x00007f73e7d16bcc: mov    %r8d,0x4(%rsp)
  0x00007f73e7d16bd1: mov    %r10d,0x10(%rsp)
  0x00007f73e7d16bd6: mov    %r11d,0x14(%rsp)
  0x00007f73e7d16bdb: callq  0x00007f73e0269880  ; ImmutableOopMap{[8]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@18 (line 1364)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d16be0: mov    $0xffffff95,%esi
  0x00007f73e7d16be5: mov    %r14,(%rsp)
  0x00007f73e7d16be9: mov    %ebx,0x8(%rsp)
  0x00007f73e7d16bed: mov    %r13d,0xc(%rsp)
  0x00007f73e7d16bf2: nop
  0x00007f73e7d16bf3: callq  0x00007f73e0269880  ; ImmutableOopMap{[0]=Oop }
                                                ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@2 (line 1363)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d16bf8: mov    $0xffffffbe,%esi
  0x00007f73e7d16bfd: mov    %ebx,(%rsp)
  0x00007f73e7d16c00: mov    %r13d,0x4(%rsp)
  0x00007f73e7d16c05: xchg   %ax,%ax
  0x00007f73e7d16c07: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipFile$Source::hashN@2 (line 1363)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d16c0c: hlt    
  0x00007f73e7d16c0d: hlt    
  0x00007f73e7d16c0e: hlt    
  0x00007f73e7d16c0f: hlt    
  0x00007f73e7d16c10: hlt    
  0x00007f73e7d16c11: hlt    
  0x00007f73e7d16c12: hlt    
  0x00007f73e7d16c13: hlt    
  0x00007f73e7d16c14: hlt    
  0x00007f73e7d16c15: hlt    
  0x00007f73e7d16c16: hlt    
  0x00007f73e7d16c17: hlt    
  0x00007f73e7d16c18: hlt    
  0x00007f73e7d16c19: hlt    
  0x00007f73e7d16c1a: hlt    
  0x00007f73e7d16c1b: hlt    
  0x00007f73e7d16c1c: hlt    
  0x00007f73e7d16c1d: hlt    
  0x00007f73e7d16c1e: hlt    
  0x00007f73e7d16c1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d16c20: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d16c25: callq  0x00007f73e7d16c2a
  0x00007f73e7d16c2a: subq   $0x5,(%rsp)
  0x00007f73e7d16c2f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d16c34: hlt    
  0x00007f73e7d16c35: hlt    
  0x00007f73e7d16c36: hlt    
  0x00007f73e7d16c37: hlt    

ImmutableOopMap{r14=Oop }pc offsets: 447 
ImmutableOopMap{[8]=Oop }pc offsets: 576 
ImmutableOopMap{[0]=Oop }pc offsets: 600 
ImmutableOopMap{}pc offsets: 620 ----------------------------------------------------------------------
java/lang/Class.getSuperclass()Ljava/lang/Class;  [0x00007f73e7d17340, 0x00007f73e7d175a8]  616 bytes
[Entry Point]
  # {method} {0x000000080035d750} 'getSuperclass' '()Ljava/lang/Class;' in 'java/lang/Class'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d17340: mov    0x8(%rsi),%r10d
  0x00007f73e7d17344: shl    $0x3,%r10
  0x00007f73e7d17348: movabs $0x800000000,%r12
  0x00007f73e7d17352: add    %r12,%r10
  0x00007f73e7d17355: xor    %r12,%r12
  0x00007f73e7d17358: cmp    %r10,%rax
  0x00007f73e7d1735b: je     0x00007f73e7d17368
  0x00007f73e7d17361: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d17366: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d17368: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d1736f: push   %rbp
  0x00007f73e7d17370: mov    %rsp,%rbp
  0x00007f73e7d17373: sub    $0x40,%rsp
  0x00007f73e7d17377: mov    %rsi,(%rsp)
  0x00007f73e7d1737b: cmp    $0x0,%rsi
  0x00007f73e7d1737f: lea    (%rsp),%rsi
  0x00007f73e7d17383: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007f73e7d17388: vzeroupper 
  0x00007f73e7d1738b: movabs $0x7f73e7d17388,%r10  ;   {internal_word}
  0x00007f73e7d17395: mov    %r10,0x330(%r15)
  0x00007f73e7d1739c: mov    %rsp,0x328(%r15)
  0x00007f73e7d173a3: cmpb   $0x0,0x16e46e8d(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d173aa: je     0x00007f73e7d173e2
  0x00007f73e7d173b0: push   %rsi
  0x00007f73e7d173b1: movabs $0x80035d750,%rsi  ;   {metadata({method} {0x000000080035d750} 'getSuperclass' '()Ljava/lang/Class;' in 'java/lang/Class')}
  0x00007f73e7d173bb: mov    %r15,%rdi
  0x00007f73e7d173be: test   $0xf,%esp
  0x00007f73e7d173c4: je     0x00007f73e7d173dc
  0x00007f73e7d173ca: sub    $0x8,%rsp
  0x00007f73e7d173ce: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d173d3: add    $0x8,%rsp
  0x00007f73e7d173d7: jmpq   0x00007f73e7d173e1
  0x00007f73e7d173dc: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d173e1: pop    %rsi
  0x00007f73e7d173e2: lea    0x348(%r15),%rdi
  0x00007f73e7d173e9: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d173f4: callq  0x00007f73fe000bd0  ;   {runtime_call}
  0x00007f73e7d173f9: vzeroupper 
  0x00007f73e7d173fc: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d17407: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d1740d: testb  $0x8,0x108(%r15)
  0x00007f73e7d17415: jne    0x00007f73e7d1742c
  0x00007f73e7d1741b: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d17426: je     0x00007f73e7d17450
  0x00007f73e7d1742c: vzeroupper 
  0x00007f73e7d1742f: mov    %rax,-0x8(%rbp)
  0x00007f73e7d17433: mov    %r15,%rdi
  0x00007f73e7d17436: mov    %rsp,%r12
  0x00007f73e7d17439: sub    $0x0,%rsp
  0x00007f73e7d1743d: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d17441: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d17446: mov    %r12,%rsp
  0x00007f73e7d17449: xor    %r12,%r12
  0x00007f73e7d1744c: mov    -0x8(%rbp),%rax
  0x00007f73e7d17450: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d1745b: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d17466: je     0x00007f73e7d1757f
  0x00007f73e7d1746c: cmpb   $0x0,0x16e46dc4(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d17473: je     0x00007f73e7d174b1
  0x00007f73e7d17479: mov    %rax,-0x8(%rbp)
  0x00007f73e7d1747d: movabs $0x80035d750,%rsi  ;   {metadata({method} {0x000000080035d750} 'getSuperclass' '()Ljava/lang/Class;' in 'java/lang/Class')}
  0x00007f73e7d17487: mov    %r15,%rdi
  0x00007f73e7d1748a: test   $0xf,%esp
  0x00007f73e7d17490: je     0x00007f73e7d174a8
  0x00007f73e7d17496: sub    $0x8,%rsp
  0x00007f73e7d1749a: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d1749f: add    $0x8,%rsp
  0x00007f73e7d174a3: jmpq   0x00007f73e7d174ad
  0x00007f73e7d174a8: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d174ad: mov    -0x8(%rbp),%rax
  0x00007f73e7d174b1: movabs $0x0,%r10
  0x00007f73e7d174bb: mov    %r10,0x328(%r15)
  0x00007f73e7d174c2: movabs $0x0,%r10
  0x00007f73e7d174cc: mov    %r10,0x330(%r15)
  0x00007f73e7d174d3: vzeroupper 
  0x00007f73e7d174d6: test   %rax,%rax
  0x00007f73e7d174d9: je     0x00007f73e7d17559
  0x00007f73e7d174df: test   $0x1,%rax
  0x00007f73e7d174e5: je     0x00007f73e7d17556
  0x00007f73e7d174eb: mov    -0x1(%rax),%rax
  0x00007f73e7d174ef: cmpb   $0x0,0x30(%r15)
  0x00007f73e7d174f4: je     0x00007f73e7d17551
  0x00007f73e7d174fa: cmp    $0x0,%rax
  0x00007f73e7d174fe: je     0x00007f73e7d17551
  0x00007f73e7d17504: mov    0x38(%r15),%rcx
  0x00007f73e7d17508: cmp    $0x0,%rcx
  0x00007f73e7d1750c: je     0x00007f73e7d17526
  0x00007f73e7d17512: sub    $0x8,%rcx
  0x00007f73e7d17516: mov    %rcx,0x38(%r15)
  0x00007f73e7d1751a: add    0x48(%r15),%rcx
  0x00007f73e7d1751e: mov    %rax,(%rcx)
  0x00007f73e7d17521: jmpq   0x00007f73e7d17551
  0x00007f73e7d17526: push   %rax
  0x00007f73e7d17527: mov    %r15,%rsi
  0x00007f73e7d1752a: mov    %rax,%rdi
  0x00007f73e7d1752d: test   $0xf,%esp
  0x00007f73e7d17533: je     0x00007f73e7d1754b
  0x00007f73e7d17539: sub    $0x8,%rsp
  0x00007f73e7d1753d: callq  0x00007f73fde7e680  ;   {runtime_call}
  0x00007f73e7d17542: add    $0x8,%rsp
  0x00007f73e7d17546: jmpq   0x00007f73e7d17550
  0x00007f73e7d1754b: callq  0x00007f73fde7e680  ;   {runtime_call}
  0x00007f73e7d17550: pop    %rax
  0x00007f73e7d17551: jmpq   0x00007f73e7d17559
  0x00007f73e7d17556: mov    (%rax),%rax
  0x00007f73e7d17559: mov    0xe0(%r15),%rcx
  0x00007f73e7d17560: movl   $0x0,0x100(%rcx)
  0x00007f73e7d1756a: leaveq 
  0x00007f73e7d1756b: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d17573: jne    0x00007f73e7d1757a
  0x00007f73e7d17579: retq   
  0x00007f73e7d1757a: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d1757f: vzeroupper 
  0x00007f73e7d17582: mov    %rax,-0x8(%rbp)
  0x00007f73e7d17586: mov    %rsp,%r12
  0x00007f73e7d17589: sub    $0x0,%rsp
  0x00007f73e7d1758d: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d17591: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d17596: mov    %r12,%rsp
  0x00007f73e7d17599: xor    %r12,%r12
  0x00007f73e7d1759c: mov    -0x8(%rbp),%rax
  0x00007f73e7d175a0: jmpq   0x00007f73e7d1746c
  0x00007f73e7d175a5: hlt    
  0x00007f73e7d175a6: hlt    
  0x00007f73e7d175a7: hlt    
Compiled method (c1)   84231  307       1       java.util.zip.Inflater$InflaterZStreamRef::address (5 bytes)
 total in heap  [0x00007f73e7d16e90,0x00007f73e7d17170] = 736
 relocation     [0x00007f73e7d17008,0x00007f73e7d17028] = 32
 main code      [0x00007f73e7d17040,0x00007f73e7d170e0] = 160
 stub code      [0x00007f73e7d170e0,0x00007f73e7d17110] = 48
 metadata       [0x00007f73e7d17110,0x00007f73e7d17118] = 8
 scopes data    [0x00007f73e7d17118,0x00007f73e7d17128] = 16
 scopes pcs     [0x00007f73e7d17128,0x00007f73e7d17168] = 64
 dependencies   [0x00007f73e7d17168,0x00007f73e7d17170] = 8
----------------------------------------------------------------------
java/util/zip/Inflater$InflaterZStreamRef.address()J  [0x00007f73e7d17040, 0x00007f73e7d17110]  208 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800214638} 'address' '()J' in 'java/util/zip/Inflater$InflaterZStreamRef'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d17040: mov    0x8(%rsi),%r10d
  0x00007f73e7d17044: shl    $0x3,%r10
  0x00007f73e7d17048: movabs $0x800000000,%r12
  0x00007f73e7d17052: add    %r12,%r10
  0x00007f73e7d17055: xor    %r12,%r12
  0x00007f73e7d17058: cmp    %rax,%r10
  0x00007f73e7d1705b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d17061: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d1706c: data16 data16 xchg %ax,%ax
  0x00007f73e7d17070: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d1707b: data16 data16 xchg %ax,%ax
  0x00007f73e7d1707f: nop
[Verified Entry Point]
  0x00007f73e7d17080: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d17087: push   %rbp
  0x00007f73e7d17088: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.Inflater$InflaterZStreamRef::address@0 (line 780)

  0x00007f73e7d1708c: mov    0x10(%rsi),%rax    ;*getfield address {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.Inflater$InflaterZStreamRef::address@1 (line 780)

  0x00007f73e7d17090: add    $0x30,%rsp
  0x00007f73e7d17094: pop    %rbp
  0x00007f73e7d17095: mov    0x108(%r15),%r10
  0x00007f73e7d1709c: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d1709f: retq   
  0x00007f73e7d170a0: nop
  0x00007f73e7d170a1: nop
  0x00007f73e7d170a2: mov    0x428(%r15),%rax
  0x00007f73e7d170a9: movabs $0x0,%r10
  0x00007f73e7d170b3: mov    %r10,0x428(%r15)
  0x00007f73e7d170ba: movabs $0x0,%r10
  0x00007f73e7d170c4: mov    %r10,0x430(%r15)
  0x00007f73e7d170cb: add    $0x30,%rsp
  0x00007f73e7d170cf: pop    %rbp
  0x00007f73e7d170d0: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e7d170d5: hlt    
  0x00007f73e7d170d6: hlt    
  0x00007f73e7d170d7: hlt    
  0x00007f73e7d170d8: hlt    
  0x00007f73e7d170d9: hlt    
  0x00007f73e7d170da: hlt    
  0x00007f73e7d170db: hlt    
  0x00007f73e7d170dc: hlt    
  0x00007f73e7d170dd: hlt    
  0x00007f73e7d170de: hlt    
  0x00007f73e7d170df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d170e0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e7d170e5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e7d170ef: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d170f3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e7d170f8: hlt    
[Deopt Handler Code]
  0x00007f73e7d170f9: movabs $0x7f73e7d170f9,%r10  ;   {section_word}
  0x00007f73e7d17103: push   %r10
  0x00007f73e7d17105: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d1710a: hlt    
  0x00007f73e7d1710b: hlt    
  0x00007f73e7d1710c: hlt    
  0x00007f73e7d1710d: hlt    
  0x00007f73e7d1710e: hlt    
  0x00007f73e7d1710f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V  [0x00007f73e7d17b20, 0x00007f73e7d17b40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x00007f73d36780e8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx:rdx   = 'java/lang/Object'
  # parm2:    rcx       = int
  # parm3:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x00007f73e7d17b20: mov    0x24(%r8),%ebx
  0x00007f73e7d17b24: mov    0x10(%rbx),%rbx
  0x00007f73e7d17b28: test   %rbx,%rbx
  0x00007f73e7d17b2b: je     0x00007f73e7d17b34
  0x00007f73e7d17b31: jmpq   *0x38(%rbx)
  0x00007f73e7d17b34: jmpq   0x00007f73e028d980  ;   {runtime_call AbstractMethodError throw_exception}
  0x00007f73e7d17b39: hlt    
  0x00007f73e7d17b3a: hlt    
  0x00007f73e7d17b3b: hlt    
  0x00007f73e7d17b3c: hlt    
  0x00007f73e7d17b3d: hlt    
  0x00007f73e7d17b3e: hlt    
  0x00007f73e7d17b3f: hlt    
Compiled method (c2)   84656  274       4       java.util.zip.ZipUtils::SH (21 bytes)
 total in heap  [0x00007f73e7d17610,0x00007f73e7d17948] = 824
 relocation     [0x00007f73e7d17788,0x00007f73e7d17798] = 16
 main code      [0x00007f73e7d177a0,0x00007f73e7d17820] = 128
 stub code      [0x00007f73e7d17820,0x00007f73e7d17838] = 24
 metadata       [0x00007f73e7d17838,0x00007f73e7d17840] = 8
 scopes data    [0x00007f73e7d17840,0x00007f73e7d17890] = 80
 scopes pcs     [0x00007f73e7d17890,0x00007f73e7d17930] = 160
 dependencies   [0x00007f73e7d17930,0x00007f73e7d17938] = 8
 nul chk table  [0x00007f73e7d17938,0x00007f73e7d17948] = 16
----------------------------------------------------------------------
java/util/zip/ZipUtils.SH([BI)I  [0x00007f73e7d177a0, 0x00007f73e7d17838]  152 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000800225720} 'SH' '([BI)I' in 'java/util/zip/ZipUtils'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00007f73e7d177a0: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d177a7: push   %rbp
  0x00007f73e7d177a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::SH@-1 (line 210)

  0x00007f73e7d177ac: mov    0xc(%rsi),%r10d    ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; implicit exception: dispatches to 0x00007f73e7d1780c
  0x00007f73e7d177b0: cmp    %r10d,%edx
  0x00007f73e7d177b3: jae    0x00007f73e7d177e3
  0x00007f73e7d177b5: movzbl 0x10(%rsi,%rdx,1),%r11d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@6 (line 210)

  0x00007f73e7d177bb: mov    %edx,%ebp
  0x00007f73e7d177bd: inc    %ebp               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@10 (line 210)

  0x00007f73e7d177bf: cmp    %r10d,%ebp
  0x00007f73e7d177c2: jae    0x00007f73e7d177f8
  0x00007f73e7d177c4: movslq %edx,%r10
  0x00007f73e7d177c7: movzbl 0x11(%rsi,%r10,1),%eax
  0x00007f73e7d177cd: shl    $0x8,%eax
  0x00007f73e7d177d0: or     %r11d,%eax         ;*ior {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@19 (line 210)

  0x00007f73e7d177d3: add    $0x20,%rsp
  0x00007f73e7d177d7: pop    %rbp
  0x00007f73e7d177d8: mov    0x108(%r15),%r10
  0x00007f73e7d177df: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d177e2: retq   
  0x00007f73e7d177e3: mov    %rsi,0x8(%rsp)
  0x00007f73e7d177e8: mov    %edx,0x4(%rsp)
  0x00007f73e7d177ec: mov    $0xffffffe4,%esi
  0x00007f73e7d177f1: xchg   %ax,%ax
  0x00007f73e7d177f3: callq  0x00007f73e0269880  ; ImmutableOopMap{[8]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d177f8: mov    %rsi,(%rsp)
  0x00007f73e7d177fc: mov    %r11d,0x8(%rsp)
  0x00007f73e7d17801: mov    $0xffffffe4,%esi
  0x00007f73e7d17806: nop
  0x00007f73e7d17807: callq  0x00007f73e0269880  ; ImmutableOopMap{[0]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d1780c: mov    $0xfffffff6,%esi
  0x00007f73e7d17811: mov    %edx,%ebp
  0x00007f73e7d17813: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d17818: hlt    
  0x00007f73e7d17819: hlt    
  0x00007f73e7d1781a: hlt    
  0x00007f73e7d1781b: hlt    
  0x00007f73e7d1781c: hlt    
  0x00007f73e7d1781d: hlt    
  0x00007f73e7d1781e: hlt    
  0x00007f73e7d1781f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d17820: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d17825: callq  0x00007f73e7d1782a
  0x00007f73e7d1782a: subq   $0x5,(%rsp)
  0x00007f73e7d1782f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d17834: hlt    
  0x00007f73e7d17835: hlt    
  0x00007f73e7d17836: hlt    
  0x00007f73e7d17837: hlt    

ImmutableOopMap{[8]=Oop }pc offsets: 88 
ImmutableOopMap{[0]=Oop }pc offsets: 108 
ImmutableOopMap{}pc offsets: 120 Compiled method (c1)   85018  309       3       java.lang.Class::searchFields (43 bytes)
 total in heap  [0x00007f73e07ead10,0x00007f73e07eb390] = 1664
 relocation     [0x00007f73e07eae88,0x00007f73e07eaed8] = 80
 main code      [0x00007f73e07eaee0,0x00007f73e07eb120] = 576
 stub code      [0x00007f73e07eb120,0x00007f73e07eb160] = 64
 metadata       [0x00007f73e07eb160,0x00007f73e07eb170] = 16
 scopes data    [0x00007f73e07eb170,0x00007f73e07eb218] = 168
 scopes pcs     [0x00007f73e07eb218,0x00007f73e07eb368] = 336
 dependencies   [0x00007f73e07eb368,0x00007f73e07eb370] = 8
 nul chk table  [0x00007f73e07eb370,0x00007f73e07eb390] = 32
----------------------------------------------------------------------
java/lang/Class.searchFields([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;  [0x00007f73e07eaee0, 0x00007f73e07eb160]  640 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class'
  # parm0:    rsi:rsi   = '[Ljava/lang/reflect/Field;'
  # parm1:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x00007f73e07eaee0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07eaee7: push   %rbp
  0x00007f73e07eaee8: sub    $0x50,%rsp
  0x00007f73e07eaeec: mov    %rsi,0x30(%rsp)
  0x00007f73e07eaef1: mov    %rdx,0x38(%rsp)
  0x00007f73e07eaef6: movabs $0x7f73d3632240,%rdi  ;   {metadata(method data for {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eaf00: mov    0x104(%rdi),%ebx
  0x00007f73e07eaf06: add    $0x8,%ebx
  0x00007f73e07eaf09: mov    %ebx,0x104(%rdi)
  0x00007f73e07eaf0f: and    $0x1ff8,%ebx
  0x00007f73e07eaf15: cmp    $0x0,%ebx
  0x00007f73e07eaf18: je     0x00007f73e07eb07f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@0 (line 3225)

  0x00007f73e07eaf1e: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@3 (line 3225)
                                                ; implicit exception: dispatches to 0x00007f73e07eb0a0
  0x00007f73e07eaf21: mov    %edi,0x2c(%rsp)
  0x00007f73e07eaf25: mov    $0x0,%ebx
  0x00007f73e07eaf2a: jmpq   0x00007f73e07eb013  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@8 (line 3225)

  0x00007f73e07eaf2f: nop
  0x00007f73e07eaf30: movslq %ebx,%rax
  0x00007f73e07eaf33: mov    0x10(%rsi,%rax,4),%eax  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@17 (line 3225)

  0x00007f73e07eaf37: cmp    (%rax),%rax        ;*invokevirtual getName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@22 (line 3226)
                                                ; implicit exception: dispatches to 0x00007f73e07eb0a5
  0x00007f73e07eaf3a: mov    %rax,%rcx
  0x00007f73e07eaf3d: movabs $0x7f73d3632240,%r8  ;   {metadata(method data for {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eaf47: addq   $0x1,0x160(%r8)
  0x00007f73e07eaf4f: mov    0x20(%rax),%ecx    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.reflect.Field::getName@1 (line 192)
                                                ; - java.lang.Class::searchFields@22 (line 3226)

  0x00007f73e07eaf52: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x00007f73e07eb0aa
  0x00007f73e07eaf55: mov    %rcx,%r8
  0x00007f73e07eaf58: movabs $0x7f73d3632240,%r9  ;   {metadata(method data for {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eaf62: addq   $0x1,0x198(%r9)
  0x00007f73e07eaf6a: mov    %rdx,%r8
  0x00007f73e07eaf6d: mov    %r8,%rdx
  0x00007f73e07eaf70: mov    %rcx,%rsi          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@26 (line 3226)

  0x00007f73e07eaf73: mov    %rax,0x40(%rsp)
  0x00007f73e07eaf78: mov    %ebx,0x28(%rsp)
  0x00007f73e07eaf7c: data16 xchg %ax,%ax
  0x00007f73e07eaf7f: callq  0x00007f73e0269100  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@26 (line 3226)
                                                ;   {optimized virtual_call}
  0x00007f73e07eaf84: cmp    $0x0,%eax
  0x00007f73e07eaf87: movabs $0x7f73d3632240,%rax  ;   {metadata(method data for {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eaf91: movabs $0x1e0,%rsi
  0x00007f73e07eaf9b: jne    0x00007f73e07eafab
  0x00007f73e07eafa1: movabs $0x1d0,%rsi
  0x00007f73e07eafab: mov    (%rax,%rsi,1),%rdi
  0x00007f73e07eafaf: lea    0x1(%rdi),%rdi
  0x00007f73e07eafb3: mov    %rdi,(%rax,%rsi,1)
  0x00007f73e07eafb7: jne    0x00007f73e07eb050  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@29 (line 3226)

  0x00007f73e07eafbd: mov    0x28(%rsp),%ebx
  0x00007f73e07eafc1: inc    %ebx
  0x00007f73e07eafc3: movabs $0x7f73d3632240,%rax  ;   {metadata(method data for {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eafcd: mov    0x108(%rax),%esi
  0x00007f73e07eafd3: add    $0x8,%esi
  0x00007f73e07eafd6: mov    %esi,0x108(%rax)
  0x00007f73e07eafdc: and    $0xfff8,%esi
  0x00007f73e07eafe2: cmp    $0x0,%esi
  0x00007f73e07eafe5: je     0x00007f73e07eb0af  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@38 (line 3225)

  0x00007f73e07eafeb: mov    0x108(%r15),%r10   ; ImmutableOopMap{[48]=Oop [56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@38 (line 3225)

  0x00007f73e07eaff2: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07eaff5: movabs $0x7f73d3632240,%rax  ;   {metadata(method data for {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eafff: incl   0x1f0(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@38 (line 3225)

  0x00007f73e07eb005: mov    0x2c(%rsp),%edi
  0x00007f73e07eb009: mov    0x38(%rsp),%rdx
  0x00007f73e07eb00e: mov    0x30(%rsp),%rsi
  0x00007f73e07eb013: cmp    %edi,%ebx
  0x00007f73e07eb015: movabs $0x7f73d3632240,%rax  ;   {metadata(method data for {method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eb01f: movabs $0x140,%rcx
  0x00007f73e07eb029: jge    0x00007f73e07eb039
  0x00007f73e07eb02f: movabs $0x150,%rcx
  0x00007f73e07eb039: mov    (%rax,%rcx,1),%r8
  0x00007f73e07eb03d: lea    0x1(%r8),%r8
  0x00007f73e07eb041: mov    %r8,(%rax,%rcx,1)
  0x00007f73e07eb045: jge    0x00007f73e07eb065
  0x00007f73e07eb04b: jmpq   0x00007f73e07eaf30  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@11 (line 3225)

  0x00007f73e07eb050: mov    0x40(%rsp),%rax
  0x00007f73e07eb055: add    $0x50,%rsp
  0x00007f73e07eb059: pop    %rbp
  0x00007f73e07eb05a: mov    0x108(%r15),%r10
  0x00007f73e07eb061: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07eb064: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@34 (line 3227)

  0x00007f73e07eb065: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007f73e07eb06f: add    $0x50,%rsp
  0x00007f73e07eb073: pop    %rbp
  0x00007f73e07eb074: mov    0x108(%r15),%r10
  0x00007f73e07eb07b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07eb07e: retq   
  0x00007f73e07eb07f: movabs $0x80035f470,%r10  ;   {metadata({method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eb089: mov    %r10,0x8(%rsp)
  0x00007f73e07eb08e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07eb096: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [48]=Oop rdx=Oop [56]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Class::searchFields@-1 (line 3225)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07eb09b: jmpq   0x00007f73e07eaf1e
  0x00007f73e07eb0a0: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [48]=Oop rdx=Oop [56]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@3 (line 3225)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07eb0a5: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [48]=Oop rdx=Oop [56]=Oop rax=Oop }
                                                ;*invokevirtual getName {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@22 (line 3226)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07eb0aa: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [48]=Oop rdx=Oop [56]=Oop rax=Oop rcx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@26 (line 3226)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07eb0af: movabs $0x80035f470,%r10  ;   {metadata({method} {0x000000080035f470} 'searchFields' '([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' in 'java/lang/Class')}
  0x00007f73e07eb0b9: mov    %r10,0x8(%rsp)
  0x00007f73e07eb0be: movq   $0x26,(%rsp)
  0x00007f73e07eb0c6: callq  0x00007f73e0334d80  ; ImmutableOopMap{[48]=Oop [56]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::searchFields@38 (line 3225)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07eb0cb: jmpq   0x00007f73e07eafeb
  0x00007f73e07eb0d0: nop
  0x00007f73e07eb0d1: nop
  0x00007f73e07eb0d2: mov    0x428(%r15),%rax
  0x00007f73e07eb0d9: movabs $0x0,%r10
  0x00007f73e07eb0e3: mov    %r10,0x428(%r15)
  0x00007f73e07eb0ea: movabs $0x0,%r10
  0x00007f73e07eb0f4: mov    %r10,0x430(%r15)
  0x00007f73e07eb0fb: add    $0x50,%rsp
  0x00007f73e07eb0ff: pop    %rbp
  0x00007f73e07eb100: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07eb105: hlt    
  0x00007f73e07eb106: hlt    
  0x00007f73e07eb107: hlt    
  0x00007f73e07eb108: hlt    
  0x00007f73e07eb109: hlt    
  0x00007f73e07eb10a: hlt    
  0x00007f73e07eb10b: hlt    
  0x00007f73e07eb10c: hlt    
  0x00007f73e07eb10d: hlt    
  0x00007f73e07eb10e: hlt    
  0x00007f73e07eb10f: hlt    
  0x00007f73e07eb110: hlt    
  0x00007f73e07eb111: hlt    
  0x00007f73e07eb112: hlt    
  0x00007f73e07eb113: hlt    
  0x00007f73e07eb114: hlt    
  0x00007f73e07eb115: hlt    
  0x00007f73e07eb116: hlt    
  0x00007f73e07eb117: hlt    
  0x00007f73e07eb118: hlt    
  0x00007f73e07eb119: hlt    
  0x00007f73e07eb11a: hlt    
  0x00007f73e07eb11b: hlt    
  0x00007f73e07eb11c: hlt    
  0x00007f73e07eb11d: hlt    
  0x00007f73e07eb11e: hlt    
  0x00007f73e07eb11f: hlt    
[Stub Code]
  0x00007f73e07eb120: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07eb125: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07eb12f: jmpq   0x00007f73e07eb12f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07eb134: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07eb139: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07eb143: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07eb147: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07eb14c: hlt    
[Deopt Handler Code]
  0x00007f73e07eb14d: movabs $0x7f73e07eb14d,%r10  ;   {section_word}
  0x00007f73e07eb157: push   %r10
  0x00007f73e07eb159: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07eb15e: hlt    
  0x00007f73e07eb15f: hlt    

ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop }pc offsets: 164 
ImmutableOopMap{[48]=Oop [56]=Oop }pc offsets: 274 
ImmutableOopMap{rsi=Oop [48]=Oop rdx=Oop [56]=Oop }pc offsets: 443 453 
ImmutableOopMap{rsi=Oop [48]=Oop rdx=Oop [56]=Oop rax=Oop }pc offsets: 458 
ImmutableOopMap{rsi=Oop [48]=Oop rdx=Oop [56]=Oop rax=Oop rcx=Oop }pc offsets: 463 
ImmutableOopMap{[48]=Oop [56]=Oop }pc offsets: 491 Compiled method (c2)   85996  323 %     4       com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub @ 13 (57 bytes)
 total in heap  [0x00007f73e7d17b90,0x00007f73e7d18168] = 1496
 relocation     [0x00007f73e7d17d08,0x00007f73e7d17d48] = 64
 main code      [0x00007f73e7d17d60,0x00007f73e7d17f00] = 416
 stub code      [0x00007f73e7d17f00,0x00007f73e7d17f38] = 56
 oops           [0x00007f73e7d17f38,0x00007f73e7d17f40] = 8
 metadata       [0x00007f73e7d17f40,0x00007f73e7d17f70] = 48
 scopes data    [0x00007f73e7d17f70,0x00007f73e7d18040] = 208
 scopes pcs     [0x00007f73e7d18040,0x00007f73e7d18110] = 208
 dependencies   [0x00007f73e7d18110,0x00007f73e7d18120] = 16
 handler table  [0x00007f73e7d18120,0x00007f73e7d18150] = 48
 nul chk table  [0x00007f73e7d18150,0x00007f73e7d18168] = 24
----------------------------------------------------------------------
com/example/benchmark_bytecode/jmh_generated/BenchMark_integerValueOf_jmhTest.integerValueOf_thrpt_jmhStub(Lorg/openjdk/jmh/runner/InfraControl;Lorg/openjdk/jmh/results/RawResults;Lorg/openjdk/jmh/infra/BenchmarkParams;Lorg/openjdk/jmh/infra/IterationParams;Lorg/openjdk/jmh/infra/ThreadParams;Lorg/openjdk/jmh/infra/Blackhole;Lorg/openjdk/jmh/infra/Control;ILcom/example/benchmark_bytecode/jmh_generated/BenchMark_jmhType;)V  [0x00007f73e7d17d60, 0x00007f73e7d17f38]  472 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f73d398e010} 'integerValueOf_thrpt_jmhStub' '(Lorg/openjdk/jmh/runner/InfraControl;Lorg/openjdk/jmh/results/RawResults;Lorg/openjdk/jmh/infra/BenchmarkParams;Lorg/openjdk/jmh/infra/IterationParams;Lorg/openjdk/jmh/infra/ThreadParams;Lorg/openjdk/jmh/infra/Blackhole;Lorg/openjdk/jmh/infra/Control;ILcom/example/benchmark_bytecode/jmh_generated/BenchMark_jmhType;)V' in 'com/example/benchmark_bytecode/jmh_generated/BenchMark_integerValueOf_jmhTest'
  0x00007f73e7d17d60: callq  0x00007f73fe2db430  ;   {runtime_call}
  0x00007f73e7d17d65: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d17d70: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d17d77: push   %rbp
  0x00007f73e7d17d78: sub    $0x40,%rsp
  0x00007f73e7d17d7c: mov    0x60(%rsi),%rbp
  0x00007f73e7d17d80: mov    0x58(%rsi),%r14
  0x00007f73e7d17d84: mov    (%rsi),%r10
  0x00007f73e7d17d87: mov    %r10,0x20(%rsp)
  0x00007f73e7d17d8c: mov    0x38(%rsi),%r13
  0x00007f73e7d17d90: mov    0x20(%rsi),%rbx
  0x00007f73e7d17d94: mov    0x10(%rsi),%r10
  0x00007f73e7d17d98: mov    %r10,0x18(%rsp)
  0x00007f73e7d17d9d: mov    %rsi,%rdi
  0x00007f73e7d17da0: movabs $0x7f73fe3a7140,%r10
  0x00007f73e7d17daa: callq  *%r10
  0x00007f73e7d17dad: test   %rbp,%rbp
  0x00007f73e7d17db0: je     0x00007f73e7d17e8c
  0x00007f73e7d17db6: mov    0x8(%rbp),%r10d
  0x00007f73e7d17dba: cmp    $0x8010652,%r10d   ;   {metadata('org/openjdk/jmh/runner/InfraControl')}
  0x00007f73e7d17dc1: jne    0x00007f73e7d17eb0
  0x00007f73e7d17dc7: mov    %rbp,%r8
  0x00007f73e7d17dca: test   %r14,%r14
  0x00007f73e7d17dcd: je     0x00007f73e7d17e94
  0x00007f73e7d17dd3: mov    0x8(%r14),%r10d
  0x00007f73e7d17dd7: cmp    $0x80109b7,%r10d   ;   {metadata('org/openjdk/jmh/results/RawResults')}
  0x00007f73e7d17dde: jne    0x00007f73e7d17eb0
  0x00007f73e7d17de4: mov    %r14,%r9
  0x00007f73e7d17de7: test   %r13,%r13
  0x00007f73e7d17dea: je     0x00007f73e7d17e9c
  0x00007f73e7d17df0: mov    0x8(%r13),%r11d
  0x00007f73e7d17df4: cmp    $0x8010b41,%r11d   ;   {metadata('org/openjdk/jmh/infra/Blackhole')}
  0x00007f73e7d17dfb: jne    0x00007f73e7d17eb0
  0x00007f73e7d17e01: mov    %r13,%r11
  0x00007f73e7d17e04: mov    0x8(%rbx),%r10d    ; implicit exception: dispatches to 0x00007f73e7d17eda
  0x00007f73e7d17e08: cmp    $0x8010975,%r10d   ;   {metadata('com/example/benchmark_bytecode/jmh_generated/BenchMark_jmhType')}
  0x00007f73e7d17e0f: jne    0x00007f73e7d17eb0
  0x00007f73e7d17e15: mov    %r11,(%rsp)
  0x00007f73e7d17e19: mov    %r9,0x8(%rsp)
  0x00007f73e7d17e1e: mov    %r8,%rbp
  0x00007f73e7d17e21: mov    %rbx,%r10
  0x00007f73e7d17e24: mov    %r10,0x10(%rsp)    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@13 (line 121)

  0x00007f73e7d17e29: mov    %r10,%rsi
  0x00007f73e7d17e2c: data16 xchg %ax,%ax
  0x00007f73e7d17e2f: callq  0x00007f73e7d17f00  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                                                ;*invokevirtual integerValueOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@17 (line 121)
                                                ;   {optimized virtual_call}
  0x00007f73e7d17e34: mov    (%rsp),%r10
  0x00007f73e7d17e38: test   %r10,%r10
  0x00007f73e7d17e3b: je     0x00007f73e7d17ea4
  0x00007f73e7d17e3d: mov    %r10,0x28(%rsp)
  0x00007f73e7d17e42: mov    %r10,%rsi
  0x00007f73e7d17e45: mov    %eax,%edx
  0x00007f73e7d17e47: callq  0x00007f73e7d17f0f  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=Oop }
                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@20 (line 121)
                                                ;   {optimized virtual_call}
  0x00007f73e7d17e4c: mov    %rbp,%r11
  0x00007f73e7d17e4f: movzbl 0x94(%r11),%r10d   ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@30 (line 123)
                                                ; implicit exception: dispatches to 0x00007f73e7d17ee4
  0x00007f73e7d17e57: mov    0x18(%rsp),%r8
  0x00007f73e7d17e5c: add    $0x1,%r8           ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@26 (line 122)

  0x00007f73e7d17e60: mov    $0xffffffa5,%esi
  0x00007f73e7d17e65: mov    %r8,%rbp
  0x00007f73e7d17e68: rex.W pushq 0x20(%rsp)
  0x00007f73e7d17e6d: rex.W popq (%rsp)
  0x00007f73e7d17e71: mov    %r11,0x18(%rsp)
  0x00007f73e7d17e76: rex.W pushq 0x28(%rsp)
  0x00007f73e7d17e7b: rex.W popq 0x20(%rsp)
  0x00007f73e7d17e80: mov    %r10d,0x28(%rsp)
  0x00007f73e7d17e85: xchg   %ax,%ax
  0x00007f73e7d17e87: callq  0x00007f73e0269880  ; ImmutableOopMap{[8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@33 (line 123)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d17e8c: xor    %r8d,%r8d
  0x00007f73e7d17e8f: jmpq   0x00007f73e7d17dca
  0x00007f73e7d17e94: xor    %r9d,%r9d
  0x00007f73e7d17e97: jmpq   0x00007f73e7d17de7
  0x00007f73e7d17e9c: xor    %r11d,%r11d
  0x00007f73e7d17e9f: jmpq   0x00007f73e7d17e04
  0x00007f73e7d17ea4: mov    $0xfffffff6,%esi
  0x00007f73e7d17ea9: mov    %eax,%ebp
  0x00007f73e7d17eab: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@20 (line 121)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d17eb0: mov    $0xffffff95,%esi
  0x00007f73e7d17eb5: mov    %r14,(%rsp)
  0x00007f73e7d17eb9: mov    %r13,0x8(%rsp)
  0x00007f73e7d17ebe: mov    %rbx,0x10(%rsp)
  0x00007f73e7d17ec3: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                                                ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@13 (line 121)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d17ec8: mov    %rax,%rsi
  0x00007f73e7d17ecb: jmp    0x00007f73e7d17ed0
  0x00007f73e7d17ecd: mov    %rax,%rsi          ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@20 (line 121)

  0x00007f73e7d17ed0: add    $0x40,%rsp
  0x00007f73e7d17ed4: pop    %rbp
  0x00007f73e7d17ed5: jmpq   0x00007f73e0336200  ;   {runtime_call _rethrow_Java}
  0x00007f73e7d17eda: mov    $0xfffffff6,%esi
  0x00007f73e7d17edf: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*invokevirtual integerValueOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@17 (line 121)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d17ee4: mov    $0xfffffff6,%esi
  0x00007f73e7d17ee9: xchg   %ax,%ax
  0x00007f73e7d17eeb: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*getfield isDone {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@30 (line 123)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d17ef0: hlt    
  0x00007f73e7d17ef1: hlt    
  0x00007f73e7d17ef2: hlt    
  0x00007f73e7d17ef3: hlt    
  0x00007f73e7d17ef4: hlt    
  0x00007f73e7d17ef5: hlt    
  0x00007f73e7d17ef6: hlt    
  0x00007f73e7d17ef7: hlt    
  0x00007f73e7d17ef8: hlt    
  0x00007f73e7d17ef9: hlt    
  0x00007f73e7d17efa: hlt    
  0x00007f73e7d17efb: hlt    
  0x00007f73e7d17efc: hlt    
  0x00007f73e7d17efd: hlt    
  0x00007f73e7d17efe: hlt    
  0x00007f73e7d17eff: hlt    
[Stub Code]
  0x00007f73e7d17f00: movabs $0x7f73d39aeff0,%rbx  ;   {no_reloc}
  0x00007f73e7d17f0a: jmpq   0x00007f73e026b0e0  ;   {runtime_call I2C/C2I adapters}
  0x00007f73e7d17f0f: movabs $0x7f73d39b0580,%rbx  ;   {static_stub}
  0x00007f73e7d17f19: jmpq   0x00007f73e0270163  ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x00007f73e7d17f1e: jmpq   0x00007f73e02a3500  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00007f73e7d17f23: callq  0x00007f73e7d17f28
  0x00007f73e7d17f28: subq   $0x5,(%rsp)
  0x00007f73e7d17f2d: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d17f32: hlt    
  0x00007f73e7d17f33: hlt    
  0x00007f73e7d17f34: hlt    
  0x00007f73e7d17f35: hlt    
  0x00007f73e7d17f36: hlt    
  0x00007f73e7d17f37: hlt    

ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }pc offsets: 212 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=Oop }pc offsets: 236 
ImmutableOopMap{[8]=Oop [16]=Oop [24]=Oop [32]=Oop }pc offsets: 300 
ImmutableOopMap{}pc offsets: 336 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }pc offsets: 360 
ImmutableOopMap{}pc offsets: 388 400 Compiled method (c1)   87121  317       2       java.lang.Integer::valueOf (32 bytes)
 total in heap  [0x00007f73e07eb410,0x00007f73e07eb8b0] = 1184
 relocation     [0x00007f73e07eb588,0x00007f73e07eb5b8] = 48
 main code      [0x00007f73e07eb5c0,0x00007f73e07eb720] = 352
 stub code      [0x00007f73e07eb720,0x00007f73e07eb750] = 48
 metadata       [0x00007f73e07eb750,0x00007f73e07eb760] = 16
 scopes data    [0x00007f73e07eb760,0x00007f73e07eb7b0] = 80
 scopes pcs     [0x00007f73e07eb7b0,0x00007f73e07eb890] = 224
 dependencies   [0x00007f73e07eb890,0x00007f73e07eb898] = 8
 nul chk table  [0x00007f73e07eb898,0x00007f73e07eb8b0] = 24
----------------------------------------------------------------------
java/lang/Integer.valueOf(I)Ljava/lang/Integer;  [0x00007f73e07eb5c0, 0x00007f73e07eb750]  400 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000008002fe310} 'valueOf' '(I)Ljava/lang/Integer;' in 'java/lang/Integer'
  # parm0:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f73e07eb5c0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07eb5c7: push   %rbp
  0x00007f73e07eb5c8: sub    $0x60,%rsp
  0x00007f73e07eb5cc: mov    %rsi,%rbx
  0x00007f73e07eb5cf: movabs $0x7f73d3503690,%rdx
  0x00007f73e07eb5d9: mov    0x18(%rdx),%esi
  0x00007f73e07eb5dc: add    $0x8,%esi
  0x00007f73e07eb5df: mov    %esi,0x18(%rdx)
  0x00007f73e07eb5e2: and    $0x3ff8,%esi
  0x00007f73e07eb5e8: cmp    $0x0,%esi
  0x00007f73e07eb5eb: je     0x00007f73e07eb69c  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@0 (line 1057)

  0x00007f73e07eb5f1: cmp    $0xffffff80,%ebx
  0x00007f73e07eb5f4: jl     0x00007f73e07eb603  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@3 (line 1057)

  0x00007f73e07eb5fa: cmp    $0x7f,%ebx
  0x00007f73e07eb5fd: jle    0x00007f73e07eb66c  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@10 (line 1057)

  0x00007f73e07eb603: movabs $0x8002fce08,%rdx  ;   {metadata('java/lang/Integer')}
  0x00007f73e07eb60d: mov    0x118(%r15),%rax
  0x00007f73e07eb614: lea    0x10(%rax),%rdi
  0x00007f73e07eb618: cmp    0x128(%r15),%rdi
  0x00007f73e07eb61f: ja     0x00007f73e07eb6bd
  0x00007f73e07eb625: mov    %rdi,0x118(%r15)
  0x00007f73e07eb62c: mov    0xb8(%rdx),%rcx
  0x00007f73e07eb633: mov    %rcx,(%rax)
  0x00007f73e07eb636: mov    %rdx,%rcx
  0x00007f73e07eb639: movabs $0x800000000,%r12
  0x00007f73e07eb643: sub    %r12,%rcx
  0x00007f73e07eb646: shr    $0x3,%rcx
  0x00007f73e07eb64a: xor    %r12,%r12
  0x00007f73e07eb64d: mov    %ecx,0x8(%rax)
  0x00007f73e07eb650: xor    %rcx,%rcx
  0x00007f73e07eb653: mov    %ecx,0xc(%rax)
  0x00007f73e07eb656: xor    %rcx,%rcx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@23 (line 1059)

  0x00007f73e07eb659: mov    %ebx,0xc(%rax)     ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::<init>@6 (line 1083)
                                                ; - java.lang.Integer::valueOf@28 (line 1059)

  0x00007f73e07eb65c: add    $0x60,%rsp
  0x00007f73e07eb660: pop    %rbp
  0x00007f73e07eb661: mov    0x108(%r15),%r10
  0x00007f73e07eb668: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07eb66b: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@31 (line 1059)

  0x00007f73e07eb66c: add    $0x80,%ebx
  0x00007f73e07eb672: movabs $0xffe459e8,%rax   ;   {oop(a 'java/lang/Integer'[256] {0x00000000ffe459e8})}
  0x00007f73e07eb67c: cmp    0xc(%rax),%ebx     ; implicit exception: dispatches to 0x00007f73e07eb6c7
  0x00007f73e07eb67f: jae    0x00007f73e07eb6d1
  0x00007f73e07eb685: movslq %ebx,%rbx
  0x00007f73e07eb688: mov    0x10(%rax,%rbx,4),%eax  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)

  0x00007f73e07eb68c: add    $0x60,%rsp
  0x00007f73e07eb690: pop    %rbp
  0x00007f73e07eb691: mov    0x108(%r15),%r10
  0x00007f73e07eb698: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07eb69b: retq   
  0x00007f73e07eb69c: movabs $0x8002fe310,%r10  ;   {metadata({method} {0x00000008002fe310} 'valueOf' '(I)Ljava/lang/Integer;' in 'java/lang/Integer')}
  0x00007f73e07eb6a6: mov    %r10,0x8(%rsp)
  0x00007f73e07eb6ab: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07eb6b3: callq  0x00007f73e0334d80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Integer::valueOf@-1 (line 1057)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07eb6b8: jmpq   0x00007f73e07eb5f1
  0x00007f73e07eb6bd: mov    %rdx,%rdx
  0x00007f73e07eb6c0: callq  0x00007f73e0331080  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@23 (line 1059)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07eb6c5: jmp    0x00007f73e07eb659
  0x00007f73e07eb6c7: callq  0x00007f73e03308a0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07eb6cc: callq  0x00007f73e03308a0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07eb6d1: mov    %rbx,(%rsp)
  0x00007f73e07eb6d5: mov    %rax,0x8(%rsp)
  0x00007f73e07eb6da: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07eb6df: nop
  0x00007f73e07eb6e0: nop
  0x00007f73e07eb6e1: mov    0x428(%r15),%rax
  0x00007f73e07eb6e8: movabs $0x0,%r10
  0x00007f73e07eb6f2: mov    %r10,0x428(%r15)
  0x00007f73e07eb6f9: movabs $0x0,%r10
  0x00007f73e07eb703: mov    %r10,0x430(%r15)
  0x00007f73e07eb70a: add    $0x60,%rsp
  0x00007f73e07eb70e: pop    %rbp
  0x00007f73e07eb70f: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07eb714: hlt    
  0x00007f73e07eb715: hlt    
  0x00007f73e07eb716: hlt    
  0x00007f73e07eb717: hlt    
  0x00007f73e07eb718: hlt    
  0x00007f73e07eb719: hlt    
  0x00007f73e07eb71a: hlt    
  0x00007f73e07eb71b: hlt    
  0x00007f73e07eb71c: hlt    
  0x00007f73e07eb71d: hlt    
  0x00007f73e07eb71e: hlt    
  0x00007f73e07eb71f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07eb720: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07eb725: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07eb72f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07eb733: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07eb738: hlt    
[Deopt Handler Code]
  0x00007f73e07eb739: movabs $0x7f73e07eb739,%r10  ;   {section_word}
  0x00007f73e07eb743: push   %r10
  0x00007f73e07eb745: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07eb74a: hlt    
  0x00007f73e07eb74b: hlt    
  0x00007f73e07eb74c: hlt    
  0x00007f73e07eb74d: hlt    
  0x00007f73e07eb74e: hlt    
  0x00007f73e07eb74f: hlt    

ImmutableOopMap{}pc offsets: 248 261 
ImmutableOopMap{rax=Oop }pc offsets: 268 273 287 Compiled method (c2)   87710  324 %     4       com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub @ 13 (57 bytes)
 total in heap  [0x00007f73e7d18190,0x00007f73e7d18768] = 1496
 relocation     [0x00007f73e7d18308,0x00007f73e7d18330] = 40
 main code      [0x00007f73e7d18340,0x00007f73e7d18520] = 480
 stub code      [0x00007f73e7d18520,0x00007f73e7d18538] = 24
 oops           [0x00007f73e7d18538,0x00007f73e7d18540] = 8
 metadata       [0x00007f73e7d18540,0x00007f73e7d18580] = 64
 scopes data    [0x00007f73e7d18580,0x00007f73e7d18678] = 248
 scopes pcs     [0x00007f73e7d18678,0x00007f73e7d18748] = 208
 dependencies   [0x00007f73e7d18748,0x00007f73e7d18758] = 16
 nul chk table  [0x00007f73e7d18758,0x00007f73e7d18768] = 16
----------------------------------------------------------------------
com/example/benchmark_bytecode/jmh_generated/BenchMark_integerValueOf_jmhTest.integerValueOf_thrpt_jmhStub(Lorg/openjdk/jmh/runner/InfraControl;Lorg/openjdk/jmh/results/RawResults;Lorg/openjdk/jmh/infra/BenchmarkParams;Lorg/openjdk/jmh/infra/IterationParams;Lorg/openjdk/jmh/infra/ThreadParams;Lorg/openjdk/jmh/infra/Blackhole;Lorg/openjdk/jmh/infra/Control;ILcom/example/benchmark_bytecode/jmh_generated/BenchMark_jmhType;)V  [0x00007f73e7d18340, 0x00007f73e7d18538]  504 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007f73d398e010} 'integerValueOf_thrpt_jmhStub' '(Lorg/openjdk/jmh/runner/InfraControl;Lorg/openjdk/jmh/results/RawResults;Lorg/openjdk/jmh/infra/BenchmarkParams;Lorg/openjdk/jmh/infra/IterationParams;Lorg/openjdk/jmh/infra/ThreadParams;Lorg/openjdk/jmh/infra/Blackhole;Lorg/openjdk/jmh/infra/Control;ILcom/example/benchmark_bytecode/jmh_generated/BenchMark_jmhType;)V' in 'com/example/benchmark_bytecode/jmh_generated/BenchMark_integerValueOf_jmhTest'
  0x00007f73e7d18340: callq  0x00007f73fe2db430  ;   {runtime_call}
  0x00007f73e7d18345: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d18350: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d18357: push   %rbp
  0x00007f73e7d18358: sub    $0x50,%rsp
  0x00007f73e7d1835c: mov    0x60(%rsi),%r10
  0x00007f73e7d18360: mov    %r10,(%rsp)
  0x00007f73e7d18364: mov    0x58(%rsi),%r10
  0x00007f73e7d18368: mov    %r10,0x8(%rsp)
  0x00007f73e7d1836d: mov    (%rsi),%r14
  0x00007f73e7d18370: mov    0x38(%rsi),%rbp
  0x00007f73e7d18374: mov    0x20(%rsi),%rbx
  0x00007f73e7d18378: mov    0x10(%rsi),%r13
  0x00007f73e7d1837c: mov    %rsi,%rdi
  0x00007f73e7d1837f: movabs $0x7f73fe3a7140,%r10
  0x00007f73e7d18389: callq  *%r10
  0x00007f73e7d1838c: mov    (%rsp),%r10
  0x00007f73e7d18390: test   %r10,%r10
  0x00007f73e7d18393: je     0x00007f73e7d184a8
  0x00007f73e7d18399: mov    %r10,%r8
  0x00007f73e7d1839c: mov    0x8(%r10),%r10d
  0x00007f73e7d183a0: cmp    $0x8010652,%r10d   ;   {metadata('org/openjdk/jmh/runner/InfraControl')}
  0x00007f73e7d183a7: jne    0x00007f73e7d184ec
  0x00007f73e7d183ad: mov    %r8,%r11
  0x00007f73e7d183b0: mov    0x8(%rsp),%rdi
  0x00007f73e7d183b5: test   %rdi,%rdi
  0x00007f73e7d183b8: je     0x00007f73e7d184b3
  0x00007f73e7d183be: mov    0x8(%rdi),%r10d
  0x00007f73e7d183c2: cmp    $0x80109b7,%r10d   ;   {metadata('org/openjdk/jmh/results/RawResults')}
  0x00007f73e7d183c9: jne    0x00007f73e7d184f1
  0x00007f73e7d183cf: mov    %rdi,%r9
  0x00007f73e7d183d2: test   %rbp,%rbp
  0x00007f73e7d183d5: je     0x00007f73e7d184bb
  0x00007f73e7d183db: mov    0x8(%rbp),%r10d
  0x00007f73e7d183df: cmp    $0x8010b41,%r10d   ;   {metadata('org/openjdk/jmh/infra/Blackhole')}
  0x00007f73e7d183e6: jne    0x00007f73e7d184f1
  0x00007f73e7d183ec: mov    %rbp,%rcx
  0x00007f73e7d183ef: mov    0x8(%rbx),%r10d    ; implicit exception: dispatches to 0x00007f73e7d184c2
  0x00007f73e7d183f3: cmp    $0x8010975,%r10d   ;   {metadata('com/example/benchmark_bytecode/jmh_generated/BenchMark_jmhType')}
  0x00007f73e7d183fa: jne    0x00007f73e7d184f1
  0x00007f73e7d18400: test   %rcx,%rcx
  0x00007f73e7d18403: je     0x00007f73e7d184c4
  0x00007f73e7d18409: test   %r11,%r11
  0x00007f73e7d1840c: je     0x00007f73e7d184c4  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@13 (line 121)

  0x00007f73e7d18412: mov    $0x1e,%r10d
  0x00007f73e7d18418: xor    0xb0(%rcx),%r10d   ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@1 (line 477)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@20 (line 121)

  0x00007f73e7d1841f: mov    $0x1e,%r8d
  0x00007f73e7d18425: xor    0xb8(%rcx),%r8d    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@15 (line 479)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@20 (line 121)

  0x00007f73e7d1842c: cmp    %r8d,%r10d
  0x00007f73e7d1842f: je     0x00007f73e7d18478  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@16 (line 479)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@20 (line 121)

  0x00007f73e7d18431: movzbl 0x94(%r11),%r10d   ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@30 (line 123)

  0x00007f73e7d18439: mov    0x108(%r15),%r8
  0x00007f73e7d18440: add    $0x1,%r13          ; ImmutableOopMap{r11=Oop r9=Oop rcx=Oop rbx=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@33 (line 123)

  0x00007f73e7d18444: test   %eax,(%r8)         ;   {poll}
  0x00007f73e7d18447: test   %r10d,%r10d
  0x00007f73e7d1844a: je     0x00007f73e7d18412  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@33 (line 123)

  0x00007f73e7d1844c: mov    $0xffffff4d,%esi
  0x00007f73e7d18451: mov    %r11,%rbp
  0x00007f73e7d18454: mov    %r9,(%rsp)
  0x00007f73e7d18458: mov    %rcx,0x8(%rsp)
  0x00007f73e7d1845d: mov    %rbx,0x10(%rsp)
  0x00007f73e7d18462: mov    %r13,0x18(%rsp)
  0x00007f73e7d18467: mov    %r14,0x20(%rsp)
  0x00007f73e7d1846c: mov    %r10d,0x28(%rsp)
  0x00007f73e7d18471: xchg   %ax,%ax
  0x00007f73e7d18473: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@33 (line 123)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d18478: mov    $0xffffff4d,%esi
  0x00007f73e7d1847d: mov    %r11,%rbp
  0x00007f73e7d18480: mov    %r9,(%rsp)
  0x00007f73e7d18484: mov    %rbx,0x10(%rsp)
  0x00007f73e7d18489: mov    %r13,0x18(%rsp)
  0x00007f73e7d1848e: mov    %r14,0x20(%rsp)
  0x00007f73e7d18493: mov    %rcx,0x28(%rsp)
  0x00007f73e7d18498: mov    %r10d,0x30(%rsp)
  0x00007f73e7d1849d: mov    %r8d,0x34(%rsp)
  0x00007f73e7d184a2: nop
  0x00007f73e7d184a3: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [40]=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@16 (line 479)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@20 (line 121)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d184a8: xor    %r11d,%r11d
  0x00007f73e7d184ab: mov    %r10,%r8
  0x00007f73e7d184ae: jmpq   0x00007f73e7d183b0
  0x00007f73e7d184b3: xor    %r9d,%r9d
  0x00007f73e7d184b6: jmpq   0x00007f73e7d183d2
  0x00007f73e7d184bb: xor    %ecx,%ecx
  0x00007f73e7d184bd: jmpq   0x00007f73e7d183ef
  0x00007f73e7d184c2: xor    %ebx,%ebx
  0x00007f73e7d184c4: mov    $0xffffff7e,%esi
  0x00007f73e7d184c9: mov    %r11,%rbp
  0x00007f73e7d184cc: mov    %r9,(%rsp)
  0x00007f73e7d184d0: mov    %rcx,0x8(%rsp)
  0x00007f73e7d184d5: mov    %rbx,0x10(%rsp)
  0x00007f73e7d184da: mov    %r13,0x18(%rsp)
  0x00007f73e7d184df: mov    %r14,0x20(%rsp)
  0x00007f73e7d184e4: data16 xchg %ax,%ax
  0x00007f73e7d184e7: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                                                ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@13 (line 121)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d184ec: mov    0x8(%rsp),%rdi
  0x00007f73e7d184f1: mov    $0xffffff95,%esi
  0x00007f73e7d184f6: mov    %rbx,(%rsp)
  0x00007f73e7d184fa: mov    %r13,0x8(%rsp)
  0x00007f73e7d184ff: mov    %r14,0x10(%rsp)
  0x00007f73e7d18504: mov    %r8,0x18(%rsp)
  0x00007f73e7d18509: mov    %rdi,0x20(%rsp)
  0x00007f73e7d1850e: nop
  0x00007f73e7d1850f: callq  0x00007f73e0269880  ; ImmutableOopMap{rbp=Oop [0]=Oop [24]=Oop [32]=Oop }
                                                ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.jmh_generated.BenchMark_integerValueOf_jmhTest::integerValueOf_thrpt_jmhStub@13 (line 121)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d18514: hlt    
  0x00007f73e7d18515: hlt    
  0x00007f73e7d18516: hlt    
  0x00007f73e7d18517: hlt    
  0x00007f73e7d18518: hlt    
  0x00007f73e7d18519: hlt    
  0x00007f73e7d1851a: hlt    
  0x00007f73e7d1851b: hlt    
  0x00007f73e7d1851c: hlt    
  0x00007f73e7d1851d: hlt    
  0x00007f73e7d1851e: hlt    
  0x00007f73e7d1851f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d18520: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d18525: callq  0x00007f73e7d1852a
  0x00007f73e7d1852a: subq   $0x5,(%rsp)
  0x00007f73e7d1852f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d18534: hlt    
  0x00007f73e7d18535: hlt    
  0x00007f73e7d18536: hlt    
  0x00007f73e7d18537: hlt    

ImmutableOopMap{r11=Oop r9=Oop rcx=Oop rbx=Oop }pc offsets: 260 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }pc offsets: 312 
ImmutableOopMap{rbp=Oop [0]=Oop [16]=Oop [40]=Oop }pc offsets: 360 
ImmutableOopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop }pc offsets: 428 
ImmutableOopMap{rbp=Oop [0]=Oop [24]=Oop [32]=Oop }pc offsets: 468 Compiled method (c1)   88920  316       1       java.lang.Integer::intValue (5 bytes)
 total in heap  [0x00007f73e7d18790,0x00007f73e7d18a70] = 736
 relocation     [0x00007f73e7d18908,0x00007f73e7d18928] = 32
 main code      [0x00007f73e7d18940,0x00007f73e7d189e0] = 160
 stub code      [0x00007f73e7d189e0,0x00007f73e7d18a10] = 48
 metadata       [0x00007f73e7d18a10,0x00007f73e7d18a18] = 8
 scopes data    [0x00007f73e7d18a18,0x00007f73e7d18a28] = 16
 scopes pcs     [0x00007f73e7d18a28,0x00007f73e7d18a68] = 64
 dependencies   [0x00007f73e7d18a68,0x00007f73e7d18a70] = 8
----------------------------------------------------------------------
java/lang/Integer.intValue()I  [0x00007f73e7d18940, 0x00007f73e7d18a10]  208 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008002fdc88} 'intValue' '()I' in 'java/lang/Integer'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d18940: mov    0x8(%rsi),%r10d
  0x00007f73e7d18944: shl    $0x3,%r10
  0x00007f73e7d18948: movabs $0x800000000,%r12
  0x00007f73e7d18952: add    %r12,%r10
  0x00007f73e7d18955: xor    %r12,%r12
  0x00007f73e7d18958: cmp    %rax,%r10
  0x00007f73e7d1895b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d18961: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d1896c: data16 data16 xchg %ax,%ax
  0x00007f73e7d18970: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e7d1897b: data16 data16 xchg %ax,%ax
  0x00007f73e7d1897f: nop
[Verified Entry Point]
  0x00007f73e7d18980: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d18987: push   %rbp
  0x00007f73e7d18988: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@0 (line 1132)

  0x00007f73e7d1898c: mov    0xc(%rsi),%eax     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@1 (line 1132)

  0x00007f73e7d1898f: add    $0x30,%rsp
  0x00007f73e7d18993: pop    %rbp
  0x00007f73e7d18994: mov    0x108(%r15),%r10
  0x00007f73e7d1899b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d1899e: retq   
  0x00007f73e7d1899f: nop
  0x00007f73e7d189a0: nop
  0x00007f73e7d189a1: mov    0x428(%r15),%rax
  0x00007f73e7d189a8: movabs $0x0,%r10
  0x00007f73e7d189b2: mov    %r10,0x428(%r15)
  0x00007f73e7d189b9: movabs $0x0,%r10
  0x00007f73e7d189c3: mov    %r10,0x430(%r15)
  0x00007f73e7d189ca: add    $0x30,%rsp
  0x00007f73e7d189ce: pop    %rbp
  0x00007f73e7d189cf: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e7d189d4: hlt    
  0x00007f73e7d189d5: hlt    
  0x00007f73e7d189d6: hlt    
  0x00007f73e7d189d7: hlt    
  0x00007f73e7d189d8: hlt    
  0x00007f73e7d189d9: hlt    
  0x00007f73e7d189da: hlt    
  0x00007f73e7d189db: hlt    
  0x00007f73e7d189dc: hlt    
  0x00007f73e7d189dd: hlt    
  0x00007f73e7d189de: hlt    
  0x00007f73e7d189df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d189e0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e7d189e5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e7d189ef: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d189f3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e7d189f8: hlt    
[Deopt Handler Code]
  0x00007f73e7d189f9: movabs $0x7f73e7d189f9,%r10  ;   {section_word}
  0x00007f73e7d18a03: push   %r10
  0x00007f73e7d18a05: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d18a0a: hlt    
  0x00007f73e7d18a0b: hlt    
  0x00007f73e7d18a0c: hlt    
  0x00007f73e7d18a0d: hlt    
  0x00007f73e7d18a0e: hlt    
  0x00007f73e7d18a0f: hlt    
Compiled method (c1)   89175  318       2       com.example.benchmark_bytecode.BenchMark::integerValueOf (22 bytes)
 total in heap  [0x00007f73e07eb910,0x00007f73e07ebe00] = 1264
 relocation     [0x00007f73e07eba88,0x00007f73e07ebab8] = 48
 main code      [0x00007f73e07ebac0,0x00007f73e07ebc20] = 352
 stub code      [0x00007f73e07ebc20,0x00007f73e07ebc50] = 48
 oops           [0x00007f73e07ebc50,0x00007f73e07ebc58] = 8
 metadata       [0x00007f73e07ebc58,0x00007f73e07ebc70] = 24
 scopes data    [0x00007f73e07ebc70,0x00007f73e07ebcf0] = 128
 scopes pcs     [0x00007f73e07ebcf0,0x00007f73e07ebdd0] = 224
 dependencies   [0x00007f73e07ebdd0,0x00007f73e07ebdd8] = 8
 nul chk table  [0x00007f73e07ebdd8,0x00007f73e07ebe00] = 40
----------------------------------------------------------------------
com/example/benchmark_bytecode/BenchMark.integerValueOf()I  [0x00007f73e07ebac0, 0x00007f73e07ebc50]  400 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f73d39aeff0} 'integerValueOf' '()I' in 'com/example/benchmark_bytecode/BenchMark'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e07ebac0: mov    0x8(%rsi),%r10d
  0x00007f73e07ebac4: shl    $0x3,%r10
  0x00007f73e07ebac8: movabs $0x800000000,%r12
  0x00007f73e07ebad2: add    %r12,%r10
  0x00007f73e07ebad5: xor    %r12,%r12
  0x00007f73e07ebad8: cmp    %rax,%r10
  0x00007f73e07ebadb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07ebae1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ebaec: data16 data16 xchg %ax,%ax
  0x00007f73e07ebaf0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ebafb: data16 data16 xchg %ax,%ax
  0x00007f73e07ebaff: nop
[Verified Entry Point]
  0x00007f73e07ebb00: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ebb07: push   %rbp
  0x00007f73e07ebb08: sub    $0x40,%rsp
  0x00007f73e07ebb0c: movabs $0x7f73d39e0220,%rax
  0x00007f73e07ebb16: mov    0x18(%rax),%edi
  0x00007f73e07ebb19: add    $0x8,%edi
  0x00007f73e07ebb1c: mov    %edi,0x18(%rax)
  0x00007f73e07ebb1f: and    $0x3ff8,%edi
  0x00007f73e07ebb25: cmp    $0x0,%edi
  0x00007f73e07ebb28: je     0x00007f73e07ebb79  ;*bipush {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@0 (line 35)

  0x00007f73e07ebb2e: movabs $0xffe459e8,%rax   ;   {oop(a 'java/lang/Integer'[256] {0x00000000ffe459e8})}
  0x00007f73e07ebb38: cmpl   $0x8a,0xc(%rax)    ; implicit exception: dispatches to 0x00007f73e07ebb97
  0x00007f73e07ebb3f: jbe    0x00007f73e07ebba1
  0x00007f73e07ebb45: mov    0x238(%rax),%esi   ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@2 (line 35)

  0x00007f73e07ebb4b: cmpl   $0x94,0xc(%rax)
  0x00007f73e07ebb52: jbe    0x00007f73e07ebbb3
  0x00007f73e07ebb58: mov    0x260(%rax),%eax   ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@8 (line 36)

  0x00007f73e07ebb5e: mov    0xc(%rsi),%esi     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@1 (line 1132)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@13 (line 38)
                                                ; implicit exception: dispatches to 0x00007f73e07ebbc5
  0x00007f73e07ebb61: mov    0xc(%rax),%eax     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::intValue@1 (line 1132)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@17 (line 38)
                                                ; implicit exception: dispatches to 0x00007f73e07ebbca
  0x00007f73e07ebb64: add    %eax,%esi
  0x00007f73e07ebb66: mov    %rsi,%rax
  0x00007f73e07ebb69: add    $0x40,%rsp
  0x00007f73e07ebb6d: pop    %rbp
  0x00007f73e07ebb6e: mov    0x108(%r15),%r10
  0x00007f73e07ebb75: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ebb78: retq   
  0x00007f73e07ebb79: movabs $0x7f73d39aeff0,%r10  ;   {metadata({method} {0x00007f73d39aeff0} 'integerValueOf' '()I' in 'com/example/benchmark_bytecode/BenchMark')}
  0x00007f73e07ebb83: mov    %r10,0x8(%rsp)
  0x00007f73e07ebb88: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ebb90: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@-1 (line 35)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ebb95: jmp    0x00007f73e07ebb2e
  0x00007f73e07ebb97: callq  0x00007f73e03308a0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@2 (line 35)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ebb9c: callq  0x00007f73e03308a0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@2 (line 35)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ebba1: movq   $0x8a,(%rsp)
  0x00007f73e07ebba9: mov    %rax,0x8(%rsp)
  0x00007f73e07ebbae: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@2 (line 35)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07ebbb3: movq   $0x94,(%rsp)
  0x00007f73e07ebbbb: mov    %rax,0x8(%rsp)
  0x00007f73e07ebbc0: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rax=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::valueOf@21 (line 1058)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@8 (line 36)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07ebbc5: callq  0x00007f73e03308a0  ; ImmutableOopMap{rax=Oop }
                                                ;*invokevirtual intValue {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@13 (line 38)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ebbca: callq  0x00007f73e03308a0  ; ImmutableOopMap{}
                                                ;*invokevirtual intValue {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@17 (line 38)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ebbcf: nop
  0x00007f73e07ebbd0: nop
  0x00007f73e07ebbd1: mov    0x428(%r15),%rax
  0x00007f73e07ebbd8: movabs $0x0,%r10
  0x00007f73e07ebbe2: mov    %r10,0x428(%r15)
  0x00007f73e07ebbe9: movabs $0x0,%r10
  0x00007f73e07ebbf3: mov    %r10,0x430(%r15)
  0x00007f73e07ebbfa: add    $0x40,%rsp
  0x00007f73e07ebbfe: pop    %rbp
  0x00007f73e07ebbff: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ebc04: hlt    
  0x00007f73e07ebc05: hlt    
  0x00007f73e07ebc06: hlt    
  0x00007f73e07ebc07: hlt    
  0x00007f73e07ebc08: hlt    
  0x00007f73e07ebc09: hlt    
  0x00007f73e07ebc0a: hlt    
  0x00007f73e07ebc0b: hlt    
  0x00007f73e07ebc0c: hlt    
  0x00007f73e07ebc0d: hlt    
  0x00007f73e07ebc0e: hlt    
  0x00007f73e07ebc0f: hlt    
  0x00007f73e07ebc10: hlt    
  0x00007f73e07ebc11: hlt    
  0x00007f73e07ebc12: hlt    
  0x00007f73e07ebc13: hlt    
  0x00007f73e07ebc14: hlt    
  0x00007f73e07ebc15: hlt    
  0x00007f73e07ebc16: hlt    
  0x00007f73e07ebc17: hlt    
  0x00007f73e07ebc18: hlt    
  0x00007f73e07ebc19: hlt    
  0x00007f73e07ebc1a: hlt    
  0x00007f73e07ebc1b: hlt    
  0x00007f73e07ebc1c: hlt    
  0x00007f73e07ebc1d: hlt    
  0x00007f73e07ebc1e: hlt    
  0x00007f73e07ebc1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07ebc20: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07ebc25: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ebc2f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ebc33: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ebc38: hlt    
[Deopt Handler Code]
  0x00007f73e07ebc39: movabs $0x7f73e07ebc39,%r10  ;   {section_word}
  0x00007f73e07ebc43: push   %r10
  0x00007f73e07ebc45: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ebc4a: hlt    
  0x00007f73e07ebc4b: hlt    
  0x00007f73e07ebc4c: hlt    
  0x00007f73e07ebc4d: hlt    
  0x00007f73e07ebc4e: hlt    
  0x00007f73e07ebc4f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 213 
ImmutableOopMap{rax=Oop }pc offsets: 220 225 243 
ImmutableOopMap{rax=Oop rsi=Oop }pc offsets: 261 
ImmutableOopMap{rax=Oop }pc offsets: 266 
ImmutableOopMap{}pc offsets: 271 Compiled method (c1)   90075  319       2       org.openjdk.jmh.infra.Blackhole::consume (19 bytes)
 total in heap  [0x00007f73e07ebe10,0x00007f73e07ec220] = 1040
 relocation     [0x00007f73e07ebf88,0x00007f73e07ebfb0] = 40
 main code      [0x00007f73e07ebfc0,0x00007f73e07ec0e0] = 288
 stub code      [0x00007f73e07ec0e0,0x00007f73e07ec110] = 48
 oops           [0x00007f73e07ec110,0x00007f73e07ec118] = 8
 metadata       [0x00007f73e07ec118,0x00007f73e07ec128] = 16
 scopes data    [0x00007f73e07ec128,0x00007f73e07ec178] = 80
 scopes pcs     [0x00007f73e07ec178,0x00007f73e07ec208] = 144
 dependencies   [0x00007f73e07ec208,0x00007f73e07ec210] = 8
 nul chk table  [0x00007f73e07ec210,0x00007f73e07ec220] = 16
----------------------------------------------------------------------
org/openjdk/jmh/infra/Blackhole.consume(I)V  [0x00007f73e07ebfc0, 0x00007f73e07ec110]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f73d39b0580} 'consume' '(I)V' in 'org/openjdk/jmh/infra/Blackhole'
  # this:     rsi:rsi   = 'org/openjdk/jmh/infra/Blackhole'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00007f73e07ebfc0: mov    0x8(%rsi),%r10d
  0x00007f73e07ebfc4: shl    $0x3,%r10
  0x00007f73e07ebfc8: movabs $0x800000000,%r12
  0x00007f73e07ebfd2: add    %r12,%r10
  0x00007f73e07ebfd5: xor    %r12,%r12
  0x00007f73e07ebfd8: cmp    %rax,%r10
  0x00007f73e07ebfdb: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07ebfe1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ebfec: data16 data16 xchg %ax,%ax
  0x00007f73e07ebff0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ebffb: data16 data16 xchg %ax,%ax
  0x00007f73e07ebfff: nop
[Verified Entry Point]
  0x00007f73e07ec000: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ec007: push   %rbp
  0x00007f73e07ec008: sub    $0x40,%rsp
  0x00007f73e07ec00c: movabs $0x7f73d39e0270,%rdi
  0x00007f73e07ec016: mov    0x18(%rdi),%ebx
  0x00007f73e07ec019: add    $0x8,%ebx
  0x00007f73e07ec01c: mov    %ebx,0x18(%rdi)
  0x00007f73e07ec01f: and    $0x3ff8,%ebx
  0x00007f73e07ec025: cmp    $0x0,%ebx
  0x00007f73e07ec028: je     0x00007f73e07ec06a  ;*getstatic COMPILER_BLACKHOLE {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@0 (line 379)

  0x00007f73e07ec02e: mov    0xb0(%rsi),%edi    ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@1 (line 477)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)

  0x00007f73e07ec034: mov    0xb8(%rsi),%ebx    ;*getfield i2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@6 (line 478)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)

  0x00007f73e07ec03a: xor    %rdx,%rdi
  0x00007f73e07ec03d: xor    %rdx,%rbx
  0x00007f73e07ec040: cmp    %ebx,%edi
  0x00007f73e07ec042: jne    0x00007f73e07ec05a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@16 (line 479)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)

  0x00007f73e07ec048: mov    0xd8(%rsi),%esi
  0x00007f73e07ec04e: mov    %edx,0xb0(%rsi)    ; implicit exception: dispatches to 0x00007f73e07ec088
  0x00007f73e07ec054: lock addl $0x0,-0x40(%rsp)  ;*putfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@24 (line 481)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)

  0x00007f73e07ec05a: add    $0x40,%rsp
  0x00007f73e07ec05e: pop    %rbp
  0x00007f73e07ec05f: mov    0x108(%r15),%r10
  0x00007f73e07ec066: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ec069: retq   
  0x00007f73e07ec06a: movabs $0x7f73d39b0580,%r10  ;   {metadata({method} {0x00007f73d39b0580} 'consume' '(I)V' in 'org/openjdk/jmh/infra/Blackhole')}
  0x00007f73e07ec074: mov    %r10,0x8(%rsp)
  0x00007f73e07ec079: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ec081: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 379)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ec086: jmp    0x00007f73e07ec02e
  0x00007f73e07ec088: callq  0x00007f73e03308a0  ; ImmutableOopMap{}
                                                ;*putfield i1 {reexecute=1 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@24 (line 481)
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ec08d: nop
  0x00007f73e07ec08e: nop
  0x00007f73e07ec08f: mov    0x428(%r15),%rax
  0x00007f73e07ec096: movabs $0x0,%r10
  0x00007f73e07ec0a0: mov    %r10,0x428(%r15)
  0x00007f73e07ec0a7: movabs $0x0,%r10
  0x00007f73e07ec0b1: mov    %r10,0x430(%r15)
  0x00007f73e07ec0b8: add    $0x40,%rsp
  0x00007f73e07ec0bc: pop    %rbp
  0x00007f73e07ec0bd: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ec0c2: hlt    
  0x00007f73e07ec0c3: hlt    
  0x00007f73e07ec0c4: hlt    
  0x00007f73e07ec0c5: hlt    
  0x00007f73e07ec0c6: hlt    
  0x00007f73e07ec0c7: hlt    
  0x00007f73e07ec0c8: hlt    
  0x00007f73e07ec0c9: hlt    
  0x00007f73e07ec0ca: hlt    
  0x00007f73e07ec0cb: hlt    
  0x00007f73e07ec0cc: hlt    
  0x00007f73e07ec0cd: hlt    
  0x00007f73e07ec0ce: hlt    
  0x00007f73e07ec0cf: hlt    
  0x00007f73e07ec0d0: hlt    
  0x00007f73e07ec0d1: hlt    
  0x00007f73e07ec0d2: hlt    
  0x00007f73e07ec0d3: hlt    
  0x00007f73e07ec0d4: hlt    
  0x00007f73e07ec0d5: hlt    
  0x00007f73e07ec0d6: hlt    
  0x00007f73e07ec0d7: hlt    
  0x00007f73e07ec0d8: hlt    
  0x00007f73e07ec0d9: hlt    
  0x00007f73e07ec0da: hlt    
  0x00007f73e07ec0db: hlt    
  0x00007f73e07ec0dc: hlt    
  0x00007f73e07ec0dd: hlt    
  0x00007f73e07ec0de: hlt    
  0x00007f73e07ec0df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07ec0e0: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07ec0e5: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ec0ef: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ec0f3: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ec0f8: hlt    
[Deopt Handler Code]
  0x00007f73e07ec0f9: movabs $0x7f73e07ec0f9,%r10  ;   {section_word}
  0x00007f73e07ec103: push   %r10
  0x00007f73e07ec105: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ec10a: hlt    
  0x00007f73e07ec10b: hlt    
  0x00007f73e07ec10c: hlt    
  0x00007f73e07ec10d: hlt    
  0x00007f73e07ec10e: hlt    
  0x00007f73e07ec10f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 198 
ImmutableOopMap{}pc offsets: 205 Compiled method (c1)   90592  320       2       org.openjdk.jmh.infra.Blackhole::consumeFull (28 bytes)
 total in heap  [0x00007f73e07ec290,0x00007f73e07ec688] = 1016
 relocation     [0x00007f73e07ec408,0x00007f73e07ec430] = 40
 main code      [0x00007f73e07ec440,0x00007f73e07ec560] = 288
 stub code      [0x00007f73e07ec560,0x00007f73e07ec590] = 48
 oops           [0x00007f73e07ec590,0x00007f73e07ec598] = 8
 metadata       [0x00007f73e07ec598,0x00007f73e07ec5a0] = 8
 scopes data    [0x00007f73e07ec5a0,0x00007f73e07ec5e0] = 64
 scopes pcs     [0x00007f73e07ec5e0,0x00007f73e07ec670] = 144
 dependencies   [0x00007f73e07ec670,0x00007f73e07ec678] = 8
 nul chk table  [0x00007f73e07ec678,0x00007f73e07ec688] = 16
----------------------------------------------------------------------
org/openjdk/jmh/infra/Blackhole.consumeFull(I)V  [0x00007f73e07ec440, 0x00007f73e07ec590]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f73d39b1308} 'consumeFull' '(I)V' in 'org/openjdk/jmh/infra/Blackhole'
  # this:     rsi:rsi   = 'org/openjdk/jmh/infra/Blackhole'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07ec440: mov    0x8(%rsi),%r10d
  0x00007f73e07ec444: shl    $0x3,%r10
  0x00007f73e07ec448: movabs $0x800000000,%r12
  0x00007f73e07ec452: add    %r12,%r10
  0x00007f73e07ec455: xor    %r12,%r12
  0x00007f73e07ec458: cmp    %rax,%r10
  0x00007f73e07ec45b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07ec461: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ec46c: data16 data16 xchg %ax,%ax
  0x00007f73e07ec470: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ec47b: data16 data16 xchg %ax,%ax
  0x00007f73e07ec47f: nop
[Verified Entry Point]
  0x00007f73e07ec480: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ec487: push   %rbp
  0x00007f73e07ec488: sub    $0x30,%rsp
  0x00007f73e07ec48c: movabs $0x7f73d39e02c0,%rdi
  0x00007f73e07ec496: mov    0x18(%rdi),%ebx
  0x00007f73e07ec499: add    $0x8,%ebx
  0x00007f73e07ec49c: mov    %ebx,0x18(%rdi)
  0x00007f73e07ec49f: and    $0x3ff8,%ebx
  0x00007f73e07ec4a5: cmp    $0x0,%ebx
  0x00007f73e07ec4a8: je     0x00007f73e07ec4ea  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@0 (line 477)

  0x00007f73e07ec4ae: mov    0xb0(%rsi),%edi    ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@1 (line 477)

  0x00007f73e07ec4b4: mov    0xb8(%rsi),%ebx    ;*getfield i2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@6 (line 478)

  0x00007f73e07ec4ba: xor    %rdx,%rdi
  0x00007f73e07ec4bd: xor    %rdx,%rbx
  0x00007f73e07ec4c0: cmp    %ebx,%edi
  0x00007f73e07ec4c2: jne    0x00007f73e07ec4da  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@16 (line 479)

  0x00007f73e07ec4c8: mov    0xd8(%rsi),%esi
  0x00007f73e07ec4ce: mov    %edx,0xb0(%rsi)    ; implicit exception: dispatches to 0x00007f73e07ec508
  0x00007f73e07ec4d4: lock addl $0x0,-0x40(%rsp)  ;*putfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@24 (line 481)

  0x00007f73e07ec4da: add    $0x30,%rsp
  0x00007f73e07ec4de: pop    %rbp
  0x00007f73e07ec4df: mov    0x108(%r15),%r10
  0x00007f73e07ec4e6: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ec4e9: retq   
  0x00007f73e07ec4ea: movabs $0x7f73d39b1308,%r10  ;   {metadata({method} {0x00007f73d39b1308} 'consumeFull' '(I)V' in 'org/openjdk/jmh/infra/Blackhole')}
  0x00007f73e07ec4f4: mov    %r10,0x8(%rsp)
  0x00007f73e07ec4f9: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ec501: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@-1 (line 477)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ec506: jmp    0x00007f73e07ec4ae
  0x00007f73e07ec508: callq  0x00007f73e03308a0  ; ImmutableOopMap{}
                                                ;*putfield i1 {reexecute=1 rethrow=0 return_oop=0}
                                                ; - org.openjdk.jmh.infra.Blackhole::consumeFull@24 (line 481)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ec50d: nop
  0x00007f73e07ec50e: nop
  0x00007f73e07ec50f: mov    0x428(%r15),%rax
  0x00007f73e07ec516: movabs $0x0,%r10
  0x00007f73e07ec520: mov    %r10,0x428(%r15)
  0x00007f73e07ec527: movabs $0x0,%r10
  0x00007f73e07ec531: mov    %r10,0x430(%r15)
  0x00007f73e07ec538: add    $0x30,%rsp
  0x00007f73e07ec53c: pop    %rbp
  0x00007f73e07ec53d: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ec542: hlt    
  0x00007f73e07ec543: hlt    
  0x00007f73e07ec544: hlt    
  0x00007f73e07ec545: hlt    
  0x00007f73e07ec546: hlt    
  0x00007f73e07ec547: hlt    
  0x00007f73e07ec548: hlt    
  0x00007f73e07ec549: hlt    
  0x00007f73e07ec54a: hlt    
  0x00007f73e07ec54b: hlt    
  0x00007f73e07ec54c: hlt    
  0x00007f73e07ec54d: hlt    
  0x00007f73e07ec54e: hlt    
  0x00007f73e07ec54f: hlt    
  0x00007f73e07ec550: hlt    
  0x00007f73e07ec551: hlt    
  0x00007f73e07ec552: hlt    
  0x00007f73e07ec553: hlt    
  0x00007f73e07ec554: hlt    
  0x00007f73e07ec555: hlt    
  0x00007f73e07ec556: hlt    
  0x00007f73e07ec557: hlt    
  0x00007f73e07ec558: hlt    
  0x00007f73e07ec559: hlt    
  0x00007f73e07ec55a: hlt    
  0x00007f73e07ec55b: hlt    
  0x00007f73e07ec55c: hlt    
  0x00007f73e07ec55d: hlt    
  0x00007f73e07ec55e: hlt    
  0x00007f73e07ec55f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07ec560: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07ec565: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ec56f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ec573: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ec578: hlt    
[Deopt Handler Code]
  0x00007f73e07ec579: movabs $0x7f73e07ec579,%r10  ;   {section_word}
  0x00007f73e07ec583: push   %r10
  0x00007f73e07ec585: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ec58a: hlt    
  0x00007f73e07ec58b: hlt    
  0x00007f73e07ec58c: hlt    
  0x00007f73e07ec58d: hlt    
  0x00007f73e07ec58e: hlt    
  0x00007f73e07ec58f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 198 
ImmutableOopMap{}pc offsets: 205 Compiled method (c1)   94658  325       3       java.util.Arrays::copyOf (19 bytes)
 total in heap  [0x00007f73e07ec710,0x00007f73e07ecd38] = 1576
 relocation     [0x00007f73e07ec888,0x00007f73e07ec8d0] = 72
 main code      [0x00007f73e07ec8e0,0x00007f73e07ecb80] = 672
 stub code      [0x00007f73e07ecb80,0x00007f73e07ecbc0] = 64
 metadata       [0x00007f73e07ecbc0,0x00007f73e07ecbd0] = 16
 scopes data    [0x00007f73e07ecbd0,0x00007f73e07ecc50] = 128
 scopes pcs     [0x00007f73e07ecc50,0x00007f73e07ecd20] = 208
 dependencies   [0x00007f73e07ecd20,0x00007f73e07ecd28] = 8
 nul chk table  [0x00007f73e07ecd28,0x00007f73e07ecd38] = 16
----------------------------------------------------------------------
java/util/Arrays.copyOf([BI)[B  [0x00007f73e07ec8e0, 0x00007f73e07ecbc0]  736 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x00007f73e07ec8e0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ec8e7: push   %rbp
  0x00007f73e07ec8e8: sub    $0x60,%rsp
  0x00007f73e07ec8ec: mov    %rsi,%r8
  0x00007f73e07ec8ef: mov    %rdx,%r9
  0x00007f73e07ec8f2: movabs $0x7f73d35414f8,%rbx  ;   {metadata(method data for {method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07ec8fc: mov    0x104(%rbx),%edx
  0x00007f73e07ec902: add    $0x8,%edx
  0x00007f73e07ec905: mov    %edx,0x104(%rbx)
  0x00007f73e07ec90b: and    $0x1ff8,%edx
  0x00007f73e07ec911: cmp    $0x0,%edx
  0x00007f73e07ec914: je     0x00007f73e07ecad6  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@0 (line 3745)

  0x00007f73e07ec91a: mov    %r9,%rbx
  0x00007f73e07ec91d: movabs $0x8003b78a0,%rdx  ;   {metadata({type array byte})}
  0x00007f73e07ec927: movslq %ebx,%rbx
  0x00007f73e07ec92a: mov    %rbx,%rdi
  0x00007f73e07ec92d: cmp    $0xffffff,%rbx
  0x00007f73e07ec934: ja     0x00007f73e07ecaf7
  0x00007f73e07ec93a: movabs $0x17,%rsi
  0x00007f73e07ec944: lea    (%rsi,%rbx,1),%rsi
  0x00007f73e07ec948: and    $0xfffffffffffffff8,%rsi
  0x00007f73e07ec94c: mov    0x118(%r15),%rax
  0x00007f73e07ec953: lea    (%rax,%rsi,1),%rsi
  0x00007f73e07ec957: cmp    0x128(%r15),%rsi
  0x00007f73e07ec95e: ja     0x00007f73e07ecaf7
  0x00007f73e07ec964: mov    %rsi,0x118(%r15)
  0x00007f73e07ec96b: sub    %rax,%rsi
  0x00007f73e07ec96e: movq   $0x1,(%rax)
  0x00007f73e07ec975: mov    %rdx,%rcx
  0x00007f73e07ec978: movabs $0x800000000,%r12
  0x00007f73e07ec982: sub    %r12,%rcx
  0x00007f73e07ec985: shr    $0x3,%rcx
  0x00007f73e07ec989: xor    %r12,%r12
  0x00007f73e07ec98c: mov    %ecx,0x8(%rax)
  0x00007f73e07ec98f: mov    %ebx,0xc(%rax)
  0x00007f73e07ec992: sub    $0x10,%rsi
  0x00007f73e07ec996: je     0x00007f73e07ec9b6
  0x00007f73e07ec99c: test   %rsi,%rsi
  0x00007f73e07ec99f: je     0x00007f73e07ec9b6
  0x00007f73e07ec9a5: xor    %rbx,%rbx
  0x00007f73e07ec9a8: shr    $0x3,%rsi
  0x00007f73e07ec9ac: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f73e07ec9b1: dec    %rsi
  0x00007f73e07ec9b4: jne    0x00007f73e07ec9ac  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)

  0x00007f73e07ec9b6: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3746)
                                                ; implicit exception: dispatches to 0x00007f73e07ecb01
  0x00007f73e07ec9ba: movabs $0x7f73d35414f8,%rdx  ;   {metadata(method data for {method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07ec9c4: addq   $0x1,0x140(%rdx)
  0x00007f73e07ec9cc: movabs $0x7f73d3532fe8,%rdx  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07ec9d6: mov    0x104(%rdx),%ecx
  0x00007f73e07ec9dc: add    $0x8,%ecx
  0x00007f73e07ec9df: mov    %ecx,0x104(%rdx)
  0x00007f73e07ec9e5: and    $0x7ffff8,%ecx
  0x00007f73e07ec9eb: cmp    $0x0,%ecx
  0x00007f73e07ec9ee: je     0x00007f73e07ecb06
  0x00007f73e07ec9f4: cmp    %r9d,%esi
  0x00007f73e07ec9f7: movabs $0x7f73d3532fe8,%rdx  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07eca01: movabs $0x140,%rcx
  0x00007f73e07eca0b: jg     0x00007f73e07eca1b
  0x00007f73e07eca11: movabs $0x150,%rcx
  0x00007f73e07eca1b: mov    (%rdx,%rcx,1),%rdi
  0x00007f73e07eca1f: lea    0x1(%rdi),%rdi
  0x00007f73e07eca23: mov    %rdi,(%rdx,%rcx,1)
  0x00007f73e07eca27: jg     0x00007f73e07eca40  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2 (line 1518)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)

  0x00007f73e07eca2d: movabs $0x7f73d3532fe8,%rdx  ;   {metadata(method data for {method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07eca37: incl   0x160(%rdx)
  0x00007f73e07eca3d: mov    %rsi,%r9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6 (line 1518)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)

  0x00007f73e07eca40: movabs $0x7f73d35414f8,%rsi  ;   {metadata(method data for {method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07eca4a: addq   $0x1,0x150(%rsi)
  0x00007f73e07eca52: mov    %r8,%rsi
  0x00007f73e07eca55: mov    $0x0,%edx
  0x00007f73e07eca5a: mov    %rax,%rcx
  0x00007f73e07eca5d: mov    $0x0,%r8d
  0x00007f73e07eca63: mov    %rax,0x50(%rsp)
  0x00007f73e07eca68: lea    (%rdx,%r9,1),%rdi
  0x00007f73e07eca6c: cmp    0xc(%rsi),%edi
  0x00007f73e07eca6f: ja     0x00007f73e07ecb27
  0x00007f73e07eca75: lea    (%r8,%r9,1),%rdi
  0x00007f73e07eca79: cmp    0xc(%rcx),%edi
  0x00007f73e07eca7c: ja     0x00007f73e07ecb27
  0x00007f73e07eca82: test   %r9d,%r9d
  0x00007f73e07eca85: jl     0x00007f73e07ecb27
  0x00007f73e07eca8b: movslq %edx,%rdx
  0x00007f73e07eca8e: movslq %r8d,%r8
  0x00007f73e07eca91: lea    0x10(%rsi,%rdx,1),%rdi
  0x00007f73e07eca96: lea    0x10(%rcx,%r8,1),%rsi
  0x00007f73e07eca9b: mov    %r9,%rdx
  0x00007f73e07eca9e: test   $0xf,%esp
  0x00007f73e07ecaa4: je     0x00007f73e07ecabc
  0x00007f73e07ecaaa: sub    $0x8,%rsp
  0x00007f73e07ecaae: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x00007f73e07ecab3: add    $0x8,%rsp
  0x00007f73e07ecab7: jmpq   0x00007f73e07ecac1
  0x00007f73e07ecabc: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ;   {runtime_call StubRoutines (2)}
  0x00007f73e07ecac1: mov    0x50(%rsp),%rax
  0x00007f73e07ecac6: add    $0x60,%rsp
  0x00007f73e07ecaca: pop    %rbp
  0x00007f73e07ecacb: mov    0x108(%r15),%r10
  0x00007f73e07ecad2: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ecad5: retq   
  0x00007f73e07ecad6: movabs $0x800330f08,%r10  ;   {metadata({method} {0x0000000800330f08} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x00007f73e07ecae0: mov    %r10,0x8(%rsp)
  0x00007f73e07ecae5: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ecaed: callq  0x00007f73e0334d80  ; ImmutableOopMap{r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3745)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ecaf2: jmpq   0x00007f73e07ec91a
  0x00007f73e07ecaf7: callq  0x00007f73e0331680  ; ImmutableOopMap{r8=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1 (line 3745)
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x00007f73e07ecafc: jmpq   0x00007f73e07ec9b6
  0x00007f73e07ecb01: callq  0x00007f73e03308a0  ; ImmutableOopMap{r8=Oop rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@9 (line 3746)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ecb06: movabs $0x80032c750,%r10  ;   {metadata({method} {0x000000080032c750} 'min' '(II)I' in 'java/lang/Math')}
  0x00007f73e07ecb10: mov    %r10,0x8(%rsp)
  0x00007f73e07ecb15: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ecb1d: callq  0x00007f73e0334d80  ; ImmutableOopMap{r8=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1518)
                                                ; - java.util.Arrays::copyOf@11 (line 3747)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ecb22: jmpq   0x00007f73e07ec9f4
  0x00007f73e07ecb27: callq  0x00007f73e0269600  ; ImmutableOopMap{[80]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14 (line 3746)
                                                ;   {static_call}
  0x00007f73e07ecb2c: jmp    0x00007f73e07ecac1
  0x00007f73e07ecb2e: nop
  0x00007f73e07ecb2f: nop
  0x00007f73e07ecb30: mov    0x428(%r15),%rax
  0x00007f73e07ecb37: movabs $0x0,%r10
  0x00007f73e07ecb41: mov    %r10,0x428(%r15)
  0x00007f73e07ecb48: movabs $0x0,%r10
  0x00007f73e07ecb52: mov    %r10,0x430(%r15)
  0x00007f73e07ecb59: add    $0x60,%rsp
  0x00007f73e07ecb5d: pop    %rbp
  0x00007f73e07ecb5e: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ecb63: hlt    
  0x00007f73e07ecb64: hlt    
  0x00007f73e07ecb65: hlt    
  0x00007f73e07ecb66: hlt    
  0x00007f73e07ecb67: hlt    
  0x00007f73e07ecb68: hlt    
  0x00007f73e07ecb69: hlt    
  0x00007f73e07ecb6a: hlt    
  0x00007f73e07ecb6b: hlt    
  0x00007f73e07ecb6c: hlt    
  0x00007f73e07ecb6d: hlt    
  0x00007f73e07ecb6e: hlt    
  0x00007f73e07ecb6f: hlt    
  0x00007f73e07ecb70: hlt    
  0x00007f73e07ecb71: hlt    
  0x00007f73e07ecb72: hlt    
  0x00007f73e07ecb73: hlt    
  0x00007f73e07ecb74: hlt    
  0x00007f73e07ecb75: hlt    
  0x00007f73e07ecb76: hlt    
  0x00007f73e07ecb77: hlt    
  0x00007f73e07ecb78: hlt    
  0x00007f73e07ecb79: hlt    
  0x00007f73e07ecb7a: hlt    
  0x00007f73e07ecb7b: hlt    
  0x00007f73e07ecb7c: hlt    
  0x00007f73e07ecb7d: hlt    
  0x00007f73e07ecb7e: hlt    
  0x00007f73e07ecb7f: hlt    
[Stub Code]
  0x00007f73e07ecb80: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07ecb85: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ecb8f: jmpq   0x00007f73e07ecb8f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07ecb94: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07ecb99: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ecba3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ecba7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ecbac: hlt    
[Deopt Handler Code]
  0x00007f73e07ecbad: movabs $0x7f73e07ecbad,%r10  ;   {section_word}
  0x00007f73e07ecbb7: push   %r10
  0x00007f73e07ecbb9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ecbbe: hlt    
  0x00007f73e07ecbbf: hlt    

ImmutableOopMap{r8=Oop }pc offsets: 530 540 
ImmutableOopMap{r8=Oop rax=Oop }pc offsets: 550 578 
ImmutableOopMap{[80]=Oop }pc offsets: 588 Compiled method (c2)   95562  326       4       java.lang.CharacterDataLatin1::getProperties (11 bytes)
 total in heap  [0x00007f73e7d18a90,0x00007f73e7d18d48] = 696
 relocation     [0x00007f73e7d18c08,0x00007f73e7d18c18] = 16
 main code      [0x00007f73e7d18c20,0x00007f73e7d18ca0] = 128
 stub code      [0x00007f73e7d18ca0,0x00007f73e7d18cb8] = 24
 oops           [0x00007f73e7d18cb8,0x00007f73e7d18cc0] = 8
 metadata       [0x00007f73e7d18cc0,0x00007f73e7d18cc8] = 8
 scopes data    [0x00007f73e7d18cc8,0x00007f73e7d18cf0] = 40
 scopes pcs     [0x00007f73e7d18cf0,0x00007f73e7d18d40] = 80
 dependencies   [0x00007f73e7d18d40,0x00007f73e7d18d48] = 8
----------------------------------------------------------------------
java/lang/CharacterDataLatin1.getProperties(I)I  [0x00007f73e7d18c20, 0x00007f73e7d18cb8]  152 bytes
[Entry Point]
[Constants]
  # {method} {0x00000008002ee0d8} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d18c20: mov    0x8(%rsi),%r10d
  0x00007f73e7d18c24: shl    $0x3,%r10
  0x00007f73e7d18c28: movabs $0x800000000,%r12
  0x00007f73e7d18c32: add    %r12,%r10
  0x00007f73e7d18c35: xor    %r12,%r12
  0x00007f73e7d18c38: cmp    %r10,%rax
  0x00007f73e7d18c3b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d18c41: data16 xchg %ax,%ax
  0x00007f73e7d18c44: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d18c4c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d18c50: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d18c57: push   %rbp
  0x00007f73e7d18c58: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 73)

  0x00007f73e7d18c5c: movzwl %dx,%edx           ;*i2c {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@1 (line 73)

  0x00007f73e7d18c5f: cmp    $0x100,%edx
  0x00007f73e7d18c65: jae    0x00007f73e7d18c86
  0x00007f73e7d18c67: movabs $0xe2d197c0,%r10   ;   {oop([I{0x00000000e2d197c0})}
  0x00007f73e7d18c71: mov    0x10(%r10,%rdx,4),%eax
  0x00007f73e7d18c76: add    $0x10,%rsp
  0x00007f73e7d18c7a: pop    %rbp
  0x00007f73e7d18c7b: mov    0x108(%r15),%r10
  0x00007f73e7d18c82: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d18c85: retq   
  0x00007f73e7d18c86: mov    $0xffffffe4,%esi
  0x00007f73e7d18c8b: mov    %edx,%ebp
  0x00007f73e7d18c8d: xchg   %ax,%ax
  0x00007f73e7d18c8f: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 74)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d18c94: hlt    
  0x00007f73e7d18c95: hlt    
  0x00007f73e7d18c96: hlt    
  0x00007f73e7d18c97: hlt    
  0x00007f73e7d18c98: hlt    
  0x00007f73e7d18c99: hlt    
  0x00007f73e7d18c9a: hlt    
  0x00007f73e7d18c9b: hlt    
  0x00007f73e7d18c9c: hlt    
  0x00007f73e7d18c9d: hlt    
  0x00007f73e7d18c9e: hlt    
  0x00007f73e7d18c9f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d18ca0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d18ca5: callq  0x00007f73e7d18caa
  0x00007f73e7d18caa: subq   $0x5,(%rsp)
  0x00007f73e7d18caf: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d18cb4: hlt    
  0x00007f73e7d18cb5: hlt    
  0x00007f73e7d18cb6: hlt    
  0x00007f73e7d18cb7: hlt    

ImmutableOopMap{}pc offsets: 116 Compiled method (c1)   95884  327       3       java.io.InputStream::<init> (5 bytes)
 total in heap  [0x00007f73e07ecd90,0x00007f73e07ed140] = 944
 relocation     [0x00007f73e07ecf08,0x00007f73e07ecf38] = 48
 main code      [0x00007f73e07ecf40,0x00007f73e07ed080] = 320
 stub code      [0x00007f73e07ed080,0x00007f73e07ed0b0] = 48
 metadata       [0x00007f73e07ed0b0,0x00007f73e07ed0c8] = 24
 scopes data    [0x00007f73e07ed0c8,0x00007f73e07ed0e8] = 32
 scopes pcs     [0x00007f73e07ed0e8,0x00007f73e07ed138] = 80
 dependencies   [0x00007f73e07ed138,0x00007f73e07ed140] = 8
----------------------------------------------------------------------
java/io/InputStream.<init>()V  [0x00007f73e07ecf40, 0x00007f73e07ed0b0]  368 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800085f28} '<init>' '()V' in 'java/io/InputStream'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07ecf40: mov    0x8(%rsi),%r10d
  0x00007f73e07ecf44: shl    $0x3,%r10
  0x00007f73e07ecf48: movabs $0x800000000,%r12
  0x00007f73e07ecf52: add    %r12,%r10
  0x00007f73e07ecf55: xor    %r12,%r12
  0x00007f73e07ecf58: cmp    %rax,%r10
  0x00007f73e07ecf5b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07ecf61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ecf6c: data16 data16 xchg %ax,%ax
  0x00007f73e07ecf70: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07ecf7b: data16 data16 xchg %ax,%ax
  0x00007f73e07ecf7f: nop
[Verified Entry Point]
  0x00007f73e07ecf80: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ecf87: push   %rbp
  0x00007f73e07ecf88: sub    $0x30,%rsp
  0x00007f73e07ecf8c: movabs $0x7f73d36787b8,%rdi  ;   {metadata(method data for {method} {0x0000000800085f28} '<init>' '()V' in 'java/io/InputStream')}
  0x00007f73e07ecf96: mov    0x104(%rdi),%ebx
  0x00007f73e07ecf9c: add    $0x8,%ebx
  0x00007f73e07ecf9f: mov    %ebx,0x104(%rdi)
  0x00007f73e07ecfa5: and    $0x1ff8,%ebx
  0x00007f73e07ecfab: cmp    $0x0,%ebx
  0x00007f73e07ecfae: je     0x00007f73e07ed001  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.io.InputStream::<init>@0 (line 50)

  0x00007f73e07ecfb4: mov    %rsi,%rdi
  0x00007f73e07ecfb7: movabs $0x7f73d36787b8,%rbx  ;   {metadata(method data for {method} {0x0000000800085f28} '<init>' '()V' in 'java/io/InputStream')}
  0x00007f73e07ecfc1: addq   $0x1,0x140(%rbx)
  0x00007f73e07ecfc9: movabs $0x7f73d350be50,%rdi  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07ecfd3: mov    0x104(%rdi),%ebx
  0x00007f73e07ecfd9: add    $0x8,%ebx
  0x00007f73e07ecfdc: mov    %ebx,0x104(%rdi)
  0x00007f73e07ecfe2: and    $0x7ffff8,%ebx
  0x00007f73e07ecfe8: cmp    $0x0,%ebx
  0x00007f73e07ecfeb: je     0x00007f73e07ed01f
  0x00007f73e07ecff1: add    $0x30,%rsp
  0x00007f73e07ecff5: pop    %rbp
  0x00007f73e07ecff6: mov    0x108(%r15),%r10
  0x00007f73e07ecffd: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ed000: retq   
  0x00007f73e07ed001: movabs $0x800085f28,%r10  ;   {metadata({method} {0x0000000800085f28} '<init>' '()V' in 'java/io/InputStream')}
  0x00007f73e07ed00b: mov    %r10,0x8(%rsp)
  0x00007f73e07ed010: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ed018: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.io.InputStream::<init>@-1 (line 50)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ed01d: jmp    0x00007f73e07ecfb4
  0x00007f73e07ed01f: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07ed029: mov    %r10,0x8(%rsp)
  0x00007f73e07ed02e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ed036: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ; - java.io.InputStream::<init>@1 (line 50)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ed03b: jmp    0x00007f73e07ecff1
  0x00007f73e07ed03d: nop
  0x00007f73e07ed03e: nop
  0x00007f73e07ed03f: mov    0x428(%r15),%rax
  0x00007f73e07ed046: movabs $0x0,%r10
  0x00007f73e07ed050: mov    %r10,0x428(%r15)
  0x00007f73e07ed057: movabs $0x0,%r10
  0x00007f73e07ed061: mov    %r10,0x430(%r15)
  0x00007f73e07ed068: add    $0x30,%rsp
  0x00007f73e07ed06c: pop    %rbp
  0x00007f73e07ed06d: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ed072: hlt    
  0x00007f73e07ed073: hlt    
  0x00007f73e07ed074: hlt    
  0x00007f73e07ed075: hlt    
  0x00007f73e07ed076: hlt    
  0x00007f73e07ed077: hlt    
  0x00007f73e07ed078: hlt    
  0x00007f73e07ed079: hlt    
  0x00007f73e07ed07a: hlt    
  0x00007f73e07ed07b: hlt    
  0x00007f73e07ed07c: hlt    
  0x00007f73e07ed07d: hlt    
  0x00007f73e07ed07e: hlt    
  0x00007f73e07ed07f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07ed080: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07ed085: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ed08f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ed093: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ed098: hlt    
[Deopt Handler Code]
  0x00007f73e07ed099: movabs $0x7f73e07ed099,%r10  ;   {section_word}
  0x00007f73e07ed0a3: push   %r10
  0x00007f73e07ed0a5: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ed0aa: hlt    
  0x00007f73e07ed0ab: hlt    
  0x00007f73e07ed0ac: hlt    
  0x00007f73e07ed0ad: hlt    
  0x00007f73e07ed0ae: hlt    
  0x00007f73e07ed0af: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 221 251 Compiled method (c2)   96331  336       4       java.lang.CharacterData::of (120 bytes)
 total in heap  [0x00007f73e7d18d90,0x00007f73e7d19038] = 680
 relocation     [0x00007f73e7d18f08,0x00007f73e7d18f18] = 16
 main code      [0x00007f73e7d18f20,0x00007f73e7d18f80] = 96
 stub code      [0x00007f73e7d18f80,0x00007f73e7d18f98] = 24
 metadata       [0x00007f73e7d18f98,0x00007f73e7d18fb0] = 24
 scopes data    [0x00007f73e7d18fb0,0x00007f73e7d18fd0] = 32
 scopes pcs     [0x00007f73e7d18fd0,0x00007f73e7d19030] = 96
 dependencies   [0x00007f73e7d19030,0x00007f73e7d19038] = 8
----------------------------------------------------------------------
java/lang/CharacterData.of(I)Ljava/lang/CharacterData;  [0x00007f73e7d18f20, 0x00007f73e7d18f98]  120 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000008002edba0} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData'
  # parm0:    rsi       = int
  #           [sp+0x30]  (sp of caller)
  0x00007f73e7d18f20: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d18f27: push   %rbp
  0x00007f73e7d18f28: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 80)

  0x00007f73e7d18f2c: mov    %esi,%r11d
  0x00007f73e7d18f2f: shr    $0x8,%r11d         ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@3 (line 80)

  0x00007f73e7d18f33: test   %r11d,%r11d
  0x00007f73e7d18f36: jne    0x00007f73e7d18f52  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@4 (line 80)

  0x00007f73e7d18f38: movabs $0xe2d197b0,%rax   ;   {oop(a 'java/lang/CharacterDataLatin1'{0x00000000e2d197b0})}
  0x00007f73e7d18f42: add    $0x20,%rsp
  0x00007f73e7d18f46: pop    %rbp
  0x00007f73e7d18f47: mov    0x108(%r15),%r10
  0x00007f73e7d18f4e: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d18f51: retq   
  0x00007f73e7d18f52: mov    %esi,%ebp
  0x00007f73e7d18f54: mov    %r11d,(%rsp)
  0x00007f73e7d18f58: mov    $0xffffff4d,%esi
  0x00007f73e7d18f5d: xchg   %ax,%ax
  0x00007f73e7d18f5f: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.CharacterData::of@4 (line 80)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d18f64: hlt    
  0x00007f73e7d18f65: hlt    
  0x00007f73e7d18f66: hlt    
  0x00007f73e7d18f67: hlt    
  0x00007f73e7d18f68: hlt    
  0x00007f73e7d18f69: hlt    
  0x00007f73e7d18f6a: hlt    
  0x00007f73e7d18f6b: hlt    
  0x00007f73e7d18f6c: hlt    
  0x00007f73e7d18f6d: hlt    
  0x00007f73e7d18f6e: hlt    
  0x00007f73e7d18f6f: hlt    
  0x00007f73e7d18f70: hlt    
  0x00007f73e7d18f71: hlt    
  0x00007f73e7d18f72: hlt    
  0x00007f73e7d18f73: hlt    
  0x00007f73e7d18f74: hlt    
  0x00007f73e7d18f75: hlt    
  0x00007f73e7d18f76: hlt    
  0x00007f73e7d18f77: hlt    
  0x00007f73e7d18f78: hlt    
  0x00007f73e7d18f79: hlt    
  0x00007f73e7d18f7a: hlt    
  0x00007f73e7d18f7b: hlt    
  0x00007f73e7d18f7c: hlt    
  0x00007f73e7d18f7d: hlt    
  0x00007f73e7d18f7e: hlt    
  0x00007f73e7d18f7f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d18f80: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d18f85: callq  0x00007f73e7d18f8a
  0x00007f73e7d18f8a: subq   $0x5,(%rsp)
  0x00007f73e7d18f8f: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d18f94: hlt    
  0x00007f73e7d18f95: hlt    
  0x00007f73e7d18f96: hlt    
  0x00007f73e7d18f97: hlt    

ImmutableOopMap{}pc offsets: 68 Compiled method (c1)   96619  331       3       sun.net.www.ParseUtil::firstEncodeIndex (86 bytes)
 total in heap  [0x00007f73e07ed190,0x00007f73e07ee4d0] = 4928
 relocation     [0x00007f73e07ed308,0x00007f73e07ed3d8] = 208
 main code      [0x00007f73e07ed3e0,0x00007f73e07edd20] = 2368
 stub code      [0x00007f73e07edd20,0x00007f73e07edd80] = 96
 metadata       [0x00007f73e07edd80,0x00007f73e07eddc8] = 72
 scopes data    [0x00007f73e07eddc8,0x00007f73e07ee070] = 680
 scopes pcs     [0x00007f73e07ee070,0x00007f73e07ee4a0] = 1072
 dependencies   [0x00007f73e07ee4a0,0x00007f73e07ee4a8] = 8
 nul chk table  [0x00007f73e07ee4a8,0x00007f73e07ee4d0] = 40
----------------------------------------------------------------------
sun/net/www/ParseUtil.firstEncodeIndex(Ljava/lang/String;)I  [0x00007f73e07ed3e0, 0x00007f73e07edd80]  2464 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil'
  # parm0:    rsi:rsi   = 'java/lang/String'
  #           [sp+0xd0]  (sp of caller)
  0x00007f73e07ed3e0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ed3e7: push   %rbp
  0x00007f73e07ed3e8: sub    $0xc0,%rsp
  0x00007f73e07ed3ef: mov    %rsi,0xa0(%rsp)
  0x00007f73e07ed3f7: movabs $0x7f73d3678928,%rcx  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed401: mov    0x104(%rcx),%edx
  0x00007f73e07ed407: add    $0x8,%edx
  0x00007f73e07ed40a: mov    %edx,0x104(%rcx)
  0x00007f73e07ed410: and    $0x1ff8,%edx
  0x00007f73e07ed416: cmp    $0x0,%edx
  0x00007f73e07ed419: je     0x00007f73e07edb39  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@0 (line 83)

  0x00007f73e07ed41f: cmp    (%rsi),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)
                                                ; implicit exception: dispatches to 0x00007f73e07edb5a
  0x00007f73e07ed422: mov    %rsi,%rcx
  0x00007f73e07ed425: movabs $0x7f73d3678928,%rdx  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed42f: addq   $0x1,0x140(%rdx)
  0x00007f73e07ed437: movabs $0x7f73d350ed08,%rcx  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07ed441: mov    0x104(%rcx),%edx
  0x00007f73e07ed447: add    $0x8,%edx
  0x00007f73e07ed44a: mov    %edx,0x104(%rcx)
  0x00007f73e07ed450: and    $0x7ffff8,%edx
  0x00007f73e07ed456: cmp    $0x0,%edx
  0x00007f73e07ed459: je     0x00007f73e07edb5f
  0x00007f73e07ed45f: mov    0xc(%rsi),%ecx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)

  0x00007f73e07ed462: mov    0xc(%rcx),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)
                                                ; implicit exception: dispatches to 0x00007f73e07edb80
  0x00007f73e07ed465: mov    %rsi,%rcx
  0x00007f73e07ed468: movabs $0x7f73d350ed08,%rdi  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07ed472: addq   $0x1,0x140(%rdi)
  0x00007f73e07ed47a: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07ed484: mov    0x104(%rcx),%edi
  0x00007f73e07ed48a: add    $0x8,%edi
  0x00007f73e07ed48d: mov    %edi,0x104(%rcx)
  0x00007f73e07ed493: and    $0x7ffff8,%edi
  0x00007f73e07ed499: cmp    $0x0,%edi
  0x00007f73e07ed49c: je     0x00007f73e07edb85
  0x00007f73e07ed4a2: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07ed4ac: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)

  0x00007f73e07ed4b2: movsbl 0x14(%rsi),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)

  0x00007f73e07ed4b6: movabs $0x7f73d350d1b0,%rdi  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07ed4c0: incl   0x160(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)

  0x00007f73e07ed4c6: shl    $0x18,%ecx
  0x00007f73e07ed4c9: sar    $0x18,%ecx
  0x00007f73e07ed4cc: sar    %cl,%edx
  0x00007f73e07ed4ce: mov    %edx,0x94(%rsp)
  0x00007f73e07ed4d5: mov    $0x0,%edi          ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@7 (line 84)

  0x00007f73e07ed4da: nopw   0x0(%rax,%rax,1)
  0x00007f73e07ed4e0: cmp    %edx,%edi
  0x00007f73e07ed4e2: movabs $0x7f73d3678928,%rbx  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed4ec: movabs $0x178,%rax
  0x00007f73e07ed4f6: jge    0x00007f73e07ed506
  0x00007f73e07ed4fc: movabs $0x188,%rax
  0x00007f73e07ed506: mov    (%rbx,%rax,1),%rcx
  0x00007f73e07ed50a: lea    0x1(%rcx),%rcx
  0x00007f73e07ed50e: mov    %rcx,(%rbx,%rax,1)
  0x00007f73e07ed512: jge    0x00007f73e07edacd  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@9 (line 84)

  0x00007f73e07ed518: mov    %rsi,%rbx
  0x00007f73e07ed51b: movabs $0x7f73d3678928,%rax  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed525: addq   $0x1,0x198(%rax)
  0x00007f73e07ed52d: movabs $0x7f73d3518090,%rbx  ;   {metadata(method data for {method} {0x0000000800339868} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007f73e07ed537: mov    0x104(%rbx),%eax
  0x00007f73e07ed53d: add    $0x8,%eax
  0x00007f73e07ed540: mov    %eax,0x104(%rbx)
  0x00007f73e07ed546: and    $0x7ffff8,%eax
  0x00007f73e07ed54c: cmp    $0x0,%eax
  0x00007f73e07ed54f: je     0x00007f73e07edba6
  0x00007f73e07ed555: mov    %rsi,%rbx
  0x00007f73e07ed558: movabs $0x7f73d3518090,%rax  ;   {metadata(method data for {method} {0x0000000800339868} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007f73e07ed562: addq   $0x1,0x140(%rax)
  0x00007f73e07ed56a: movabs $0x7f73d350b2d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07ed574: mov    0x104(%rbx),%eax
  0x00007f73e07ed57a: add    $0x8,%eax
  0x00007f73e07ed57d: mov    %eax,0x104(%rbx)
  0x00007f73e07ed583: and    $0x7ffff8,%eax
  0x00007f73e07ed589: cmp    $0x0,%eax
  0x00007f73e07ed58c: je     0x00007f73e07edbc7
  0x00007f73e07ed592: movabs $0x7f73d350b2d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07ed59c: incl   0x150(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed5a2: movsbl 0x14(%rsi),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed5a6: cmp    $0x0,%ebx
  0x00007f73e07ed5a9: movabs $0x7f73d350b2d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07ed5b3: movabs $0x160,%rax
  0x00007f73e07ed5bd: jne    0x00007f73e07ed5cd
  0x00007f73e07ed5c3: movabs $0x170,%rax
  0x00007f73e07ed5cd: mov    (%rbx,%rax,1),%rcx
  0x00007f73e07ed5d1: lea    0x1(%rcx),%rcx
  0x00007f73e07ed5d5: mov    %rcx,(%rbx,%rax,1)
  0x00007f73e07ed5d9: jne    0x00007f73e07ed5f9  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed5df: movabs $0x7f73d350b2d8,%rbx  ;   {metadata(method data for {method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07ed5e9: incl   0x180(%rbx)
  0x00007f73e07ed5ef: mov    $0x1,%ebx
  0x00007f73e07ed5f4: jmpq   0x00007f73e07ed5fe  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed5f9: mov    $0x0,%ebx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed5fe: and    $0x1,%ebx
  0x00007f73e07ed601: cmp    $0x0,%ebx
  0x00007f73e07ed604: movabs $0x7f73d3518090,%rbx  ;   {metadata(method data for {method} {0x0000000800339868} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007f73e07ed60e: movabs $0x178,%rax
  0x00007f73e07ed618: je     0x00007f73e07ed628
  0x00007f73e07ed61e: movabs $0x188,%rax
  0x00007f73e07ed628: mov    (%rbx,%rax,1),%rcx
  0x00007f73e07ed62c: lea    0x1(%rcx),%rcx
  0x00007f73e07ed630: mov    %rcx,(%rbx,%rax,1)
  0x00007f73e07ed634: je     0x00007f73e07ed712  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed63a: mov    0xc(%rsi),%ebx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed63d: movabs $0x7f73d3518090,%rax  ;   {metadata(method data for {method} {0x0000000800339868} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007f73e07ed647: addq   $0x1,0x198(%rax)
  0x00007f73e07ed64f: movabs $0x7f73d3518290,%rax  ;   {metadata(method data for {method} {0x000000080033ead8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00007f73e07ed659: mov    0x104(%rax),%ecx
  0x00007f73e07ed65f: add    $0x8,%ecx
  0x00007f73e07ed662: mov    %ecx,0x104(%rax)
  0x00007f73e07ed668: and    $0x7ffff8,%ecx
  0x00007f73e07ed66e: cmp    $0x0,%ecx
  0x00007f73e07ed671: je     0x00007f73e07edbe8
  0x00007f73e07ed677: cmp    $0x0,%edi
  0x00007f73e07ed67a: movabs $0x7f73d3518290,%rax  ;   {metadata(method data for {method} {0x000000080033ead8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00007f73e07ed684: movabs $0x140,%rcx
  0x00007f73e07ed68e: jl     0x00007f73e07ed69e
  0x00007f73e07ed694: movabs $0x150,%rcx
  0x00007f73e07ed69e: mov    (%rax,%rcx,1),%r8
  0x00007f73e07ed6a2: lea    0x1(%r8),%r8
  0x00007f73e07ed6a6: mov    %r8,(%rax,%rcx,1)
  0x00007f73e07ed6aa: jl     0x00007f73e07edae5  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed6b0: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ; implicit exception: dispatches to 0x00007f73e07edc09
  0x00007f73e07ed6b3: cmp    %eax,%edi
  0x00007f73e07ed6b5: movabs $0x7f73d3518290,%rcx  ;   {metadata(method data for {method} {0x000000080033ead8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00007f73e07ed6bf: movabs $0x170,%r8
  0x00007f73e07ed6c9: jge    0x00007f73e07ed6d9
  0x00007f73e07ed6cf: movabs $0x160,%r8
  0x00007f73e07ed6d9: mov    (%rcx,%r8,1),%r9
  0x00007f73e07ed6dd: lea    0x1(%r9),%r9
  0x00007f73e07ed6e1: mov    %r9,(%rcx,%r8,1)
  0x00007f73e07ed6e5: jge    0x00007f73e07edae5  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed6eb: cmp    %edi,%eax
  0x00007f73e07ed6ed: jbe    0x00007f73e07edc0e
  0x00007f73e07ed6f3: movslq %edi,%rax
  0x00007f73e07ed6f6: movsbl 0x10(%rbx,%rax,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed6fb: and    $0xff,%ebx
  0x00007f73e07ed701: and    $0xffff,%ebx
  0x00007f73e07ed707: and    $0xffff,%ebx
  0x00007f73e07ed70d: jmpq   0x00007f73e07ed81a  ;*istore_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@17 (line 85)

  0x00007f73e07ed712: mov    0xc(%rsi),%ebx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@17 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed715: movabs $0x7f73d3518090,%rax  ;   {metadata(method data for {method} {0x0000000800339868} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007f73e07ed71f: addq   $0x1,0x1a8(%rax)
  0x00007f73e07ed727: movabs $0x7f73d3678c78,%rax  ;   {metadata(method data for {method} {0x00000008001eb810} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x00007f73e07ed731: mov    0x104(%rax),%ecx
  0x00007f73e07ed737: add    $0x8,%ecx
  0x00007f73e07ed73a: mov    %ecx,0x104(%rax)
  0x00007f73e07ed740: and    $0x7ffff8,%ecx
  0x00007f73e07ed746: cmp    $0x0,%ecx
  0x00007f73e07ed749: je     0x00007f73e07edc1c
  0x00007f73e07ed74f: movabs $0x7f73d3678c78,%rax  ;   {metadata(method data for {method} {0x00000008001eb810} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x00007f73e07ed759: addq   $0x1,0x140(%rax)
  0x00007f73e07ed761: movabs $0x7f73d3678e20,%rax  ;   {metadata(method data for {method} {0x00000008001eb708} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00007f73e07ed76b: mov    0x104(%rax),%ecx
  0x00007f73e07ed771: add    $0x8,%ecx
  0x00007f73e07ed774: mov    %ecx,0x104(%rax)
  0x00007f73e07ed77a: and    $0x7ffff8,%ecx
  0x00007f73e07ed780: cmp    $0x0,%ecx
  0x00007f73e07ed783: je     0x00007f73e07edc3d
  0x00007f73e07ed789: movabs $0x7f73d3678e20,%rax  ;   {metadata(method data for {method} {0x00000008001eb708} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00007f73e07ed793: addq   $0x1,0x140(%rax)
  0x00007f73e07ed79b: movabs $0x7f73d3678fc8,%rax  ;   {metadata(method data for {method} {0x00000008001eae70} 'length' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07ed7a5: mov    0x104(%rax),%ecx
  0x00007f73e07ed7ab: add    $0x8,%ecx
  0x00007f73e07ed7ae: mov    %ecx,0x104(%rax)
  0x00007f73e07ed7b4: and    $0x7ffff8,%ecx
  0x00007f73e07ed7ba: cmp    $0x0,%ecx
  0x00007f73e07ed7bd: je     0x00007f73e07edc5e
  0x00007f73e07ed7c3: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::length@1 (line 74)
                                                ; - java.lang.StringUTF16::checkIndex@2 (line 1470)
                                                ; - java.lang.StringUTF16::charAt@2 (line 1267)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ; implicit exception: dispatches to 0x00007f73e07edc7f
  0x00007f73e07ed7c6: movabs $0x7f73d3678e20,%rcx  ;   {metadata(method data for {method} {0x00000008001eb708} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00007f73e07ed7d0: addq   $0x1,0x150(%rcx)
  0x00007f73e07ed7d8: sar    %eax
  0x00007f73e07ed7da: mov    %rdi,%rsi
  0x00007f73e07ed7dd: mov    %rax,%rdx          ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::checkIndex@5 (line 1470)
                                                ; - java.lang.StringUTF16::charAt@2 (line 1267)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed7e0: mov    %rbx,0x98(%rsp)
  0x00007f73e07ed7e8: mov    %edi,0x90(%rsp)
  0x00007f73e07ed7ef: callq  0x00007f73e0269600  ; ImmutableOopMap{[160]=Oop [152]=Oop }
                                                ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::checkIndex@5 (line 1470)
                                                ; - java.lang.StringUTF16::charAt@2 (line 1267)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {static_call}
  0x00007f73e07ed7f4: mov    0x90(%rsp),%edi
  0x00007f73e07ed7fb: movslq %edi,%rsi
  0x00007f73e07ed7fe: mov    0x98(%rsp),%rbx
  0x00007f73e07ed806: movzwl 0x10(%rbx,%rsi,2),%esi  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::charAt@7 (line 1268)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07ed80b: and    $0xffff,%esi
  0x00007f73e07ed811: and    $0xffff,%esi
  0x00007f73e07ed817: mov    %rsi,%rbx          ;*istore_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@17 (line 85)

  0x00007f73e07ed81a: cmp    $0x61,%ebx
  0x00007f73e07ed81d: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed827: movabs $0x1d0,%rdx
  0x00007f73e07ed831: jl     0x00007f73e07ed841
  0x00007f73e07ed837: movabs $0x1e0,%rdx
  0x00007f73e07ed841: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07ed845: lea    0x1(%rcx),%rcx
  0x00007f73e07ed849: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07ed84d: jl     0x00007f73e07ed898  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@21 (line 90)

  0x00007f73e07ed853: cmp    $0x7a,%ebx
  0x00007f73e07ed856: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed860: movabs $0x200,%rdx
  0x00007f73e07ed86a: jg     0x00007f73e07ed87a
  0x00007f73e07ed870: movabs $0x1f0,%rdx
  0x00007f73e07ed87a: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07ed87e: lea    0x1(%rcx),%rcx
  0x00007f73e07ed882: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07ed886: jg     0x00007f73e07ed898  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@27 (line 90)

  0x00007f73e07ed88c: mov    %edi,0x90(%rsp)
  0x00007f73e07ed893: jmpq   0x00007f73e07eda51  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@78 (line 84)

  0x00007f73e07ed898: cmp    $0x26,%ebx
  0x00007f73e07ed89b: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed8a5: movabs $0x210,%rdx
  0x00007f73e07ed8af: jl     0x00007f73e07ed8bf
  0x00007f73e07ed8b5: movabs $0x220,%rdx
  0x00007f73e07ed8bf: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07ed8c3: lea    0x1(%rcx),%rcx
  0x00007f73e07ed8c7: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07ed8cb: jl     0x00007f73e07ed916  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@33 (line 90)

  0x00007f73e07ed8d1: cmp    $0x3a,%ebx
  0x00007f73e07ed8d4: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed8de: movabs $0x240,%rdx
  0x00007f73e07ed8e8: jg     0x00007f73e07ed8f8
  0x00007f73e07ed8ee: movabs $0x230,%rdx
  0x00007f73e07ed8f8: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07ed8fc: lea    0x1(%rcx),%rcx
  0x00007f73e07ed900: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07ed904: jg     0x00007f73e07ed916  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@39 (line 90)

  0x00007f73e07ed90a: mov    %edi,0x90(%rsp)
  0x00007f73e07ed911: jmpq   0x00007f73e07eda51  ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@78 (line 84)

  0x00007f73e07ed916: cmp    $0x41,%ebx
  0x00007f73e07ed919: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed923: movabs $0x250,%rdx
  0x00007f73e07ed92d: jl     0x00007f73e07ed93d
  0x00007f73e07ed933: movabs $0x260,%rdx
  0x00007f73e07ed93d: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07ed941: lea    0x1(%rcx),%rcx
  0x00007f73e07ed945: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07ed949: jl     0x00007f73e07ed988  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@45 (line 90)

  0x00007f73e07ed94f: cmp    $0x5a,%ebx
  0x00007f73e07ed952: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed95c: movabs $0x280,%rdx
  0x00007f73e07ed966: jle    0x00007f73e07ed976
  0x00007f73e07ed96c: movabs $0x270,%rdx
  0x00007f73e07ed976: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07ed97a: lea    0x1(%rcx),%rcx
  0x00007f73e07ed97e: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07ed982: jle    0x00007f73e07eda3a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@51 (line 90)

  0x00007f73e07ed988: cmp    $0x7f,%ebx
  0x00007f73e07ed98b: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed995: movabs $0x2a8,%rdx
  0x00007f73e07ed99f: jg     0x00007f73e07ed9af
  0x00007f73e07ed9a5: movabs $0x2b8,%rdx
  0x00007f73e07ed9af: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07ed9b3: lea    0x1(%rcx),%rcx
  0x00007f73e07ed9b7: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07ed9bb: jg     0x00007f73e07edab7  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@60 (line 94)

  0x00007f73e07ed9c1: mov    %edi,0x90(%rsp)
  0x00007f73e07ed9c8: movabs $0x7f73d3678928,%rsi  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07ed9d2: addq   $0x1,0x2c8(%rsi)
  0x00007f73e07ed9da: mov    %rbx,%rsi
  0x00007f73e07ed9dd: movabs $0xf800802dffffffff,%rdx
  0x00007f73e07ed9e7: movabs $0xb800000178000000,%rcx  ;*invokestatic match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@70 (line 94)

  0x00007f73e07ed9f1: nopw   0x0(%rax,%rax,1)
  0x00007f73e07ed9f7: callq  0x00007f73e0269600  ; ImmutableOopMap{[160]=Oop }
                                                ;*invokestatic match {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@70 (line 94)
                                                ;   {static_call}
  0x00007f73e07ed9fc: cmp    $0x0,%eax
  0x00007f73e07ed9ff: movabs $0x7f73d3678928,%rax  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07eda09: movabs $0x2d8,%rdx
  0x00007f73e07eda13: je     0x00007f73e07eda23
  0x00007f73e07eda19: movabs $0x2e8,%rdx
  0x00007f73e07eda23: mov    (%rax,%rdx,1),%rsi
  0x00007f73e07eda27: lea    0x1(%rsi),%rsi
  0x00007f73e07eda2b: mov    %rsi,(%rax,%rdx,1)
  0x00007f73e07eda2f: je     0x00007f73e07eda51
  0x00007f73e07eda35: jmpq   0x00007f73e07edab0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@73 (line 94)

  0x00007f73e07eda3a: mov    %edi,0x90(%rsp)
  0x00007f73e07eda41: movabs $0x7f73d3678928,%rax  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07eda4b: incl   0x290(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@54 (line 93)

  0x00007f73e07eda51: mov    0x90(%rsp),%edi
  0x00007f73e07eda58: inc    %edi
  0x00007f73e07eda5a: movabs $0x7f73d3678928,%rax  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07eda64: mov    0x108(%rax),%edx
  0x00007f73e07eda6a: add    $0x8,%edx
  0x00007f73e07eda6d: mov    %edx,0x108(%rax)
  0x00007f73e07eda73: and    $0xfff8,%edx
  0x00007f73e07eda79: cmp    $0x0,%edx
  0x00007f73e07eda7c: je     0x00007f73e07edc84  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@81 (line 84)

  0x00007f73e07eda82: mov    0x108(%r15),%r10   ; ImmutableOopMap{[160]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@81 (line 84)

  0x00007f73e07eda89: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07eda8c: movabs $0x7f73d3678928,%rax  ;   {metadata(method data for {method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07eda96: incl   0x2f8(%rax)
  0x00007f73e07eda9c: mov    0x94(%rsp),%edx
  0x00007f73e07edaa3: mov    0xa0(%rsp),%rsi
  0x00007f73e07edaab: jmpq   0x00007f73e07ed4e0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@81 (line 84)

  0x00007f73e07edab0: mov    0x90(%rsp),%edi
  0x00007f73e07edab7: mov    %rdi,%rax
  0x00007f73e07edaba: add    $0xc0,%rsp
  0x00007f73e07edac1: pop    %rbp
  0x00007f73e07edac2: mov    0x108(%r15),%r10
  0x00007f73e07edac9: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07edacc: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@77 (line 95)

  0x00007f73e07edacd: mov    $0xffffffff,%eax
  0x00007f73e07edad2: add    $0xc0,%rsp
  0x00007f73e07edad9: pop    %rbp
  0x00007f73e07edada: mov    0x108(%r15),%r10
  0x00007f73e07edae1: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07edae4: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@85 (line 98)

  0x00007f73e07edae5: data16 xchg %ax,%ax
  0x00007f73e07edae8: jmpq   0x00007f73e07edcb4  ;   {no_reloc}
  0x00007f73e07edaed: add    %al,(%rax)
  0x00007f73e07edaef: add    %al,(%rax)
  0x00007f73e07edaf1: add    %ch,%cl
  0x00007f73e07edaf3: movl   $0x8b480000,(%rcx)  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07edaf9: rorb   -0x47(%rax)        ;   {metadata(method data for {method} {0x000000080033ead8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00007f73e07edafc: nop
  0x00007f73e07edafd: (bad)  
  0x00007f73e07edafe: push   %rcx
  0x00007f73e07edaff: shll   %cl,0x7f(%rbx)
  0x00007f73e07edb02: add    %al,(%rax)
  0x00007f73e07edb04: addq   $0x1,0x180(%rcx)
  0x00007f73e07edb0c: mov    %rdi,%rdx
  0x00007f73e07edb0f: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)

  0x00007f73e07edb12: mov    %edi,0x90(%rsp)
  0x00007f73e07edb19: mov    %rax,0xa8(%rsp)
  0x00007f73e07edb21: nopw   0x0(%rax,%rax,1)
  0x00007f73e07edb27: callq  0x00007f73e0269100  ; ImmutableOopMap{[160]=Oop [168]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {optimized virtual_call}
  0x00007f73e07edb2c: mov    0xa8(%rsp),%rax
  0x00007f73e07edb34: jmpq   0x00007f73e07edcf6
  0x00007f73e07edb39: movabs $0x8002b9610,%r10  ;   {metadata({method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07edb43: mov    %r10,0x8(%rsp)
  0x00007f73e07edb48: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edb50: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop }
                                                ;*synchronization entry
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@-1 (line 83)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edb55: jmpq   0x00007f73e07ed41f
  0x00007f73e07edb5a: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [160]=Oop }
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07edb5f: movabs $0x800339080,%r10  ;   {metadata({method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07edb69: mov    %r10,0x8(%rsp)
  0x00007f73e07edb6e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edb76: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edb7b: jmpq   0x00007f73e07ed45f
  0x00007f73e07edb80: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [160]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07edb85: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07edb8f: mov    %r10,0x8(%rsp)
  0x00007f73e07edb94: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edb9c: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@1 (line 83)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edba1: jmpq   0x00007f73e07ed4a2
  0x00007f73e07edba6: movabs $0x800339868,%r10  ;   {metadata({method} {0x0000000800339868} 'charAt' '(I)C' in 'java/lang/String')}
  0x00007f73e07edbb0: mov    %r10,0x8(%rsp)
  0x00007f73e07edbb5: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edbbd: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edbc2: jmpq   0x00007f73e07ed555
  0x00007f73e07edbc7: movabs $0x80033ac68,%r10  ;   {metadata({method} {0x000000080033ac68} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00007f73e07edbd1: mov    %r10,0x8(%rsp)
  0x00007f73e07edbd6: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edbde: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1 (line 3266)
                                                ; - java.lang.String::charAt@1 (line 692)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edbe3: jmpq   0x00007f73e07ed592
  0x00007f73e07edbe8: movabs $0x80033ead8,%r10  ;   {metadata({method} {0x000000080033ead8} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00007f73e07edbf2: mov    %r10,0x8(%rsp)
  0x00007f73e07edbf7: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edbff: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edc04: jmpq   0x00007f73e07ed677
  0x00007f73e07edc09: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6 (line 46)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07edc0e: mov    %rdi,(%rsp)
  0x00007f73e07edc12: mov    %rbx,0x8(%rsp)
  0x00007f73e07edc17: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21 (line 49)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07edc1c: movabs $0x8001eb810,%r10  ;   {metadata({method} {0x00000008001eb810} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x00007f73e07edc26: mov    %r10,0x8(%rsp)
  0x00007f73e07edc2b: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edc33: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::charAt@-1 (line 1267)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edc38: jmpq   0x00007f73e07ed74f
  0x00007f73e07edc3d: movabs $0x8001eb708,%r10  ;   {metadata({method} {0x00000008001eb708} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00007f73e07edc47: mov    %r10,0x8(%rsp)
  0x00007f73e07edc4c: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edc54: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::checkIndex@-1 (line 1470)
                                                ; - java.lang.StringUTF16::charAt@2 (line 1267)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edc59: jmpq   0x00007f73e07ed789
  0x00007f73e07edc5e: movabs $0x8001eae70,%r10  ;   {metadata({method} {0x00000008001eae70} 'length' '([B)I' in 'java/lang/StringUTF16')}
  0x00007f73e07edc68: mov    %r10,0x8(%rsp)
  0x00007f73e07edc6d: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07edc75: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::length@-1 (line 74)
                                                ; - java.lang.StringUTF16::checkIndex@2 (line 1470)
                                                ; - java.lang.StringUTF16::charAt@2 (line 1267)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edc7a: jmpq   0x00007f73e07ed7c3
  0x00007f73e07edc7f: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::length@1 (line 74)
                                                ; - java.lang.StringUTF16::checkIndex@2 (line 1470)
                                                ; - java.lang.StringUTF16::charAt@2 (line 1267)
                                                ; - java.lang.String::charAt@21 (line 695)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07edc84: movabs $0x8002b9610,%r10  ;   {metadata({method} {0x00000008002b9610} 'firstEncodeIndex' '(Ljava/lang/String;)I' in 'sun/net/www/ParseUtil')}
  0x00007f73e07edc8e: mov    %r10,0x8(%rsp)
  0x00007f73e07edc93: movq   $0x51,(%rsp)
  0x00007f73e07edc9b: callq  0x00007f73e0334d80  ; ImmutableOopMap{[160]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@81 (line 84)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07edca0: jmpq   0x00007f73e07eda82
  0x00007f73e07edca5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f73e07edcaf: mov    $0xa050f00,%eax
  0x00007f73e07edcb4: callq  0x00007f73e0333e00  ; ImmutableOopMap{[160]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07edcb9: jmpq   0x00007f73e07edae8
  0x00007f73e07edcbe: mov    %rdx,%rdx
  0x00007f73e07edcc1: callq  0x00007f73e0330d80  ; ImmutableOopMap{[160]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10 (line 47)
                                                ; - java.lang.String::charAt@12 (line 693)
                                                ; - sun.net.www.ParseUtil::firstEncodeIndex@14 (line 85)
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00007f73e07edcc6: jmpq   0x00007f73e07edaf7
  0x00007f73e07edccb: nop
  0x00007f73e07edccc: nop
  0x00007f73e07edccd: mov    0x428(%r15),%rax
  0x00007f73e07edcd4: movabs $0x0,%r10
  0x00007f73e07edcde: mov    %r10,0x428(%r15)
  0x00007f73e07edce5: movabs $0x0,%r10
  0x00007f73e07edcef: mov    %r10,0x430(%r15)
  0x00007f73e07edcf6: add    $0xc0,%rsp
  0x00007f73e07edcfd: pop    %rbp
  0x00007f73e07edcfe: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07edd03: hlt    
  0x00007f73e07edd04: hlt    
  0x00007f73e07edd05: hlt    
  0x00007f73e07edd06: hlt    
  0x00007f73e07edd07: hlt    
  0x00007f73e07edd08: hlt    
  0x00007f73e07edd09: hlt    
  0x00007f73e07edd0a: hlt    
  0x00007f73e07edd0b: hlt    
  0x00007f73e07edd0c: hlt    
  0x00007f73e07edd0d: hlt    
  0x00007f73e07edd0e: hlt    
  0x00007f73e07edd0f: hlt    
  0x00007f73e07edd10: hlt    
  0x00007f73e07edd11: hlt    
  0x00007f73e07edd12: hlt    
  0x00007f73e07edd13: hlt    
  0x00007f73e07edd14: hlt    
  0x00007f73e07edd15: hlt    
  0x00007f73e07edd16: hlt    
  0x00007f73e07edd17: hlt    
  0x00007f73e07edd18: hlt    
  0x00007f73e07edd19: hlt    
  0x00007f73e07edd1a: hlt    
  0x00007f73e07edd1b: hlt    
  0x00007f73e07edd1c: hlt    
  0x00007f73e07edd1d: hlt    
  0x00007f73e07edd1e: hlt    
  0x00007f73e07edd1f: hlt    
[Stub Code]
  0x00007f73e07edd20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07edd25: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07edd2f: jmpq   0x00007f73e07edd2f  ;   {runtime_call}
  0x00007f73e07edd34: nop
  0x00007f73e07edd35: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07edd3f: jmpq   0x00007f73e07edd3f  ;   {runtime_call}
  0x00007f73e07edd44: nop
  0x00007f73e07edd45: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07edd4f: jmpq   0x00007f73e07edd4f  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07edd54: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07edd59: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07edd63: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07edd67: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07edd6c: hlt    
[Deopt Handler Code]
  0x00007f73e07edd6d: movabs $0x7f73e07edd6d,%r10  ;   {section_word}
  0x00007f73e07edd77: push   %r10
  0x00007f73e07edd79: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07edd7e: hlt    
  0x00007f73e07edd7f: hlt    

ImmutableOopMap{[160]=Oop [152]=Oop }pc offsets: 1044 
ImmutableOopMap{[160]=Oop }pc offsets: 1564 1705 
ImmutableOopMap{[160]=Oop [168]=Oop }pc offsets: 1868 
ImmutableOopMap{rsi=Oop [160]=Oop }pc offsets: 1909 1919 1947 1957 1985 2018 2051 
ImmutableOopMap{rsi=Oop [160]=Oop rbx=Oop }pc offsets: 2084 2094 2108 2136 2169 2202 2212 
ImmutableOopMap{[160]=Oop }pc offsets: 2240 2265 2278 ----------------------------------------------------------------------
java/lang/Class.isArray()Z  [0x00007f73e7d19240, 0x00007f73e7d19430]  496 bytes
[Entry Point]
  # {method} {0x000000080035d680} 'isArray' '()Z' in 'java/lang/Class'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d19240: mov    0x8(%rsi),%r10d
  0x00007f73e7d19244: shl    $0x3,%r10
  0x00007f73e7d19248: movabs $0x800000000,%r12
  0x00007f73e7d19252: add    %r12,%r10
  0x00007f73e7d19255: xor    %r12,%r12
  0x00007f73e7d19258: cmp    %r10,%rax
  0x00007f73e7d1925b: je     0x00007f73e7d19268
  0x00007f73e7d19261: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d19266: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d19268: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d1926f: push   %rbp
  0x00007f73e7d19270: mov    %rsp,%rbp
  0x00007f73e7d19273: sub    $0x40,%rsp
  0x00007f73e7d19277: mov    %rsi,(%rsp)
  0x00007f73e7d1927b: cmp    $0x0,%rsi
  0x00007f73e7d1927f: lea    (%rsp),%rsi
  0x00007f73e7d19283: cmove  (%rsp),%rsi        ; ImmutableOopMap{[0]=Oop }
  0x00007f73e7d19288: vzeroupper 
  0x00007f73e7d1928b: movabs $0x7f73e7d19288,%r10  ;   {internal_word}
  0x00007f73e7d19295: mov    %r10,0x330(%r15)
  0x00007f73e7d1929c: mov    %rsp,0x328(%r15)
  0x00007f73e7d192a3: cmpb   $0x0,0x16e44f8d(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d192aa: je     0x00007f73e7d192e2
  0x00007f73e7d192b0: push   %rsi
  0x00007f73e7d192b1: movabs $0x80035d680,%rsi  ;   {metadata({method} {0x000000080035d680} 'isArray' '()Z' in 'java/lang/Class')}
  0x00007f73e7d192bb: mov    %r15,%rdi
  0x00007f73e7d192be: test   $0xf,%esp
  0x00007f73e7d192c4: je     0x00007f73e7d192dc
  0x00007f73e7d192ca: sub    $0x8,%rsp
  0x00007f73e7d192ce: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d192d3: add    $0x8,%rsp
  0x00007f73e7d192d7: jmpq   0x00007f73e7d192e1
  0x00007f73e7d192dc: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d192e1: pop    %rsi
  0x00007f73e7d192e2: lea    0x348(%r15),%rdi
  0x00007f73e7d192e9: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d192f4: callq  0x00007f73fe035fc0  ;   {runtime_call JVM_IsArrayClass}
  0x00007f73e7d192f9: vzeroupper 
  0x00007f73e7d192fc: and    $0xff,%eax
  0x00007f73e7d19302: setne  %al
  0x00007f73e7d19305: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d19310: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d19316: testb  $0x8,0x108(%r15)
  0x00007f73e7d1931e: jne    0x00007f73e7d19335
  0x00007f73e7d19324: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d1932f: je     0x00007f73e7d19359
  0x00007f73e7d19335: vzeroupper 
  0x00007f73e7d19338: mov    %rax,-0x8(%rbp)
  0x00007f73e7d1933c: mov    %r15,%rdi
  0x00007f73e7d1933f: mov    %rsp,%r12
  0x00007f73e7d19342: sub    $0x0,%rsp
  0x00007f73e7d19346: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d1934a: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d1934f: mov    %r12,%rsp
  0x00007f73e7d19352: xor    %r12,%r12
  0x00007f73e7d19355: mov    -0x8(%rbp),%rax
  0x00007f73e7d19359: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d19364: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d1936f: je     0x00007f73e7d19405
  0x00007f73e7d19375: cmpb   $0x0,0x16e44ebb(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d1937c: je     0x00007f73e7d193ba
  0x00007f73e7d19382: mov    %rax,-0x8(%rbp)
  0x00007f73e7d19386: movabs $0x80035d680,%rsi  ;   {metadata({method} {0x000000080035d680} 'isArray' '()Z' in 'java/lang/Class')}
  0x00007f73e7d19390: mov    %r15,%rdi
  0x00007f73e7d19393: test   $0xf,%esp
  0x00007f73e7d19399: je     0x00007f73e7d193b1
  0x00007f73e7d1939f: sub    $0x8,%rsp
  0x00007f73e7d193a3: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d193a8: add    $0x8,%rsp
  0x00007f73e7d193ac: jmpq   0x00007f73e7d193b6
  0x00007f73e7d193b1: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d193b6: mov    -0x8(%rbp),%rax
  0x00007f73e7d193ba: movabs $0x0,%r10
  0x00007f73e7d193c4: mov    %r10,0x328(%r15)
  0x00007f73e7d193cb: movabs $0x0,%r10
  0x00007f73e7d193d5: mov    %r10,0x330(%r15)
  0x00007f73e7d193dc: vzeroupper 
  0x00007f73e7d193df: mov    0xe0(%r15),%rcx
  0x00007f73e7d193e6: movl   $0x0,0x100(%rcx)
  0x00007f73e7d193f0: leaveq 
  0x00007f73e7d193f1: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d193f9: jne    0x00007f73e7d19400
  0x00007f73e7d193ff: retq   
  0x00007f73e7d19400: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d19405: vzeroupper 
  0x00007f73e7d19408: mov    %rax,-0x8(%rbp)
  0x00007f73e7d1940c: mov    %rsp,%r12
  0x00007f73e7d1940f: sub    $0x0,%rsp
  0x00007f73e7d19413: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d19417: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d1941c: mov    %r12,%rsp
  0x00007f73e7d1941f: xor    %r12,%r12
  0x00007f73e7d19422: mov    -0x8(%rbp),%rax
  0x00007f73e7d19426: jmpq   0x00007f73e7d19375
  0x00007f73e7d1942b: hlt    
  0x00007f73e7d1942c: hlt    
  0x00007f73e7d1942d: hlt    
  0x00007f73e7d1942e: hlt    
  0x00007f73e7d1942f: hlt    
Compiled method (c1)  100986  329       3       java.lang.StringLatin1::toLowerCase (180 bytes)
 total in heap  [0x00007f73e07ee510,0x00007f73e07efd80] = 6256
 relocation     [0x00007f73e07ee688,0x00007f73e07ee7b0] = 296
 main code      [0x00007f73e07ee7c0,0x00007f73e07ef440] = 3200
 stub code      [0x00007f73e07ef440,0x00007f73e07ef4f0] = 176
 metadata       [0x00007f73e07ef4f0,0x00007f73e07ef528] = 56
 scopes data    [0x00007f73e07ef528,0x00007f73e07ef888] = 864
 scopes pcs     [0x00007f73e07ef888,0x00007f73e07efd48] = 1216
 dependencies   [0x00007f73e07efd48,0x00007f73e07efd50] = 8
 nul chk table  [0x00007f73e07efd50,0x00007f73e07efd80] = 48
----------------------------------------------------------------------
java/lang/StringLatin1.toLowerCase(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;  [0x00007f73e07ee7c0, 0x00007f73e07ef4f0]  3376 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1'
  # parm0:    rsi:rsi   = 'java/lang/String'
  # parm1:    rdx:rdx   = '[B'
  # parm2:    rcx:rcx   = 'java/util/Locale'
  #           [sp+0xb0]  (sp of caller)
  0x00007f73e07ee7c0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07ee7c7: push   %rbp
  0x00007f73e07ee7c8: sub    $0xa0,%rsp
  0x00007f73e07ee7cf: mov    %rsi,0x70(%rsp)
  0x00007f73e07ee7d4: mov    %rdx,0x60(%rsp)
  0x00007f73e07ee7d9: mov    %rcx,0x68(%rsp)
  0x00007f73e07ee7de: movabs $0x7f73d3679990,%rdi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ee7e8: mov    0x104(%rdi),%ebx
  0x00007f73e07ee7ee: add    $0x8,%ebx
  0x00007f73e07ee7f1: mov    %ebx,0x104(%rdi)
  0x00007f73e07ee7f7: and    $0x1ff8,%ebx
  0x00007f73e07ee7fd: cmp    $0x0,%ebx
  0x00007f73e07ee800: je     0x00007f73e07ef219  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@0 (line 379)

  0x00007f73e07ee806: cmp    $0x0,%rcx
  0x00007f73e07ee80a: movabs $0x7f73d3679990,%rdi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ee814: movabs $0x150,%rbx
  0x00007f73e07ee81e: je     0x00007f73e07ee82e
  0x00007f73e07ee824: movabs $0x140,%rbx
  0x00007f73e07ee82e: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07ee832: lea    0x1(%rax),%rax
  0x00007f73e07ee836: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07ee83a: je     0x00007f73e07ef17a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@1 (line 379)

  0x00007f73e07ee840: mov    0xc(%rdx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@13 (line 383)
                                                ; implicit exception: dispatches to 0x00007f73e07ef23a
  0x00007f73e07ee843: mov    %edi,0x58(%rsp)
  0x00007f73e07ee847: mov    $0x0,%ebx
  0x00007f73e07ee84c: jmpq   0x00007f73e07eea19  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@18 (line 385)

  0x00007f73e07ee851: nopl   0x0(%rax)
  0x00007f73e07ee858: movslq %ebx,%rax
  0x00007f73e07ee85b: movsbl 0x10(%rdx,%rax,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@26 (line 386)

  0x00007f73e07ee860: and    $0xff,%eax
  0x00007f73e07ee866: movabs $0x7f73d3679990,%r8  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ee870: addq   $0x1,0x190(%r8)
  0x00007f73e07ee878: movabs $0x7f73d3540e90,%r8  ;   {metadata(method data for {method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07ee882: mov    0x104(%r8),%r9d
  0x00007f73e07ee889: add    $0x8,%r9d
  0x00007f73e07ee88d: mov    %r9d,0x104(%r8)
  0x00007f73e07ee894: and    $0x7ffff8,%r9d
  0x00007f73e07ee89b: cmp    $0x0,%r9d
  0x00007f73e07ee89f: je     0x00007f73e07ef23f
  0x00007f73e07ee8a5: movabs $0x7f73d3540e90,%r8  ;   {metadata(method data for {method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07ee8af: addq   $0x1,0x140(%r8)
  0x00007f73e07ee8b7: mov    %rax,%rsi          ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@37 (line 387)

  0x00007f73e07ee8ba: mov    %ebx,0x54(%rsp)
  0x00007f73e07ee8be: mov    %eax,0x50(%rsp)
  0x00007f73e07ee8c2: nopl   0x0(%rax,%rax,1)
  0x00007f73e07ee8c7: callq  0x00007f73e0269600  ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop }
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@37 (line 387)
                                                ;   {static_call}
  0x00007f73e07ee8cc: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007f73e07ef260
  0x00007f73e07ee8cf: mov    %rax,%rdx
  0x00007f73e07ee8d2: movabs $0x7f73d3540e90,%rsi  ;   {metadata(method data for {method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07ee8dc: mov    0x8(%rdx),%edx
  0x00007f73e07ee8df: shl    $0x3,%rdx
  0x00007f73e07ee8e3: movabs $0x800000000,%r12
  0x00007f73e07ee8ed: add    %r12,%rdx
  0x00007f73e07ee8f0: xor    %r12,%r12
  0x00007f73e07ee8f3: cmp    0x160(%rsi),%rdx
  0x00007f73e07ee8fa: jne    0x00007f73e07ee909
  0x00007f73e07ee8fc: addq   $0x1,0x168(%rsi)
  0x00007f73e07ee904: jmpq   0x00007f73e07ee96f
  0x00007f73e07ee909: cmp    0x170(%rsi),%rdx
  0x00007f73e07ee910: jne    0x00007f73e07ee91f
  0x00007f73e07ee912: addq   $0x1,0x178(%rsi)
  0x00007f73e07ee91a: jmpq   0x00007f73e07ee96f
  0x00007f73e07ee91f: cmpq   $0x0,0x160(%rsi)
  0x00007f73e07ee92a: jne    0x00007f73e07ee943
  0x00007f73e07ee92c: mov    %rdx,0x160(%rsi)
  0x00007f73e07ee933: movq   $0x1,0x168(%rsi)
  0x00007f73e07ee93e: jmpq   0x00007f73e07ee96f
  0x00007f73e07ee943: cmpq   $0x0,0x170(%rsi)
  0x00007f73e07ee94e: jne    0x00007f73e07ee967
  0x00007f73e07ee950: mov    %rdx,0x170(%rsi)
  0x00007f73e07ee957: movq   $0x1,0x178(%rsi)
  0x00007f73e07ee962: jmpq   0x00007f73e07ee96f
  0x00007f73e07ee967: addq   $0x1,0x150(%rsi)
  0x00007f73e07ee96f: mov    0x50(%rsp),%edx
  0x00007f73e07ee973: mov    %rax,%rsi          ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@37 (line 387)

  0x00007f73e07ee976: nopl   0x0(%rax)
  0x00007f73e07ee97d: movabs $0xffffffffffffffff,%rax
  0x00007f73e07ee987: callq  0x00007f73e0269380  ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop }
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@37 (line 387)
                                                ;   {virtual_call}
  0x00007f73e07ee98c: mov    0x50(%rsp),%ebx
  0x00007f73e07ee990: cmp    %eax,%ebx
  0x00007f73e07ee992: movabs $0x7f73d3679990,%rbx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ee99c: movabs $0x1b0,%rdx
  0x00007f73e07ee9a6: jne    0x00007f73e07ee9b6
  0x00007f73e07ee9ac: movabs $0x1a0,%rdx
  0x00007f73e07ee9b6: mov    (%rbx,%rdx,1),%rsi
  0x00007f73e07ee9ba: lea    0x1(%rsi),%rsi
  0x00007f73e07ee9be: mov    %rsi,(%rbx,%rdx,1)
  0x00007f73e07ee9c2: mov    0x54(%rsp),%ebx
  0x00007f73e07ee9c6: jne    0x00007f73e07eea56  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@40 (line 387)

  0x00007f73e07ee9cc: inc    %ebx
  0x00007f73e07ee9ce: movabs $0x7f73d3679990,%rdx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ee9d8: mov    0x108(%rdx),%esi
  0x00007f73e07ee9de: add    $0x8,%esi
  0x00007f73e07ee9e1: mov    %esi,0x108(%rdx)
  0x00007f73e07ee9e7: and    $0xfff8,%esi
  0x00007f73e07ee9ed: cmp    $0x0,%esi
  0x00007f73e07ee9f0: je     0x00007f73e07ef265  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@49 (line 385)

  0x00007f73e07ee9f6: mov    0x108(%r15),%r10   ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@49 (line 385)

  0x00007f73e07ee9fd: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07eea00: movabs $0x7f73d3679990,%rdx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eea0a: incl   0x1d8(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@49 (line 385)

  0x00007f73e07eea10: mov    0x58(%rsp),%edi
  0x00007f73e07eea14: mov    0x60(%rsp),%rdx
  0x00007f73e07eea19: cmp    %edi,%ebx
  0x00007f73e07eea1b: movabs $0x7f73d3679990,%rax  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eea25: movabs $0x170,%r8
  0x00007f73e07eea2f: jge    0x00007f73e07eea3f
  0x00007f73e07eea35: movabs $0x180,%r8
  0x00007f73e07eea3f: mov    (%rax,%r8,1),%r9
  0x00007f73e07eea43: lea    0x1(%r9),%r9
  0x00007f73e07eea47: mov    %r9,(%rax,%r8,1)
  0x00007f73e07eea4b: jge    0x00007f73e07eea66
  0x00007f73e07eea51: jmpq   0x00007f73e07ee858  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@21 (line 385)

  0x00007f73e07eea56: movabs $0x7f73d3679990,%rdx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eea60: incl   0x1c0(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@43 (line 388)

  0x00007f73e07eea66: cmp    0x58(%rsp),%ebx
  0x00007f73e07eea6a: movabs $0x7f73d3679990,%rdx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eea74: movabs $0x200,%rsi
  0x00007f73e07eea7e: je     0x00007f73e07eea8e
  0x00007f73e07eea84: movabs $0x1f0,%rsi
  0x00007f73e07eea8e: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07eea92: lea    0x1(%rdi),%rdi
  0x00007f73e07eea96: mov    %rdi,(%rdx,%rsi,1)
  0x00007f73e07eea9a: je     0x00007f73e07ef15f  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@55 (line 391)

  0x00007f73e07eeaa0: mov    0x68(%rsp),%rcx
  0x00007f73e07eeaa5: cmp    (%rcx),%rax        ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@61 (line 393)
                                                ; implicit exception: dispatches to 0x00007f73e07ef286
  0x00007f73e07eeaa8: mov    %rcx,%rdx
  0x00007f73e07eeaab: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eeab5: addq   $0x1,0x210(%rsi)
  0x00007f73e07eeabd: movabs $0x7f73d3679d40,%rdx  ;   {metadata(method data for {method} {0x000000080028c0b8} 'getLanguage' '()Ljava/lang/String;' in 'java/util/Locale')}
  0x00007f73e07eeac7: mov    0x104(%rdx),%esi
  0x00007f73e07eeacd: add    $0x8,%esi
  0x00007f73e07eead0: mov    %esi,0x104(%rdx)
  0x00007f73e07eead6: and    $0x7ffff8,%esi
  0x00007f73e07eeadc: cmp    $0x0,%esi
  0x00007f73e07eeadf: je     0x00007f73e07ef28b
  0x00007f73e07eeae5: mov    0x10(%rcx),%edx    ;*getfield baseLocale {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Locale::getLanguage@1 (line 1184)
                                                ; - java.lang.StringLatin1::toLowerCase@61 (line 393)

  0x00007f73e07eeae8: cmp    (%rdx),%rax        ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Locale::getLanguage@4 (line 1184)
                                                ; - java.lang.StringLatin1::toLowerCase@61 (line 393)
                                                ; implicit exception: dispatches to 0x00007f73e07ef2ac
  0x00007f73e07eeaeb: mov    %rdx,%rsi
  0x00007f73e07eeaee: movabs $0x7f73d3679d40,%rdi  ;   {metadata(method data for {method} {0x000000080028c0b8} 'getLanguage' '()Ljava/lang/String;' in 'java/util/Locale')}
  0x00007f73e07eeaf8: addq   $0x1,0x140(%rdi)
  0x00007f73e07eeb00: mov    0x10(%rdx),%edx    ;*getfield language {reexecute=0 rethrow=0 return_oop=0}
                                                ; - sun.util.locale.BaseLocale::getLanguage@1 (line 95)
                                                ; - java.util.Locale::getLanguage@4 (line 1184)
                                                ; - java.lang.StringLatin1::toLowerCase@61 (line 393)

  0x00007f73e07eeb03: movabs $0xfff08810,%r10   ;   {oop("tr"{0x00000000fff08810})}
  0x00007f73e07eeb0d: cmp    %r10,%rdx
  0x00007f73e07eeb10: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eeb1a: movabs $0x248,%rdi
  0x00007f73e07eeb24: je     0x00007f73e07eeb34
  0x00007f73e07eeb2a: movabs $0x258,%rdi
  0x00007f73e07eeb34: mov    (%rsi,%rdi,1),%rax
  0x00007f73e07eeb38: lea    0x1(%rax),%rax
  0x00007f73e07eeb3c: mov    %rax,(%rsi,%rdi,1)
  0x00007f73e07eeb40: je     0x00007f73e07ef11c  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@70 (line 394)

  0x00007f73e07eeb46: movabs $0xfff072e8,%r10   ;   {oop("az"{0x00000000fff072e8})}
  0x00007f73e07eeb50: cmp    %r10,%rdx
  0x00007f73e07eeb53: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eeb5d: movabs $0x268,%rdi
  0x00007f73e07eeb67: je     0x00007f73e07eeb77
  0x00007f73e07eeb6d: movabs $0x278,%rdi
  0x00007f73e07eeb77: mov    (%rsi,%rdi,1),%rax
  0x00007f73e07eeb7b: lea    0x1(%rax),%rax
  0x00007f73e07eeb7f: mov    %rax,(%rsi,%rdi,1)
  0x00007f73e07eeb83: je     0x00007f73e07ef11c  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@77 (line 394)

  0x00007f73e07eeb89: movabs $0xfff07db8,%r10   ;   {oop("lt"{0x00000000fff07db8})}
  0x00007f73e07eeb93: cmp    %r10,%rdx
  0x00007f73e07eeb96: movabs $0x7f73d3679990,%rdx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eeba0: movabs $0x298,%rsi
  0x00007f73e07eebaa: je     0x00007f73e07eebba
  0x00007f73e07eebb0: movabs $0x288,%rsi
  0x00007f73e07eebba: mov    (%rdx,%rsi,1),%rdi
  0x00007f73e07eebbe: lea    0x1(%rdi),%rdi
  0x00007f73e07eebc2: mov    %rdi,(%rdx,%rsi,1)
  0x00007f73e07eebc6: je     0x00007f73e07ef11c  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@84 (line 394)

  0x00007f73e07eebcc: mov    %rbx,%r11
  0x00007f73e07eebcf: mov    0x58(%rsp),%ebx
  0x00007f73e07eebd3: movabs $0x8003b78a0,%rdx  ;   {metadata({type array byte})}
  0x00007f73e07eebdd: movslq %ebx,%rbx
  0x00007f73e07eebe0: mov    %rbx,%rdi
  0x00007f73e07eebe3: cmp    $0xffffff,%rbx
  0x00007f73e07eebea: ja     0x00007f73e07ef2b1
  0x00007f73e07eebf0: movabs $0x17,%rsi
  0x00007f73e07eebfa: lea    (%rsi,%rbx,1),%rsi
  0x00007f73e07eebfe: and    $0xfffffffffffffff8,%rsi
  0x00007f73e07eec02: mov    0x118(%r15),%rax
  0x00007f73e07eec09: lea    (%rax,%rsi,1),%rsi
  0x00007f73e07eec0d: cmp    0x128(%r15),%rsi
  0x00007f73e07eec14: ja     0x00007f73e07ef2b1
  0x00007f73e07eec1a: mov    %rsi,0x118(%r15)
  0x00007f73e07eec21: sub    %rax,%rsi
  0x00007f73e07eec24: movq   $0x1,(%rax)
  0x00007f73e07eec2b: mov    %rdx,%rcx
  0x00007f73e07eec2e: movabs $0x800000000,%r12
  0x00007f73e07eec38: sub    %r12,%rcx
  0x00007f73e07eec3b: shr    $0x3,%rcx
  0x00007f73e07eec3f: xor    %r12,%r12
  0x00007f73e07eec42: mov    %ecx,0x8(%rax)
  0x00007f73e07eec45: mov    %ebx,0xc(%rax)
  0x00007f73e07eec48: sub    $0x10,%rsi
  0x00007f73e07eec4c: je     0x00007f73e07eec6c
  0x00007f73e07eec52: test   %rsi,%rsi
  0x00007f73e07eec55: je     0x00007f73e07eec6c
  0x00007f73e07eec5b: xor    %rbx,%rbx
  0x00007f73e07eec5e: shr    $0x3,%rsi
  0x00007f73e07eec62: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007f73e07eec67: dec    %rsi
  0x00007f73e07eec6a: jne    0x00007f73e07eec62  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@98 (line 397)

  0x00007f73e07eec6c: mov    %rax,0x78(%rsp)
  0x00007f73e07eec71: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eec7b: addq   $0x1,0x2b8(%rsi)
  0x00007f73e07eec83: mov    0x60(%rsp),%rsi
  0x00007f73e07eec88: mov    $0x0,%edx
  0x00007f73e07eec8d: mov    %rax,%rcx
  0x00007f73e07eec90: mov    $0x0,%r8d
  0x00007f73e07eec96: mov    %r11,%r9
  0x00007f73e07eec99: mov    %r11d,0x54(%rsp)
  0x00007f73e07eec9e: lea    (%rdx,%r9,1),%rdi
  0x00007f73e07eeca2: cmp    0xc(%rsi),%edi
  0x00007f73e07eeca5: ja     0x00007f73e07ef2bb
  0x00007f73e07eecab: lea    (%r8,%r9,1),%rdi
  0x00007f73e07eecaf: cmp    0xc(%rcx),%edi
  0x00007f73e07eecb2: ja     0x00007f73e07ef2bb
  0x00007f73e07eecb8: test   %r9d,%r9d
  0x00007f73e07eecbb: jl     0x00007f73e07ef2bb
  0x00007f73e07eecc1: movslq %edx,%rdx
  0x00007f73e07eecc4: movslq %r8d,%r8
  0x00007f73e07eecc7: lea    0x10(%rsi,%rdx,1),%rdi
  0x00007f73e07eeccc: lea    0x10(%rcx,%r8,1),%rsi
  0x00007f73e07eecd1: mov    %r9,%rdx
  0x00007f73e07eecd4: test   $0xf,%esp
  0x00007f73e07eecda: je     0x00007f73e07eecf2
  0x00007f73e07eece0: sub    $0x8,%rsp
  0x00007f73e07eece4: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x00007f73e07eece9: add    $0x8,%rsp
  0x00007f73e07eeced: jmpq   0x00007f73e07eecf7
  0x00007f73e07eecf2: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@108 (line 398)
                                                ;   {runtime_call StubRoutines (2)}
  0x00007f73e07eecf7: mov    0x54(%rsp),%ebx    ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@114 (line 400)

  0x00007f73e07eecfb: nopl   0x0(%rax,%rax,1)
  0x00007f73e07eed00: mov    0x58(%rsp),%edi
  0x00007f73e07eed04: mov    0x60(%rsp),%rdx
  0x00007f73e07eed09: cmp    %edi,%ebx
  0x00007f73e07eed0b: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eed15: movabs $0x2c8,%rcx
  0x00007f73e07eed1f: jge    0x00007f73e07eed2f
  0x00007f73e07eed25: movabs $0x2d8,%rcx
  0x00007f73e07eed2f: mov    (%rsi,%rcx,1),%r8
  0x00007f73e07eed33: lea    0x1(%r8),%r8
  0x00007f73e07eed37: mov    %r8,(%rsi,%rcx,1)
  0x00007f73e07eed3b: jge    0x00007f73e07ef007  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@118 (line 400)

  0x00007f73e07eed41: cmp    0xc(%rdx),%ebx
  0x00007f73e07eed44: jae    0x00007f73e07ef2c9
  0x00007f73e07eed4a: movslq %ebx,%rsi
  0x00007f73e07eed4d: movsbl 0x10(%rdx,%rsi,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@124 (line 401)

  0x00007f73e07eed52: movabs $0x7f73d3679990,%rcx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eed5c: addq   $0x1,0x2e8(%rcx)
  0x00007f73e07eed64: and    $0xff,%esi
  0x00007f73e07eed6a: movabs $0x7f73d3540e90,%rcx  ;   {metadata(method data for {method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07eed74: mov    0x104(%rcx),%r8d
  0x00007f73e07eed7b: add    $0x8,%r8d
  0x00007f73e07eed7f: mov    %r8d,0x104(%rcx)
  0x00007f73e07eed86: and    $0x7ffff8,%r8d
  0x00007f73e07eed8d: cmp    $0x0,%r8d
  0x00007f73e07eed91: je     0x00007f73e07ef2d7
  0x00007f73e07eed97: movabs $0x7f73d3540e90,%rcx  ;   {metadata(method data for {method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07eeda1: addq   $0x1,0x140(%rcx)
  0x00007f73e07eeda9: mov    %rsi,%rcx
  0x00007f73e07eedac: mov    %rcx,%rsi          ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@133 (line 402)

  0x00007f73e07eedaf: mov    %ebx,0x80(%rsp)
  0x00007f73e07eedb6: mov    %ecx,0x5c(%rsp)
  0x00007f73e07eedba: nopl   0x0(%rax,%rax,1)
  0x00007f73e07eedbf: callq  0x00007f73e0269600  ; ImmutableOopMap{[112]=Oop [104]=Oop [120]=Oop [96]=Oop }
                                                ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@1 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@133 (line 402)
                                                ;   {static_call}
  0x00007f73e07eedc4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00007f73e07ef2f8
  0x00007f73e07eedc7: mov    %rax,%rdx
  0x00007f73e07eedca: movabs $0x7f73d3540e90,%rsi  ;   {metadata(method data for {method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07eedd4: mov    0x8(%rdx),%edx
  0x00007f73e07eedd7: shl    $0x3,%rdx
  0x00007f73e07eeddb: movabs $0x800000000,%r12
  0x00007f73e07eede5: add    %r12,%rdx
  0x00007f73e07eede8: xor    %r12,%r12
  0x00007f73e07eedeb: cmp    0x160(%rsi),%rdx
  0x00007f73e07eedf2: jne    0x00007f73e07eee01
  0x00007f73e07eedf4: addq   $0x1,0x168(%rsi)
  0x00007f73e07eedfc: jmpq   0x00007f73e07eee67
  0x00007f73e07eee01: cmp    0x170(%rsi),%rdx
  0x00007f73e07eee08: jne    0x00007f73e07eee17
  0x00007f73e07eee0a: addq   $0x1,0x178(%rsi)
  0x00007f73e07eee12: jmpq   0x00007f73e07eee67
  0x00007f73e07eee17: cmpq   $0x0,0x160(%rsi)
  0x00007f73e07eee22: jne    0x00007f73e07eee3b
  0x00007f73e07eee24: mov    %rdx,0x160(%rsi)
  0x00007f73e07eee2b: movq   $0x1,0x168(%rsi)
  0x00007f73e07eee36: jmpq   0x00007f73e07eee67
  0x00007f73e07eee3b: cmpq   $0x0,0x170(%rsi)
  0x00007f73e07eee46: jne    0x00007f73e07eee5f
  0x00007f73e07eee48: mov    %rdx,0x170(%rsi)
  0x00007f73e07eee4f: movq   $0x1,0x178(%rsi)
  0x00007f73e07eee5a: jmpq   0x00007f73e07eee67
  0x00007f73e07eee5f: addq   $0x1,0x150(%rsi)
  0x00007f73e07eee67: mov    0x5c(%rsp),%edx
  0x00007f73e07eee6b: mov    %rax,%rsi          ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@133 (line 402)

  0x00007f73e07eee6e: nopl   0x0(%rax)
  0x00007f73e07eee75: movabs $0xffffffffffffffff,%rax
  0x00007f73e07eee7f: callq  0x00007f73e0269380  ; ImmutableOopMap{[112]=Oop [104]=Oop [120]=Oop [96]=Oop }
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@133 (line 402)
                                                ;   {virtual_call}
  0x00007f73e07eee84: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eee8e: addq   $0x1,0x2f8(%rsi)
  0x00007f73e07eee96: movabs $0x7f73d3530f40,%rsi  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07eeea0: mov    0x104(%rsi),%edx
  0x00007f73e07eeea6: add    $0x8,%edx
  0x00007f73e07eeea9: mov    %edx,0x104(%rsi)
  0x00007f73e07eeeaf: and    $0x7ffff8,%edx
  0x00007f73e07eeeb5: cmp    $0x0,%edx
  0x00007f73e07eeeb8: je     0x00007f73e07ef2fd
  0x00007f73e07eeebe: mov    %rax,%rsi
  0x00007f73e07eeec1: shr    $0x8,%esi
  0x00007f73e07eeec4: cmp    $0x0,%esi
  0x00007f73e07eeec7: movabs $0x7f73d3530f40,%rsi  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07eeed1: movabs $0x140,%rdx
  0x00007f73e07eeedb: jne    0x00007f73e07eeeeb
  0x00007f73e07eeee1: movabs $0x150,%rdx
  0x00007f73e07eeeeb: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07eeeef: lea    0x1(%rcx),%rcx
  0x00007f73e07eeef3: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07eeef7: jne    0x00007f73e07eef17  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4 (line 53)
                                                ; - java.lang.StringLatin1::toLowerCase@140 (line 403)

  0x00007f73e07eeefd: movabs $0x7f73d3530f40,%rsi  ;   {metadata(method data for {method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07eef07: incl   0x160(%rsi)
  0x00007f73e07eef0d: mov    $0x1,%esi
  0x00007f73e07eef12: jmpq   0x00007f73e07eef1c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8 (line 53)
                                                ; - java.lang.StringLatin1::toLowerCase@140 (line 403)

  0x00007f73e07eef17: mov    $0x0,%esi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12 (line 53)
                                                ; - java.lang.StringLatin1::toLowerCase@140 (line 403)

  0x00007f73e07eef1c: and    $0x1,%esi
  0x00007f73e07eef1f: cmp    $0x0,%esi
  0x00007f73e07eef22: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eef2c: movabs $0x318,%rdx
  0x00007f73e07eef36: je     0x00007f73e07eef46
  0x00007f73e07eef3c: movabs $0x308,%rdx
  0x00007f73e07eef46: mov    (%rsi,%rdx,1),%rcx
  0x00007f73e07eef4a: lea    0x1(%rcx),%rcx
  0x00007f73e07eef4e: mov    %rcx,(%rsi,%rdx,1)
  0x00007f73e07eef52: je     0x00007f73e07eefbf  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@143 (line 403)

  0x00007f73e07eef58: mov    0x80(%rsp),%ebx
  0x00007f73e07eef5f: mov    0x78(%rsp),%r8
  0x00007f73e07eef64: cmp    0xc(%r8),%ebx
  0x00007f73e07eef68: jae    0x00007f73e07ef31e
  0x00007f73e07eef6e: movslq %ebx,%rsi
  0x00007f73e07eef71: mov    %al,0x10(%r8,%rsi,1)  ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@162 (line 406)

  0x00007f73e07eef76: inc    %ebx
  0x00007f73e07eef78: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eef82: mov    0x108(%rsi),%edx
  0x00007f73e07eef88: add    $0x8,%edx
  0x00007f73e07eef8b: mov    %edx,0x108(%rsi)
  0x00007f73e07eef91: and    $0xfff8,%edx
  0x00007f73e07eef97: cmp    $0x0,%edx
  0x00007f73e07eef9a: je     0x00007f73e07ef32c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@166 (line 400)

  0x00007f73e07eefa0: mov    0x108(%r15),%r10   ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop r8=Oop [120]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@166 (line 400)

  0x00007f73e07eefa7: test   %eax,(%r10)        ;   {poll}
  0x00007f73e07eefaa: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eefb4: incl   0x338(%rsi)
  0x00007f73e07eefba: jmpq   0x00007f73e07eed00  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@166 (line 400)

  0x00007f73e07eefbf: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07eefc9: addq   $0x1,0x328(%rsi)
  0x00007f73e07eefd1: mov    0x70(%rsp),%rsi
  0x00007f73e07eefd6: mov    0x60(%rsp),%rdx
  0x00007f73e07eefdb: mov    0x54(%rsp),%ecx
  0x00007f73e07eefdf: mov    0x68(%rsp),%r8
  0x00007f73e07eefe4: mov    $0x0,%r9d          ;*invokestatic toLowerCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@151 (line 404)

  0x00007f73e07eefea: nopl   0x0(%rax,%rax,1)
  0x00007f73e07eefef: callq  0x00007f73e0269600  ; ImmutableOopMap{}
                                                ;*invokestatic toLowerCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@151 (line 404)
                                                ;   {static_call}
  0x00007f73e07eeff4: add    $0xa0,%rsp
  0x00007f73e07eeffb: pop    %rbp
  0x00007f73e07eeffc: mov    0x108(%r15),%r10
  0x00007f73e07ef003: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ef006: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@154 (line 404)

  0x00007f73e07ef007: mov    0x78(%rsp),%r8
  0x00007f73e07ef00c: movabs $0x800336890,%rdx  ;   {metadata('java/lang/String')}
  0x00007f73e07ef016: mov    0x118(%r15),%rax
  0x00007f73e07ef01d: lea    0x18(%rax),%rdi
  0x00007f73e07ef021: cmp    0x128(%r15),%rdi
  0x00007f73e07ef028: ja     0x00007f73e07ef34d
  0x00007f73e07ef02e: mov    %rdi,0x118(%r15)
  0x00007f73e07ef035: mov    0xb8(%rdx),%rcx
  0x00007f73e07ef03c: mov    %rcx,(%rax)
  0x00007f73e07ef03f: mov    %rdx,%rcx
  0x00007f73e07ef042: movabs $0x800000000,%r12
  0x00007f73e07ef04c: sub    %r12,%rcx
  0x00007f73e07ef04f: shr    $0x3,%rcx
  0x00007f73e07ef053: xor    %r12,%r12
  0x00007f73e07ef056: mov    %ecx,0x8(%rax)
  0x00007f73e07ef059: xor    %rcx,%rcx
  0x00007f73e07ef05c: mov    %ecx,0xc(%rax)
  0x00007f73e07ef05f: xor    %rcx,%rcx
  0x00007f73e07ef062: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@169 (line 408)

  0x00007f73e07ef066: mov    %rax,%rsi
  0x00007f73e07ef069: movabs $0x7f73d3679990,%rdx  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ef073: addq   $0x1,0x350(%rdx)
  0x00007f73e07ef07b: movabs $0x7f73d353ca80,%rsi  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07ef085: mov    0x104(%rsi),%edx
  0x00007f73e07ef08b: add    $0x8,%edx
  0x00007f73e07ef08e: mov    %edx,0x104(%rsi)
  0x00007f73e07ef094: and    $0x7ffff8,%edx
  0x00007f73e07ef09a: cmp    $0x0,%edx
  0x00007f73e07ef09d: je     0x00007f73e07ef35a
  0x00007f73e07ef0a3: mov    %rax,%rsi
  0x00007f73e07ef0a6: movabs $0x7f73d353ca80,%rdx  ;   {metadata(method data for {method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07ef0b0: addq   $0x1,0x140(%rdx)
  0x00007f73e07ef0b8: movabs $0x7f73d350be50,%rsi  ;   {metadata(method data for {method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07ef0c2: mov    0x104(%rsi),%edx
  0x00007f73e07ef0c8: add    $0x8,%edx
  0x00007f73e07ef0cb: mov    %edx,0x104(%rsi)
  0x00007f73e07ef0d1: and    $0x7ffff8,%edx
  0x00007f73e07ef0d7: cmp    $0x0,%edx
  0x00007f73e07ef0da: je     0x00007f73e07ef37b
  0x00007f73e07ef0e0: movsbl 0x30(%r15),%esi
  0x00007f73e07ef0e5: cmp    $0x0,%esi
  0x00007f73e07ef0e8: jne    0x00007f73e07ef39c
  0x00007f73e07ef0ee: mov    %r8,%r10
  0x00007f73e07ef0f1: mov    %r10d,0xc(%rax)
  0x00007f73e07ef0f5: mov    %rax,%rsi
  0x00007f73e07ef0f8: xor    %r8,%rsi
  0x00007f73e07ef0fb: shr    $0x14,%rsi
  0x00007f73e07ef0ff: cmp    $0x0,%rsi
  0x00007f73e07ef103: jne    0x00007f73e07ef3b7  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6 (line 3253)
                                                ; - java.lang.StringLatin1::toLowerCase@176 (line 408)

  0x00007f73e07ef109: add    $0xa0,%rsp
  0x00007f73e07ef110: pop    %rbp
  0x00007f73e07ef111: mov    0x108(%r15),%r10
  0x00007f73e07ef118: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ef11b: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@179 (line 408)

  0x00007f73e07ef11c: mov    %rcx,%r8
  0x00007f73e07ef11f: mov    0x60(%rsp),%rdx
  0x00007f73e07ef124: movabs $0x7f73d3679990,%rsi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ef12e: addq   $0x1,0x2a8(%rsi)
  0x00007f73e07ef136: mov    0x70(%rsp),%rsi
  0x00007f73e07ef13b: mov    %rbx,%rcx
  0x00007f73e07ef13e: mov    $0x1,%r9d          ;*invokestatic toLowerCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@92 (line 395)

  0x00007f73e07ef144: data16 xchg %ax,%ax
  0x00007f73e07ef147: callq  0x00007f73e0269600  ; ImmutableOopMap{}
                                                ;*invokestatic toLowerCaseEx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@92 (line 395)
                                                ;   {static_call}
  0x00007f73e07ef14c: add    $0xa0,%rsp
  0x00007f73e07ef153: pop    %rbp
  0x00007f73e07ef154: mov    0x108(%r15),%r10
  0x00007f73e07ef15b: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ef15e: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@95 (line 395)

  0x00007f73e07ef15f: mov    0x70(%rsp),%rsi
  0x00007f73e07ef164: mov    %rsi,%rax
  0x00007f73e07ef167: add    $0xa0,%rsp
  0x00007f73e07ef16e: pop    %rbp
  0x00007f73e07ef16f: mov    0x108(%r15),%r10
  0x00007f73e07ef176: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07ef179: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@59 (line 392)

  0x00007f73e07ef17a: nopw   0x0(%rax,%rax,1)
  0x00007f73e07ef180: jmpq   0x00007f73e07ef3de  ;   {no_reloc}
  0x00007f73e07ef185: add    %al,(%rax)
  0x00007f73e07ef187: add    %al,(%rax)
  0x00007f73e07ef189: add    %cl,-0x75(%rcx)
  0x00007f73e07ef18c: xchg   %ebx,(%rax)
  0x00007f73e07ef18e: add    %eax,(%rax)
  0x00007f73e07ef190: add    %cl,-0x73(%rax)
  0x00007f73e07ef193: js     0x00007f73e07ef1bd
  0x00007f73e07ef195: cmp    0x128(%r15),%rdi
  0x00007f73e07ef19c: ja     0x00007f73e07ef3e8
  0x00007f73e07ef1a2: mov    %rdi,0x118(%r15)
  0x00007f73e07ef1a9: mov    0xb8(%rdx),%rcx
  0x00007f73e07ef1b0: mov    %rcx,(%rax)
  0x00007f73e07ef1b3: mov    %rdx,%rcx
  0x00007f73e07ef1b6: movabs $0x800000000,%r12
  0x00007f73e07ef1c0: sub    %r12,%rcx
  0x00007f73e07ef1c3: shr    $0x3,%rcx
  0x00007f73e07ef1c7: xor    %r12,%r12
  0x00007f73e07ef1ca: mov    %ecx,0x8(%rax)
  0x00007f73e07ef1cd: xor    %rcx,%rcx
  0x00007f73e07ef1d0: mov    %ecx,0xc(%rax)
  0x00007f73e07ef1d3: xor    %rcx,%rcx
  0x00007f73e07ef1d6: mov    %rcx,0x10(%rax)
  0x00007f73e07ef1da: mov    %rcx,0x18(%rax)
  0x00007f73e07ef1de: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@4 (line 380)

  0x00007f73e07ef1e2: mov    %rax,%rsi
  0x00007f73e07ef1e5: movabs $0x7f73d3679990,%rdi  ;   {metadata(method data for {method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ef1ef: addq   $0x1,0x160(%rdi)
  0x00007f73e07ef1f7: mov    %rax,%rsi          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@8 (line 380)

  0x00007f73e07ef1fa: mov    %rax,0x88(%rsp)
  0x00007f73e07ef202: nopl   0x0(%rax,%rax,1)
  0x00007f73e07ef207: callq  0x00007f73e0269100  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@8 (line 380)
                                                ;   {optimized virtual_call}
  0x00007f73e07ef20c: mov    0x88(%rsp),%rax
  0x00007f73e07ef214: jmpq   0x00007f73e07ef420
  0x00007f73e07ef219: movabs $0x80033ed98,%r10  ;   {metadata({method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ef223: mov    %r10,0x8(%rsp)
  0x00007f73e07ef228: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ef230: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [112]=Oop rdx=Oop [96]=Oop rcx=Oop [104]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::toLowerCase@-1 (line 379)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef235: jmpq   0x00007f73e07ee806
  0x00007f73e07ef23a: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [112]=Oop rdx=Oop [96]=Oop rcx=Oop [104]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@13 (line 383)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ef23f: movabs $0x800368860,%r10  ;   {metadata({method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07ef249: mov    %r10,0x8(%rsp)
  0x00007f73e07ef24e: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ef256: callq  0x00007f73e0334d80  ; ImmutableOopMap{rdx=Oop [96]=Oop [112]=Oop [104]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@37 (line 387)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef25b: jmpq   0x00007f73e07ee8a5
  0x00007f73e07ef260: callq  0x00007f73e03308a0  ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop rax=Oop }
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@37 (line 387)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ef265: movabs $0x80033ed98,%r10  ;   {metadata({method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ef26f: mov    %r10,0x8(%rsp)
  0x00007f73e07ef274: movq   $0x31,(%rsp)
  0x00007f73e07ef27c: callq  0x00007f73e0334d80  ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@49 (line 385)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef281: jmpq   0x00007f73e07ee9f6
  0x00007f73e07ef286: callq  0x00007f73e03308a0  ; ImmutableOopMap{[112]=Oop [96]=Oop rcx=Oop [104]=Oop }
                                                ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@61 (line 393)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ef28b: movabs $0x80028c0b8,%r10  ;   {metadata({method} {0x000000080028c0b8} 'getLanguage' '()Ljava/lang/String;' in 'java/util/Locale')}
  0x00007f73e07ef295: mov    %r10,0x8(%rsp)
  0x00007f73e07ef29a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ef2a2: callq  0x00007f73e0334d80  ; ImmutableOopMap{[112]=Oop [96]=Oop rcx=Oop [104]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Locale::getLanguage@-1 (line 1184)
                                                ; - java.lang.StringLatin1::toLowerCase@61 (line 393)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef2a7: jmpq   0x00007f73e07eeae5
  0x00007f73e07ef2ac: callq  0x00007f73e03308a0  ; ImmutableOopMap{[112]=Oop [96]=Oop rcx=Oop [104]=Oop rdx=Oop }
                                                ;*invokevirtual getLanguage {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Locale::getLanguage@4 (line 1184)
                                                ; - java.lang.StringLatin1::toLowerCase@61 (line 393)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ef2b1: callq  0x00007f73e0331680  ; ImmutableOopMap{[112]=Oop [96]=Oop [104]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@98 (line 397)
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x00007f73e07ef2b6: jmpq   0x00007f73e07eec6c
  0x00007f73e07ef2bb: nopl   0x0(%rax)
  0x00007f73e07ef2bf: callq  0x00007f73e0269600  ; ImmutableOopMap{[112]=Oop [96]=Oop [120]=Oop [104]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@108 (line 398)
                                                ;   {static_call}
  0x00007f73e07ef2c4: jmpq   0x00007f73e07eecf7
  0x00007f73e07ef2c9: mov    %rbx,(%rsp)
  0x00007f73e07ef2cd: mov    %rdx,0x8(%rsp)
  0x00007f73e07ef2d2: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{[112]=Oop [104]=Oop rdx=Oop [96]=Oop [120]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@124 (line 401)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07ef2d7: movabs $0x800368860,%r10  ;   {metadata({method} {0x0000000800368860} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00007f73e07ef2e1: mov    %r10,0x8(%rsp)
  0x00007f73e07ef2e6: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ef2ee: callq  0x00007f73e0334d80  ; ImmutableOopMap{[112]=Oop [104]=Oop rdx=Oop [96]=Oop [120]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@133 (line 402)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef2f3: jmpq   0x00007f73e07eed97
  0x00007f73e07ef2f8: callq  0x00007f73e03308a0  ; ImmutableOopMap{[112]=Oop [104]=Oop [120]=Oop [96]=Oop rax=Oop }
                                                ;*invokevirtual toLowerCase {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Character::toLowerCase@5 (line 9756)
                                                ; - java.lang.StringLatin1::toLowerCase@133 (line 402)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07ef2fd: movabs $0x80033f1b8,%r10  ;   {metadata({method} {0x000000080033f1b8} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x00007f73e07ef307: mov    %r10,0x8(%rsp)
  0x00007f73e07ef30c: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ef314: callq  0x00007f73e0334d80  ; ImmutableOopMap{[112]=Oop [104]=Oop [120]=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1 (line 53)
                                                ; - java.lang.StringLatin1::toLowerCase@140 (line 403)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef319: jmpq   0x00007f73e07eeebe
  0x00007f73e07ef31e: mov    %rbx,(%rsp)
  0x00007f73e07ef322: mov    %r8,0x8(%rsp)
  0x00007f73e07ef327: callq  0x00007f73e02a2ba0  ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop r8=Oop [120]=Oop }
                                                ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@162 (line 406)
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00007f73e07ef32c: movabs $0x80033ed98,%r10  ;   {metadata({method} {0x000000080033ed98} 'toLowerCase' '(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x00007f73e07ef336: mov    %r10,0x8(%rsp)
  0x00007f73e07ef33b: movq   $0xa6,(%rsp)
  0x00007f73e07ef343: callq  0x00007f73e0334d80  ; ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop r8=Oop [120]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@166 (line 400)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef348: jmpq   0x00007f73e07eefa0
  0x00007f73e07ef34d: mov    %rdx,%rdx
  0x00007f73e07ef350: callq  0x00007f73e0331080  ; ImmutableOopMap{r8=Oop [120]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@169 (line 408)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07ef355: jmpq   0x00007f73e07ef066
  0x00007f73e07ef35a: movabs $0x800338cb8,%r10  ;   {metadata({method} {0x0000000800338cb8} '<init>' '([BB)V' in 'java/lang/String')}
  0x00007f73e07ef364: mov    %r10,0x8(%rsp)
  0x00007f73e07ef369: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ef371: callq  0x00007f73e0334d80  ; ImmutableOopMap{r8=Oop [120]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 3252)
                                                ; - java.lang.StringLatin1::toLowerCase@176 (line 408)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef376: jmpq   0x00007f73e07ef0a3
  0x00007f73e07ef37b: movabs $0x800003318,%r10  ;   {metadata({method} {0x0000000800003318} '<init>' '()V' in 'java/lang/Object')}
  0x00007f73e07ef385: mov    %r10,0x8(%rsp)
  0x00007f73e07ef38a: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07ef392: callq  0x00007f73e0334d80  ; ImmutableOopMap{r8=Oop [120]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 50)
                                                ; - java.lang.String::<init>@1 (line 3252)
                                                ; - java.lang.StringLatin1::toLowerCase@176 (line 408)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07ef397: jmpq   0x00007f73e07ef0e0
  0x00007f73e07ef39c: mov    0xc(%rax),%esi
  0x00007f73e07ef39f: cmp    $0x0,%rsi
  0x00007f73e07ef3a3: je     0x00007f73e07ef0ee
  0x00007f73e07ef3a9: mov    %rsi,(%rsp)
  0x00007f73e07ef3ad: callq  0x00007f73e0335280  ;   {runtime_call g1_pre_barrier_slow}
  0x00007f73e07ef3b2: jmpq   0x00007f73e07ef0ee
  0x00007f73e07ef3b7: cmp    $0x0,%r8
  0x00007f73e07ef3bb: je     0x00007f73e07ef109
  0x00007f73e07ef3c1: mov    %rax,(%rsp)
  0x00007f73e07ef3c5: callq  0x00007f73e0335500  ;   {runtime_call g1_post_barrier_slow}
  0x00007f73e07ef3ca: jmpq   0x00007f73e07ef109
  0x00007f73e07ef3cf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007f73e07ef3d9: mov    $0xa050f00,%eax
  0x00007f73e07ef3de: callq  0x00007f73e0333e00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@4 (line 380)
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00007f73e07ef3e3: jmpq   0x00007f73e07ef180
  0x00007f73e07ef3e8: mov    %rdx,%rdx
  0x00007f73e07ef3eb: callq  0x00007f73e0331080  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::toLowerCase@4 (line 380)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f73e07ef3f0: jmpq   0x00007f73e07ef1e2
  0x00007f73e07ef3f5: nop
  0x00007f73e07ef3f6: nop
  0x00007f73e07ef3f7: mov    0x428(%r15),%rax
  0x00007f73e07ef3fe: movabs $0x0,%r10
  0x00007f73e07ef408: mov    %r10,0x428(%r15)
  0x00007f73e07ef40f: movabs $0x0,%r10
  0x00007f73e07ef419: mov    %r10,0x430(%r15)
  0x00007f73e07ef420: add    $0xa0,%rsp
  0x00007f73e07ef427: pop    %rbp
  0x00007f73e07ef428: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07ef42d: hlt    
  0x00007f73e07ef42e: hlt    
  0x00007f73e07ef42f: hlt    
  0x00007f73e07ef430: hlt    
  0x00007f73e07ef431: hlt    
  0x00007f73e07ef432: hlt    
  0x00007f73e07ef433: hlt    
  0x00007f73e07ef434: hlt    
  0x00007f73e07ef435: hlt    
  0x00007f73e07ef436: hlt    
  0x00007f73e07ef437: hlt    
  0x00007f73e07ef438: hlt    
  0x00007f73e07ef439: hlt    
  0x00007f73e07ef43a: hlt    
  0x00007f73e07ef43b: hlt    
  0x00007f73e07ef43c: hlt    
  0x00007f73e07ef43d: hlt    
  0x00007f73e07ef43e: hlt    
  0x00007f73e07ef43f: hlt    
[Stub Code]
  0x00007f73e07ef440: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07ef445: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef44f: jmpq   0x00007f73e07ef44f  ;   {runtime_call}
  0x00007f73e07ef454: nop
  0x00007f73e07ef455: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef45f: jmpq   0x00007f73e07ef45f  ;   {runtime_call}
  0x00007f73e07ef464: nop
  0x00007f73e07ef465: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef46f: jmpq   0x00007f73e07ef46f  ;   {runtime_call}
  0x00007f73e07ef474: nop
  0x00007f73e07ef475: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef47f: jmpq   0x00007f73e07ef47f  ;   {runtime_call}
  0x00007f73e07ef484: nop
  0x00007f73e07ef485: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef48f: jmpq   0x00007f73e07ef48f  ;   {runtime_call}
  0x00007f73e07ef494: nop
  0x00007f73e07ef495: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef49f: jmpq   0x00007f73e07ef49f  ;   {runtime_call}
  0x00007f73e07ef4a4: nop
  0x00007f73e07ef4a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef4af: jmpq   0x00007f73e07ef4af  ;   {runtime_call}
  0x00007f73e07ef4b4: nop
  0x00007f73e07ef4b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07ef4bf: jmpq   0x00007f73e07ef4bf  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07ef4c4: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07ef4c9: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07ef4d3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07ef4d7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07ef4dc: hlt    
[Deopt Handler Code]
  0x00007f73e07ef4dd: movabs $0x7f73e07ef4dd,%r10  ;   {section_word}
  0x00007f73e07ef4e7: push   %r10
  0x00007f73e07ef4e9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07ef4ee: hlt    
  0x00007f73e07ef4ef: hlt    

ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop }pc offsets: 268 460 573 
ImmutableOopMap{[112]=Oop [104]=Oop [120]=Oop [96]=Oop }pc offsets: 1540 1732 
ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop r8=Oop [120]=Oop }pc offsets: 2023 
ImmutableOopMap{}pc offsets: 2100 2444 
ImmutableOopMap{[136]=Oop }pc offsets: 2636 
ImmutableOopMap{rsi=Oop [112]=Oop rdx=Oop [96]=Oop rcx=Oop [104]=Oop }pc offsets: 2677 2687 
ImmutableOopMap{rdx=Oop [96]=Oop [112]=Oop [104]=Oop }pc offsets: 2715 
ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop rax=Oop }pc offsets: 2725 
ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop }pc offsets: 2753 
ImmutableOopMap{[112]=Oop [96]=Oop rcx=Oop [104]=Oop }pc offsets: 2763 2791 
ImmutableOopMap{[112]=Oop [96]=Oop rcx=Oop [104]=Oop rdx=Oop }pc offsets: 2801 
ImmutableOopMap{[112]=Oop [96]=Oop [104]=Oop }pc offsets: 2806 
ImmutableOopMap{[112]=Oop [96]=Oop [120]=Oop [104]=Oop }pc offsets: 2820 
ImmutableOopMap{[112]=Oop [104]=Oop rdx=Oop [96]=Oop [120]=Oop }pc offsets: 2839 2867 
ImmutableOopMap{[112]=Oop [104]=Oop [120]=Oop [96]=Oop rax=Oop }pc offsets: 2877 
ImmutableOopMap{[112]=Oop [104]=Oop [120]=Oop [96]=Oop }pc offsets: 2905 
ImmutableOopMap{[112]=Oop [104]=Oop [96]=Oop r8=Oop [120]=Oop }pc offsets: 2924 2952 
ImmutableOopMap{r8=Oop [120]=Oop }pc offsets: 2965 
ImmutableOopMap{r8=Oop [120]=Oop rax=Oop }pc offsets: 2998 3031 
ImmutableOopMap{}pc offsets: 3107 3120 Compiled method (c1)  106382  333       3       java.lang.AbstractStringBuilder::getCoder (15 bytes)
 total in heap  [0x00007f73e07efd90,0x00007f73e07f0138] = 936
 relocation     [0x00007f73e07eff08,0x00007f73e07eff30] = 40
 main code      [0x00007f73e07eff40,0x00007f73e07f0060] = 288
 stub code      [0x00007f73e07f0060,0x00007f73e07f0090] = 48
 metadata       [0x00007f73e07f0090,0x00007f73e07f0098] = 8
 scopes data    [0x00007f73e07f0098,0x00007f73e07f00c0] = 40
 scopes pcs     [0x00007f73e07f00c0,0x00007f73e07f0130] = 112
 dependencies   [0x00007f73e07f0130,0x00007f73e07f0138] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.getCoder()B  [0x00007f73e07eff40, 0x00007f73e07f0090]  336 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder'
  #           [sp+0x40]  (sp of caller)
  0x00007f73e07eff40: mov    0x8(%rsi),%r10d
  0x00007f73e07eff44: shl    $0x3,%r10
  0x00007f73e07eff48: movabs $0x800000000,%r12
  0x00007f73e07eff52: add    %r12,%r10
  0x00007f73e07eff55: xor    %r12,%r12
  0x00007f73e07eff58: cmp    %rax,%r10
  0x00007f73e07eff5b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07eff61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07eff6c: data16 data16 xchg %ax,%ax
  0x00007f73e07eff70: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07eff7b: data16 data16 xchg %ax,%ax
  0x00007f73e07eff7f: nop
[Verified Entry Point]
  0x00007f73e07eff80: mov    %eax,-0x14000(%rsp)
  0x00007f73e07eff87: push   %rbp
  0x00007f73e07eff88: sub    $0x30,%rsp
  0x00007f73e07eff8c: movabs $0x7f73d3540298,%rax  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07eff96: mov    0x104(%rax),%edi
  0x00007f73e07eff9c: add    $0x8,%edi
  0x00007f73e07eff9f: mov    %edi,0x104(%rax)
  0x00007f73e07effa5: and    $0x1ff8,%edi
  0x00007f73e07effab: cmp    $0x0,%edi
  0x00007f73e07effae: je     0x00007f73e07effee  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@0 (line 1620)

  0x00007f73e07effb4: movabs $0x7f73d3540298,%rax  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07effbe: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@3 (line 1620)

  0x00007f73e07effc4: movsbl 0x10(%rsi),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)

  0x00007f73e07effc8: movabs $0x7f73d3540298,%rsi  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07effd2: incl   0x160(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@10 (line 1620)

  0x00007f73e07effd8: shl    $0x18,%eax
  0x00007f73e07effdb: sar    $0x18,%eax
  0x00007f73e07effde: add    $0x30,%rsp
  0x00007f73e07effe2: pop    %rbp
  0x00007f73e07effe3: mov    0x108(%r15),%r10
  0x00007f73e07effea: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07effed: retq   
  0x00007f73e07effee: movabs $0x800384610,%r10  ;   {metadata({method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07efff8: mov    %r10,0x8(%rsp)
  0x00007f73e07efffd: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f0005: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::getCoder@-1 (line 1620)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f000a: jmp    0x00007f73e07effb4
  0x00007f73e07f000c: nop
  0x00007f73e07f000d: nop
  0x00007f73e07f000e: mov    0x428(%r15),%rax
  0x00007f73e07f0015: movabs $0x0,%r10
  0x00007f73e07f001f: mov    %r10,0x428(%r15)
  0x00007f73e07f0026: movabs $0x0,%r10
  0x00007f73e07f0030: mov    %r10,0x430(%r15)
  0x00007f73e07f0037: add    $0x30,%rsp
  0x00007f73e07f003b: pop    %rbp
  0x00007f73e07f003c: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07f0041: hlt    
  0x00007f73e07f0042: hlt    
  0x00007f73e07f0043: hlt    
  0x00007f73e07f0044: hlt    
  0x00007f73e07f0045: hlt    
  0x00007f73e07f0046: hlt    
  0x00007f73e07f0047: hlt    
  0x00007f73e07f0048: hlt    
  0x00007f73e07f0049: hlt    
  0x00007f73e07f004a: hlt    
  0x00007f73e07f004b: hlt    
  0x00007f73e07f004c: hlt    
  0x00007f73e07f004d: hlt    
  0x00007f73e07f004e: hlt    
  0x00007f73e07f004f: hlt    
  0x00007f73e07f0050: hlt    
  0x00007f73e07f0051: hlt    
  0x00007f73e07f0052: hlt    
  0x00007f73e07f0053: hlt    
  0x00007f73e07f0054: hlt    
  0x00007f73e07f0055: hlt    
  0x00007f73e07f0056: hlt    
  0x00007f73e07f0057: hlt    
  0x00007f73e07f0058: hlt    
  0x00007f73e07f0059: hlt    
  0x00007f73e07f005a: hlt    
  0x00007f73e07f005b: hlt    
  0x00007f73e07f005c: hlt    
  0x00007f73e07f005d: hlt    
  0x00007f73e07f005e: hlt    
  0x00007f73e07f005f: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e07f0060: callq  0x00007f73e0332400  ;   {no_reloc}
  0x00007f73e07f0065: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07f006f: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07f0073: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07f0078: hlt    
[Deopt Handler Code]
  0x00007f73e07f0079: movabs $0x7f73e07f0079,%r10  ;   {section_word}
  0x00007f73e07f0083: push   %r10
  0x00007f73e07f0085: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07f008a: hlt    
  0x00007f73e07f008b: hlt    
  0x00007f73e07f008c: hlt    
  0x00007f73e07f008d: hlt    
  0x00007f73e07f008e: hlt    
  0x00007f73e07f008f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 202 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.putObjectVolatile(Ljava/lang/Object;JLjava/lang/Object;)V  [0x00007f73e7d19a40, 0x00007f73e7d19c40]  512 bytes
[Entry Point]
  # {method} {0x0000000800379a88} 'putObjectVolatile' '(Ljava/lang/Object;JLjava/lang/Object;)V' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x00007f73e7d19a40: mov    0x8(%rsi),%r10d
  0x00007f73e7d19a44: shl    $0x3,%r10
  0x00007f73e7d19a48: movabs $0x800000000,%r12
  0x00007f73e7d19a52: add    %r12,%r10
  0x00007f73e7d19a55: xor    %r12,%r12
  0x00007f73e7d19a58: cmp    %r10,%rax
  0x00007f73e7d19a5b: je     0x00007f73e7d19a68
  0x00007f73e7d19a61: jmpq   0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d19a66: xchg   %ax,%ax
[Verified Entry Point]
  0x00007f73e7d19a68: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d19a6f: push   %rbp
  0x00007f73e7d19a70: mov    %rsp,%rbp
  0x00007f73e7d19a73: sub    $0x40,%rsp
  0x00007f73e7d19a77: mov    %r8,0x18(%rsp)
  0x00007f73e7d19a7c: cmp    $0x0,%r8
  0x00007f73e7d19a80: lea    0x18(%rsp),%r8
  0x00007f73e7d19a85: cmove  0x18(%rsp),%r8
  0x00007f73e7d19a8b: mov    %rdx,0x8(%rsp)
  0x00007f73e7d19a90: cmp    $0x0,%rdx
  0x00007f73e7d19a94: lea    0x8(%rsp),%rdx
  0x00007f73e7d19a99: cmove  0x8(%rsp),%rdx
  0x00007f73e7d19a9f: mov    %rsi,(%rsp)
  0x00007f73e7d19aa3: cmp    $0x0,%rsi
  0x00007f73e7d19aa7: lea    (%rsp),%rsi
  0x00007f73e7d19aab: cmove  (%rsp),%rsi        ; ImmutableOopMap{[24]=Oop [8]=Oop [0]=Oop }
  0x00007f73e7d19ab0: vzeroupper 
  0x00007f73e7d19ab3: movabs $0x7f73e7d19ab0,%r10  ;   {internal_word}
  0x00007f73e7d19abd: mov    %r10,0x330(%r15)
  0x00007f73e7d19ac4: mov    %rsp,0x328(%r15)
  0x00007f73e7d19acb: cmpb   $0x0,0x16e44765(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d19ad2: je     0x00007f73e7d19b12
  0x00007f73e7d19ad8: push   %rsi
  0x00007f73e7d19ad9: push   %rdx
  0x00007f73e7d19ada: push   %rcx
  0x00007f73e7d19adb: push   %r8
  0x00007f73e7d19add: movabs $0x800379a88,%rsi  ;   {metadata({method} {0x0000000800379a88} 'putObjectVolatile' '(Ljava/lang/Object;JLjava/lang/Object;)V' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d19ae7: mov    %r15,%rdi
  0x00007f73e7d19aea: test   $0xf,%esp
  0x00007f73e7d19af0: je     0x00007f73e7d19b08
  0x00007f73e7d19af6: sub    $0x8,%rsp
  0x00007f73e7d19afa: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d19aff: add    $0x8,%rsp
  0x00007f73e7d19b03: jmpq   0x00007f73e7d19b0d
  0x00007f73e7d19b08: callq  0x00007f73fe3a50b0  ;   {runtime_call}
  0x00007f73e7d19b0d: pop    %r8
  0x00007f73e7d19b0f: pop    %rcx
  0x00007f73e7d19b10: pop    %rdx
  0x00007f73e7d19b11: pop    %rsi
  0x00007f73e7d19b12: lea    0x348(%r15),%rdi
  0x00007f73e7d19b19: movl   $0x4,0x3c0(%r15)
  0x00007f73e7d19b24: callq  0x00007f73fe54f980  ;   {runtime_call}
  0x00007f73e7d19b29: vzeroupper 
  0x00007f73e7d19b2c: movl   $0x5,0x3c0(%r15)
  0x00007f73e7d19b37: lock addl $0x0,-0x40(%rsp)
  0x00007f73e7d19b3d: testb  $0x8,0x108(%r15)
  0x00007f73e7d19b45: jne    0x00007f73e7d19b5c
  0x00007f73e7d19b4b: cmpl   $0x0,0xd8(%r15)
  0x00007f73e7d19b56: je     0x00007f73e7d19b78
  0x00007f73e7d19b5c: vzeroupper 
  0x00007f73e7d19b5f: mov    %r15,%rdi
  0x00007f73e7d19b62: mov    %rsp,%r12
  0x00007f73e7d19b65: sub    $0x0,%rsp
  0x00007f73e7d19b69: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d19b6d: callq  0x00007f73fe520d40  ;   {runtime_call}
  0x00007f73e7d19b72: mov    %r12,%rsp
  0x00007f73e7d19b75: xor    %r12,%r12
  0x00007f73e7d19b78: movl   $0x8,0x3c0(%r15)
  0x00007f73e7d19b83: cmpl   $0x2,0x410(%r15)
  0x00007f73e7d19b8e: je     0x00007f73e7d19c1c
  0x00007f73e7d19b94: cmpb   $0x0,0x16e4469c(%rip)        # 0x00007f73feb5e237
                                                ;   {external_word}
  0x00007f73e7d19b9b: je     0x00007f73e7d19bd1
  0x00007f73e7d19ba1: movabs $0x800379a88,%rsi  ;   {metadata({method} {0x0000000800379a88} 'putObjectVolatile' '(Ljava/lang/Object;JLjava/lang/Object;)V' in 'jdk/internal/misc/Unsafe')}
  0x00007f73e7d19bab: mov    %r15,%rdi
  0x00007f73e7d19bae: test   $0xf,%esp
  0x00007f73e7d19bb4: je     0x00007f73e7d19bcc
  0x00007f73e7d19bba: sub    $0x8,%rsp
  0x00007f73e7d19bbe: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d19bc3: add    $0x8,%rsp
  0x00007f73e7d19bc7: jmpq   0x00007f73e7d19bd1
  0x00007f73e7d19bcc: callq  0x00007f73fe3a50c0  ;   {runtime_call}
  0x00007f73e7d19bd1: movabs $0x0,%r10
  0x00007f73e7d19bdb: mov    %r10,0x328(%r15)
  0x00007f73e7d19be2: movabs $0x0,%r10
  0x00007f73e7d19bec: mov    %r10,0x330(%r15)
  0x00007f73e7d19bf3: vzeroupper 
  0x00007f73e7d19bf6: mov    0xe0(%r15),%rcx
  0x00007f73e7d19bfd: movl   $0x0,0x100(%rcx)
  0x00007f73e7d19c07: leaveq 
  0x00007f73e7d19c08: cmpq   $0x0,0x8(%r15)
  0x00007f73e7d19c10: jne    0x00007f73e7d19c17
  0x00007f73e7d19c16: retq   
  0x00007f73e7d19c17: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x00007f73e7d19c1c: vzeroupper 
  0x00007f73e7d19c1f: mov    %rsp,%r12
  0x00007f73e7d19c22: sub    $0x0,%rsp
  0x00007f73e7d19c26: and    $0xfffffffffffffff0,%rsp
  0x00007f73e7d19c2a: callq  0x00007f73fe3a5890  ;   {runtime_call}
  0x00007f73e7d19c2f: mov    %r12,%rsp
  0x00007f73e7d19c32: xor    %r12,%r12
  0x00007f73e7d19c35: jmpq   0x00007f73e7d19b94
  0x00007f73e7d19c3a: hlt    
  0x00007f73e7d19c3b: hlt    
  0x00007f73e7d19c3c: hlt    
  0x00007f73e7d19c3d: hlt    
  0x00007f73e7d19c3e: hlt    
  0x00007f73e7d19c3f: hlt    
Compiled method (c2)  107534  355       4       java.util.zip.ZipUtils::LG (22 bytes)
 total in heap  [0x00007f73e7d19490,0x00007f73e7d19830] = 928
 relocation     [0x00007f73e7d19608,0x00007f73e7d19618] = 16
 main code      [0x00007f73e7d19620,0x00007f73e7d196e0] = 192
 stub code      [0x00007f73e7d196e0,0x00007f73e7d196f8] = 24
 metadata       [0x00007f73e7d196f8,0x00007f73e7d19708] = 16
 scopes data    [0x00007f73e7d19708,0x00007f73e7d19778] = 112
 scopes pcs     [0x00007f73e7d19778,0x00007f73e7d19818] = 160
 dependencies   [0x00007f73e7d19818,0x00007f73e7d19820] = 8
 nul chk table  [0x00007f73e7d19820,0x00007f73e7d19830] = 16
----------------------------------------------------------------------
java/util/zip/ZipUtils.LG([BI)J  [0x00007f73e7d19620, 0x00007f73e7d196f8]  216 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000800225778} 'LG' '([BI)J' in 'java/util/zip/ZipUtils'
  # parm0:    rsi:rsi   = '[B'
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007f73e7d19620: mov    %eax,-0x14000(%rsp)
  0x00007f73e7d19627: push   %rbp
  0x00007f73e7d19628: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.zip.ZipUtils::LG@-1 (line 214)

  0x00007f73e7d1962c: mov    0xc(%rsi),%r8d     ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ; implicit exception: dispatches to 0x00007f73e7d196bc
  0x00007f73e7d19630: cmp    %r8d,%edx
  0x00007f73e7d19633: jae    0x00007f73e7d19684
  0x00007f73e7d19635: movzbl 0x10(%rsi,%rdx,1),%r11d  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@6 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)

  0x00007f73e7d1963b: mov    %edx,%r9d
  0x00007f73e7d1963e: add    $0x3,%r9d
  0x00007f73e7d19642: cmp    %r8d,%r9d
  0x00007f73e7d19645: jae    0x00007f73e7d196a0
  0x00007f73e7d19647: movslq %edx,%r10
  0x00007f73e7d1964a: movzbl 0x11(%rsi,%r10,1),%r8d
  0x00007f73e7d19650: movzbl 0x12(%rsi,%r10,1),%ecx
  0x00007f73e7d19656: movzbl 0x13(%rsi,%r10,1),%r10d
  0x00007f73e7d1965c: shl    $0x8,%r8d
  0x00007f73e7d19660: or     %r11d,%r8d
  0x00007f73e7d19663: shl    $0x8,%r10d
  0x00007f73e7d19667: or     %ecx,%r10d
  0x00007f73e7d1966a: shl    $0x10,%r10d
  0x00007f73e7d1966e: or     %r10d,%r8d
  0x00007f73e7d19671: mov    %r8d,%eax          ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::LG@20 (line 214)

  0x00007f73e7d19674: add    $0x30,%rsp
  0x00007f73e7d19678: pop    %rbp
  0x00007f73e7d19679: mov    0x108(%r15),%r10
  0x00007f73e7d19680: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d19683: retq   
  0x00007f73e7d19684: mov    %rsi,0x8(%rsp)
  0x00007f73e7d19689: mov    %edx,0x4(%rsp)
  0x00007f73e7d1968d: mov    %rsi,0x10(%rsp)
  0x00007f73e7d19692: mov    %edx,0x18(%rsp)
  0x00007f73e7d19696: mov    $0xffffffe4,%esi
  0x00007f73e7d1969b: callq  0x00007f73e0269880  ; ImmutableOopMap{[8]=Oop [16]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d196a0: mov    %edx,%ebp
  0x00007f73e7d196a2: inc    %ebp               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@10 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)

  0x00007f73e7d196a4: mov    %edx,0x8(%rsp)
  0x00007f73e7d196a8: mov    %rsi,0x10(%rsp)
  0x00007f73e7d196ad: mov    %r11d,0xc(%rsp)
  0x00007f73e7d196b2: mov    $0xffffffe4,%esi
  0x00007f73e7d196b7: callq  0x00007f73e0269880  ; ImmutableOopMap{[16]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@11 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d196bc: mov    $0xfffffff6,%esi
  0x00007f73e7d196c1: mov    %edx,%ebp
  0x00007f73e7d196c3: callq  0x00007f73e0269880  ; ImmutableOopMap{}
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.zip.ZipUtils::SH@2 (line 210)
                                                ; - java.util.zip.ZipUtils::LG@2 (line 214)
                                                ;   {runtime_call UncommonTrapBlob}
  0x00007f73e7d196c8: hlt    
  0x00007f73e7d196c9: hlt    
  0x00007f73e7d196ca: hlt    
  0x00007f73e7d196cb: hlt    
  0x00007f73e7d196cc: hlt    
  0x00007f73e7d196cd: hlt    
  0x00007f73e7d196ce: hlt    
  0x00007f73e7d196cf: hlt    
  0x00007f73e7d196d0: hlt    
  0x00007f73e7d196d1: hlt    
  0x00007f73e7d196d2: hlt    
  0x00007f73e7d196d3: hlt    
  0x00007f73e7d196d4: hlt    
  0x00007f73e7d196d5: hlt    
  0x00007f73e7d196d6: hlt    
  0x00007f73e7d196d7: hlt    
  0x00007f73e7d196d8: hlt    
  0x00007f73e7d196d9: hlt    
  0x00007f73e7d196da: hlt    
  0x00007f73e7d196db: hlt    
  0x00007f73e7d196dc: hlt    
  0x00007f73e7d196dd: hlt    
  0x00007f73e7d196de: hlt    
  0x00007f73e7d196df: hlt    
[Exception Handler]
[Stub Code]
  0x00007f73e7d196e0: jmpq   0x00007f73e02a3500  ;   {no_reloc}
[Deopt Handler Code]
  0x00007f73e7d196e5: callq  0x00007f73e7d196ea
  0x00007f73e7d196ea: subq   $0x5,(%rsp)
  0x00007f73e7d196ef: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e7d196f4: hlt    
  0x00007f73e7d196f5: hlt    
  0x00007f73e7d196f6: hlt    
  0x00007f73e7d196f7: hlt    

ImmutableOopMap{[8]=Oop [16]=Oop }pc offsets: 128 
ImmutableOopMap{[16]=Oop }pc offsets: 156 
ImmutableOopMap{}pc offsets: 168 Compiled method (c1)  108125  339       3       java.lang.AbstractStringBuilder::append (45 bytes)
 total in heap  [0x00007f73e07f0190,0x00007f73e07f0d48] = 3000
 relocation     [0x00007f73e07f0308,0x00007f73e07f03a8] = 160
 main code      [0x00007f73e07f03c0,0x00007f73e07f0880] = 1216
 stub code      [0x00007f73e07f0880,0x00007f73e07f08f0] = 112
 metadata       [0x00007f73e07f08f0,0x00007f73e07f0918] = 40
 scopes data    [0x00007f73e07f0918,0x00007f73e07f0aa8] = 400
 scopes pcs     [0x00007f73e07f0aa8,0x00007f73e07f0d28] = 640
 dependencies   [0x00007f73e07f0d28,0x00007f73e07f0d30] = 8
 nul chk table  [0x00007f73e07f0d30,0x00007f73e07f0d48] = 24
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;  [0x00007f73e07f03c0, 0x00007f73e07f08f0]  1328 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x90]  (sp of caller)
  0x00007f73e07f03c0: mov    0x8(%rsi),%r10d
  0x00007f73e07f03c4: shl    $0x3,%r10
  0x00007f73e07f03c8: movabs $0x800000000,%r12
  0x00007f73e07f03d2: add    %r12,%r10
  0x00007f73e07f03d5: xor    %r12,%r12
  0x00007f73e07f03d8: cmp    %rax,%r10
  0x00007f73e07f03db: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07f03e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07f03ec: data16 data16 xchg %ax,%ax
  0x00007f73e07f03f0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07f03fb: data16 data16 xchg %ax,%ax
  0x00007f73e07f03ff: nop
[Verified Entry Point]
  0x00007f73e07f0400: mov    %eax,-0x14000(%rsp)
  0x00007f73e07f0407: push   %rbp
  0x00007f73e07f0408: sub    $0x80,%rsp
  0x00007f73e07f040f: mov    %rsi,0x58(%rsp)
  0x00007f73e07f0414: mov    %rdx,0x60(%rsp)
  0x00007f73e07f0419: movabs $0x7f73d353fd80,%rcx  ;   {metadata(method data for {method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0423: mov    0x104(%rcx),%edi
  0x00007f73e07f0429: add    $0x8,%edi
  0x00007f73e07f042c: mov    %edi,0x104(%rcx)
  0x00007f73e07f0432: and    $0x1ff8,%edi
  0x00007f73e07f0438: cmp    $0x0,%edi
  0x00007f73e07f043b: je     0x00007f73e07f0777  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 534)

  0x00007f73e07f0441: cmp    $0x0,%rdx
  0x00007f73e07f0445: movabs $0x7f73d353fd80,%rcx  ;   {metadata(method data for {method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f044f: movabs $0x150,%rdi
  0x00007f73e07f0459: je     0x00007f73e07f0469
  0x00007f73e07f045f: movabs $0x140,%rdi
  0x00007f73e07f0469: mov    (%rcx,%rdi,1),%rbx
  0x00007f73e07f046d: lea    0x1(%rbx),%rbx
  0x00007f73e07f0471: mov    %rbx,(%rcx,%rdi,1)
  0x00007f73e07f0475: je     0x00007f73e07f0743  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 534)

  0x00007f73e07f047b: cmp    (%rdx),%rax        ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; implicit exception: dispatches to 0x00007f73e07f0798
  0x00007f73e07f047e: mov    %rdx,%rcx
  0x00007f73e07f0481: movabs $0x7f73d353fd80,%rdi  ;   {metadata(method data for {method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f048b: addq   $0x1,0x198(%rdi)
  0x00007f73e07f0493: movabs $0x7f73d350ed08,%rcx  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07f049d: mov    0x104(%rcx),%edi
  0x00007f73e07f04a3: add    $0x8,%edi
  0x00007f73e07f04a6: mov    %edi,0x104(%rcx)
  0x00007f73e07f04ac: and    $0x7ffff8,%edi
  0x00007f73e07f04b2: cmp    $0x0,%edi
  0x00007f73e07f04b5: je     0x00007f73e07f079d
  0x00007f73e07f04bb: mov    0xc(%rdx),%ecx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007f73e07f04be: mov    0xc(%rcx),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ; implicit exception: dispatches to 0x00007f73e07f07be
  0x00007f73e07f04c1: mov    %rdx,%rcx
  0x00007f73e07f04c4: movabs $0x7f73d350ed08,%rbx  ;   {metadata(method data for {method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07f04ce: addq   $0x1,0x140(%rbx)
  0x00007f73e07f04d6: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f04e0: mov    0x104(%rcx),%ebx
  0x00007f73e07f04e6: add    $0x8,%ebx
  0x00007f73e07f04e9: mov    %ebx,0x104(%rcx)
  0x00007f73e07f04ef: and    $0x7ffff8,%ebx
  0x00007f73e07f04f5: cmp    $0x0,%ebx
  0x00007f73e07f04f8: je     0x00007f73e07f07c3
  0x00007f73e07f04fe: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f0508: incl   0x150(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007f73e07f050e: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007f73e07f0512: movabs $0x7f73d350d1b0,%rbx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f051c: incl   0x160(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)

  0x00007f73e07f0522: shl    $0x18,%ecx
  0x00007f73e07f0525: sar    $0x18,%ecx
  0x00007f73e07f0528: sar    %cl,%edi
  0x00007f73e07f052a: mov    0xc(%rsi),%ebx     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 538)

  0x00007f73e07f052d: mov    %rsi,%rax
  0x00007f73e07f0530: movabs $0x7f73d353fd80,%rcx  ;   {metadata(method data for {method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f053a: addq   $0x1,0x1d0(%rcx)
  0x00007f73e07f0542: add    %edi,%ebx
  0x00007f73e07f0544: mov    %rbx,%rdx
  0x00007f73e07f0547: mov    %rsi,%rbx
  0x00007f73e07f054a: mov    %rbx,%rsi          ;*invokevirtual ensureCapacityInternal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)

  0x00007f73e07f054d: mov    %edi,0x68(%rsp)
  0x00007f73e07f0551: nopw   0x0(%rax,%rax,1)
  0x00007f73e07f0557: callq  0x00007f73e0269100  ; ImmutableOopMap{[88]=Oop [96]=Oop }
                                                ;*invokevirtual ensureCapacityInternal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 538)
                                                ;   {optimized virtual_call}
  0x00007f73e07f055c: mov    0x58(%rsp),%rsi
  0x00007f73e07f0561: mov    0xc(%rsi),%edi     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 539)

  0x00007f73e07f0564: mov    %rsi,%rbx
  0x00007f73e07f0567: movabs $0x7f73d353fd80,%rax  ;   {metadata(method data for {method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0571: addq   $0x1,0x208(%rax)
  0x00007f73e07f0579: movabs $0x7f73d3540008,%rbx  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0583: mov    0x104(%rbx),%eax
  0x00007f73e07f0589: add    $0x8,%eax
  0x00007f73e07f058c: mov    %eax,0x104(%rbx)
  0x00007f73e07f0592: and    $0x7ffff8,%eax
  0x00007f73e07f0598: cmp    $0x0,%eax
  0x00007f73e07f059b: je     0x00007f73e07f07e4
  0x00007f73e07f05a1: mov    %rsi,%rbx
  0x00007f73e07f05a4: movabs $0x7f73d3540008,%rax  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f05ae: addq   $0x1,0x140(%rax)
  0x00007f73e07f05b6: movabs $0x7f73d3540298,%rbx  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f05c0: mov    0x104(%rbx),%eax
  0x00007f73e07f05c6: add    $0x8,%eax
  0x00007f73e07f05c9: mov    %eax,0x104(%rbx)
  0x00007f73e07f05cf: and    $0x7ffff8,%eax
  0x00007f73e07f05d5: cmp    $0x0,%eax
  0x00007f73e07f05d8: je     0x00007f73e07f0805
  0x00007f73e07f05de: movabs $0x7f73d3540298,%rbx  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f05e8: incl   0x150(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@3 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f05ee: movsbl 0x10(%rsi),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f05f2: movabs $0x7f73d3540298,%rax  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f05fc: incl   0x160(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@10 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f0602: shl    $0x18,%ebx
  0x00007f73e07f0605: sar    $0x18,%ebx
  0x00007f73e07f0608: mov    0x60(%rsp),%rdx
  0x00007f73e07f060d: movabs $0x7f73d3540008,%rax  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0617: addq   $0x1,0x178(%rax)
  0x00007f73e07f061f: movabs $0x7f73d350d1b0,%rax  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f0629: mov    0x104(%rax),%edx
  0x00007f73e07f062f: add    $0x8,%edx
  0x00007f73e07f0632: mov    %edx,0x104(%rax)
  0x00007f73e07f0638: and    $0x7ffff8,%edx
  0x00007f73e07f063e: cmp    $0x0,%edx
  0x00007f73e07f0641: je     0x00007f73e07f0826
  0x00007f73e07f0647: movabs $0x7f73d350d1b0,%rax  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f0651: incl   0x150(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f0657: mov    0x60(%rsp),%rdx
  0x00007f73e07f065c: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f0660: movabs $0x7f73d350d1b0,%rcx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f066a: incl   0x160(%rcx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f0670: shl    $0x18,%eax
  0x00007f73e07f0673: sar    $0x18,%eax
  0x00007f73e07f0676: cmp    %eax,%ebx
  0x00007f73e07f0678: movabs $0x7f73d3540008,%rbx  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0682: movabs $0x1c0,%rax
  0x00007f73e07f068c: jne    0x00007f73e07f069c
  0x00007f73e07f0692: movabs $0x1b0,%rax
  0x00007f73e07f069c: mov    (%rbx,%rax,1),%rcx
  0x00007f73e07f06a0: lea    0x1(%rcx),%rcx
  0x00007f73e07f06a4: mov    %rcx,(%rbx,%rax,1)
  0x00007f73e07f06a8: jne    0x00007f73e07f06b9  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f06ae: mov    %rdi,%rcx
  0x00007f73e07f06b1: mov    %rdx,%rdi
  0x00007f73e07f06b4: jmpq   0x00007f73e07f06f2  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@15 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f06b9: mov    %edi,0x6c(%rsp)
  0x00007f73e07f06bd: mov    %rsi,%rbx
  0x00007f73e07f06c0: movabs $0x7f73d3540008,%rax  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f06ca: addq   $0x1,0x1d0(%rax)
  0x00007f73e07f06d2: mov    %rsi,%rbx
  0x00007f73e07f06d5: mov    %rbx,%rsi          ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1665)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f06d8: nopl   0x0(%rax)
  0x00007f73e07f06df: callq  0x00007f73e0269100  ; ImmutableOopMap{[88]=Oop [96]=Oop }
                                                ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1665)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {optimized virtual_call}
  0x00007f73e07f06e4: mov    0x6c(%rsp),%ecx
  0x00007f73e07f06e8: mov    0x60(%rsp),%rdi
  0x00007f73e07f06ed: mov    0x58(%rsp),%rsi
  0x00007f73e07f06f2: mov    0x14(%rsi),%edx    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f06f5: movsbl 0x10(%rsi),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@22 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f06fa: mov    %rdi,%rbx
  0x00007f73e07f06fd: movabs $0x7f73d3540008,%rax  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0707: addq   $0x1,0x208(%rax)
  0x00007f73e07f070f: mov    %rdi,%rsi          ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)

  0x00007f73e07f0712: nopl   0x0(%rax,%rax,1)
  0x00007f73e07f0717: callq  0x00007f73e0269100  ; ImmutableOopMap{[88]=Oop }
                                                ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {optimized virtual_call}
  0x00007f73e07f071c: mov    0x68(%rsp),%edi
  0x00007f73e07f0720: mov    0x58(%rsp),%rsi
  0x00007f73e07f0725: mov    0xc(%rsi),%eax     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 540)

  0x00007f73e07f0728: add    %edi,%eax
  0x00007f73e07f072a: mov    %eax,0xc(%rsi)     ;*putfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 540)

  0x00007f73e07f072d: mov    %rsi,%rax
  0x00007f73e07f0730: add    $0x80,%rsp
  0x00007f73e07f0737: pop    %rbp
  0x00007f73e07f0738: mov    0x108(%r15),%r10
  0x00007f73e07f073f: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07f0742: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@44 (line 541)

  0x00007f73e07f0743: mov    %rsi,%rdi
  0x00007f73e07f0746: movabs $0x7f73d353fd80,%rbx  ;   {metadata(method data for {method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0750: addq   $0x1,0x160(%rbx)
  0x00007f73e07f0758: nopl   0x0(%rax)
  0x00007f73e07f075f: callq  0x00007f73e0269100  ; ImmutableOopMap{}
                                                ;*invokevirtual appendNull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 535)
                                                ;   {optimized virtual_call}
  0x00007f73e07f0764: add    $0x80,%rsp
  0x00007f73e07f076b: pop    %rbp
  0x00007f73e07f076c: mov    0x108(%r15),%r10
  0x00007f73e07f0773: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07f0776: retq   
  0x00007f73e07f0777: movabs $0x800382f60,%r10  ;   {metadata({method} {0x0000000800382f60} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0781: mov    %r10,0x8(%rsp)
  0x00007f73e07f0786: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f078e: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 534)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f0793: jmpq   0x00007f73e07f0441
  0x00007f73e07f0798: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*invokevirtual length {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07f079d: movabs $0x800339080,%r10  ;   {metadata({method} {0x0000000800339080} 'length' '()I' in 'java/lang/String')}
  0x00007f73e07f07a7: mov    %r10,0x8(%rsp)
  0x00007f73e07f07ac: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f07b4: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f07b9: jmpq   0x00007f73e07f04bb
  0x00007f73e07f07be: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07f07c3: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f07cd: mov    %r10,0x8(%rsp)
  0x00007f73e07f07d2: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f07da: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.String::length@6 (line 658)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 537)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f07df: jmpq   0x00007f73e07f04fe
  0x00007f73e07f07e4: movabs $0x800384718,%r10  ;   {metadata({method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f07ee: mov    %r10,0x8(%rsp)
  0x00007f73e07f07f3: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f07fb: callq  0x00007f73e0334d80  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::putStringAt@-1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f0800: jmpq   0x00007f73e07f05a1
  0x00007f73e07f0805: movabs $0x800384610,%r10  ;   {metadata({method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f080f: mov    %r10,0x8(%rsp)
  0x00007f73e07f0814: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f081c: callq  0x00007f73e0334d80  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::getCoder@-1 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f0821: jmpq   0x00007f73e07f05de
  0x00007f73e07f0826: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f0830: mov    %r10,0x8(%rsp)
  0x00007f73e07f0835: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f083d: callq  0x00007f73e0334d80  ; ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; - java.lang.AbstractStringBuilder::append@30 (line 539)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f0842: jmpq   0x00007f73e07f0647
  0x00007f73e07f0847: nop
  0x00007f73e07f0848: nop
  0x00007f73e07f0849: mov    0x428(%r15),%rax
  0x00007f73e07f0850: movabs $0x0,%r10
  0x00007f73e07f085a: mov    %r10,0x428(%r15)
  0x00007f73e07f0861: movabs $0x0,%r10
  0x00007f73e07f086b: mov    %r10,0x430(%r15)
  0x00007f73e07f0872: add    $0x80,%rsp
  0x00007f73e07f0879: pop    %rbp
  0x00007f73e07f087a: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07f087f: hlt    
[Stub Code]
  0x00007f73e07f0880: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07f0885: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07f088f: jmpq   0x00007f73e07f088f  ;   {runtime_call}
  0x00007f73e07f0894: nop
  0x00007f73e07f0895: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07f089f: jmpq   0x00007f73e07f089f  ;   {runtime_call}
  0x00007f73e07f08a4: nop
  0x00007f73e07f08a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07f08af: jmpq   0x00007f73e07f08af  ;   {runtime_call}
  0x00007f73e07f08b4: nop
  0x00007f73e07f08b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07f08bf: jmpq   0x00007f73e07f08bf  ;   {runtime_call}
[Exception Handler]
  0x00007f73e07f08c4: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07f08c9: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07f08d3: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07f08d7: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07f08dc: hlt    
[Deopt Handler Code]
  0x00007f73e07f08dd: movabs $0x7f73e07f08dd,%r10  ;   {section_word}
  0x00007f73e07f08e7: push   %r10
  0x00007f73e07f08e9: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07f08ee: hlt    
  0x00007f73e07f08ef: hlt    

ImmutableOopMap{[88]=Oop [96]=Oop }pc offsets: 412 804 
ImmutableOopMap{[88]=Oop }pc offsets: 860 
ImmutableOopMap{}pc offsets: 932 
ImmutableOopMap{rsi=Oop [88]=Oop rdx=Oop [96]=Oop }pc offsets: 979 989 1017 1027 1055 
ImmutableOopMap{[96]=Oop rsi=Oop [88]=Oop }pc offsets: 1088 1121 1154 Compiled method (c1) 725497563.382 ops/s
 110904  340 # Warmup Iteration   2:       3       java.lang.AbstractStringBuilder::putStringAt (29 bytes)
 total in heap  [0x00007f73e07f0d90,0x00007f73e07f14d0] = 1856
 relocation     [0x00007f73e07f0f08,0x00007f73e07f0f68] = 96
 main code      [0x00007f73e07f0f80,0x00007f73e07f1240] = 704
 stub code      [0x00007f73e07f1240,0x00007f73e07f1290] = 80
 metadata       [0x00007f73e07f1290,0x00007f73e07f12a8] = 24
 scopes data    [0x00007f73e07f12a8,0x00007f73e07f1358] = 176
 scopes pcs     [0x00007f73e07f1358,0x00007f73e07f14b8] = 352
 dependencies   [0x00007f73e07f14b8,0x00007f73e07f14c0] = 8
 nul chk table  [0x00007f73e07f14c0,0x00007f73e07f14d0] = 16
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.putStringAt(ILjava/lang/String;)V  [0x00007f73e07f0f80, 0x00007f73e07f1290]  784 bytes
[Entry Point]
[Constants]
  # {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/String'
  #           [sp+0x70]  (sp of caller)
  0x00007f73e07f0f80: mov    0x8(%rsi),%r10d
  0x00007f73e07f0f84: shl    $0x3,%r10
  0x00007f73e07f0f88: movabs $0x800000000,%r12
  0x00007f73e07f0f92: add    %r12,%r10
  0x00007f73e07f0f95: xor    %r12,%r12
  0x00007f73e07f0f98: cmp    %rax,%r10
  0x00007f73e07f0f9b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e07f0fa1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07f0fac: data16 data16 xchg %ax,%ax
  0x00007f73e07f0fb0: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f73e07f0fbb: data16 data16 xchg %ax,%ax
  0x00007f73e07f0fbf: nop
[Verified Entry Point]
  0x00007f73e07f0fc0: mov    %eax,-0x14000(%rsp)
  0x00007f73e07f0fc7: push   %rbp
  0x00007f73e07f0fc8: sub    $0x60,%rsp
  0x00007f73e07f0fcc: movabs $0x7f73d3540008,%rdi  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f0fd6: mov    0x104(%rdi),%ebx
  0x00007f73e07f0fdc: add    $0x8,%ebx
  0x00007f73e07f0fdf: mov    %ebx,0x104(%rdi)
  0x00007f73e07f0fe5: and    $0x1ff8,%ebx
  0x00007f73e07f0feb: cmp    $0x0,%ebx
  0x00007f73e07f0fee: je     0x00007f73e07f1184  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@0 (line 1664)

  0x00007f73e07f0ff4: mov    %rsi,%rdi
  0x00007f73e07f0ff7: movabs $0x7f73d3540008,%rbx  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f1001: addq   $0x1,0x140(%rbx)
  0x00007f73e07f1009: movabs $0x7f73d3540298,%rdi  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f1013: mov    0x104(%rdi),%ebx
  0x00007f73e07f1019: add    $0x8,%ebx
  0x00007f73e07f101c: mov    %ebx,0x104(%rdi)
  0x00007f73e07f1022: and    $0x7ffff8,%ebx
  0x00007f73e07f1028: cmp    $0x0,%ebx
  0x00007f73e07f102b: je     0x00007f73e07f11a5
  0x00007f73e07f1031: movabs $0x7f73d3540298,%rdi  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f103b: incl   0x150(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@3 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)

  0x00007f73e07f1041: movsbl 0x10(%rsi),%edi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@7 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)

  0x00007f73e07f1045: movabs $0x7f73d3540298,%rbx  ;   {metadata(method data for {method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f104f: incl   0x160(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::getCoder@10 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)

  0x00007f73e07f1055: shl    $0x18,%edi
  0x00007f73e07f1058: sar    $0x18,%edi
  0x00007f73e07f105b: cmp    (%rcx),%rax        ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ; implicit exception: dispatches to 0x00007f73e07f11c6
  0x00007f73e07f105e: mov    %rcx,%rbx
  0x00007f73e07f1061: movabs $0x7f73d3540008,%rax  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f106b: addq   $0x1,0x178(%rax)
  0x00007f73e07f1073: movabs $0x7f73d350d1b0,%rbx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f107d: mov    0x104(%rbx),%eax
  0x00007f73e07f1083: add    $0x8,%eax
  0x00007f73e07f1086: mov    %eax,0x104(%rbx)
  0x00007f73e07f108c: and    $0x7ffff8,%eax
  0x00007f73e07f1092: cmp    $0x0,%eax
  0x00007f73e07f1095: je     0x00007f73e07f11cb
  0x00007f73e07f109b: movabs $0x7f73d350d1b0,%rbx  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f10a5: incl   0x150(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)

  0x00007f73e07f10ab: movsbl 0x14(%rcx),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)

  0x00007f73e07f10af: movabs $0x7f73d350d1b0,%rax  ;   {metadata(method data for {method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f10b9: incl   0x160(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)

  0x00007f73e07f10bf: shl    $0x18,%ebx
  0x00007f73e07f10c2: sar    $0x18,%ebx
  0x00007f73e07f10c5: cmp    %ebx,%edi
  0x00007f73e07f10c7: movabs $0x7f73d3540008,%rdi  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f10d1: movabs $0x1c0,%rbx
  0x00007f73e07f10db: jne    0x00007f73e07f10eb
  0x00007f73e07f10e1: movabs $0x1b0,%rbx
  0x00007f73e07f10eb: mov    (%rdi,%rbx,1),%rax
  0x00007f73e07f10ef: lea    0x1(%rax),%rax
  0x00007f73e07f10f3: mov    %rax,(%rdi,%rbx,1)
  0x00007f73e07f10f7: jne    0x00007f73e07f1108  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@8 (line 1664)

  0x00007f73e07f10fd: mov    %rcx,%rdi
  0x00007f73e07f1100: mov    %rdx,%rcx
  0x00007f73e07f1103: jmpq   0x00007f73e07f114a  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@15 (line 1667)

  0x00007f73e07f1108: mov    %rcx,0x40(%rsp)
  0x00007f73e07f110d: mov    %edx,0x48(%rsp)
  0x00007f73e07f1111: mov    %rsi,%rdi
  0x00007f73e07f1114: movabs $0x7f73d3540008,%rbx  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f111e: addq   $0x1,0x1d0(%rbx)
  0x00007f73e07f1126: mov    %rsi,%rdi
  0x00007f73e07f1129: mov    %rdi,%rsi          ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1665)

  0x00007f73e07f112c: mov    %rdi,0x38(%rsp)
  0x00007f73e07f1131: nopw   0x0(%rax,%rax,1)
  0x00007f73e07f1137: callq  0x00007f73e0269100  ; ImmutableOopMap{[56]=Oop [64]=Oop }
                                                ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@12 (line 1665)
                                                ;   {optimized virtual_call}
  0x00007f73e07f113c: mov    0x40(%rsp),%rdi
  0x00007f73e07f1141: mov    0x48(%rsp),%ecx
  0x00007f73e07f1145: mov    0x38(%rsp),%rsi
  0x00007f73e07f114a: mov    0x14(%rsi),%edx    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@17 (line 1667)

  0x00007f73e07f114d: movsbl 0x10(%rsi),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@22 (line 1667)

  0x00007f73e07f1152: mov    %rdi,%rsi
  0x00007f73e07f1155: movabs $0x7f73d3540008,%rbx  ;   {metadata(method data for {method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f115f: addq   $0x1,0x208(%rbx)
  0x00007f73e07f1167: mov    %rdi,%rsi          ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)

  0x00007f73e07f116a: nopl   0x0(%rax,%rax,1)
  0x00007f73e07f116f: callq  0x00007f73e07f1255  ; ImmutableOopMap{}
                                                ;*invokevirtual getBytes {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@25 (line 1667)
                                                ;   {optimized virtual_call}
  0x00007f73e07f1174: add    $0x60,%rsp
  0x00007f73e07f1178: pop    %rbp
  0x00007f73e07f1179: mov    0x108(%r15),%r10
  0x00007f73e07f1180: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e07f1183: retq   
  0x00007f73e07f1184: movabs $0x800384718,%r10  ;   {metadata({method} {0x0000000800384718} 'putStringAt' '(ILjava/lang/String;)V' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f118e: mov    %r10,0x8(%rsp)
  0x00007f73e07f1193: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f119b: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::putStringAt@-1 (line 1664)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f11a0: jmpq   0x00007f73e07f0ff4
  0x00007f73e07f11a5: movabs $0x800384610,%r10  ;   {metadata({method} {0x0000000800384610} 'getCoder' '()B' in 'java/lang/AbstractStringBuilder')}
  0x00007f73e07f11af: mov    %r10,0x8(%rsp)
  0x00007f73e07f11b4: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f11bc: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::getCoder@-1 (line 1620)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@1 (line 1664)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f11c1: jmpq   0x00007f73e07f1031
  0x00007f73e07f11c6: callq  0x00007f73e03308a0  ; ImmutableOopMap{rsi=Oop rcx=Oop }
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00007f73e07f11cb: movabs $0x800339708,%r10  ;   {metadata({method} {0x0000000800339708} 'coder' '()B' in 'java/lang/String')}
  0x00007f73e07f11d5: mov    %r10,0x8(%rsp)
  0x00007f73e07f11da: movq   $0xffffffffffffffff,(%rsp)
  0x00007f73e07f11e2: callq  0x00007f73e0334d80  ; ImmutableOopMap{rsi=Oop rcx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1 (line 3258)
                                                ; - java.lang.AbstractStringBuilder::putStringAt@5 (line 1664)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f73e07f11e7: jmpq   0x00007f73e07f109b
  0x00007f73e07f11ec: nop
  0x00007f73e07f11ed: nop
  0x00007f73e07f11ee: mov    0x428(%r15),%rax
  0x00007f73e07f11f5: movabs $0x0,%r10
  0x00007f73e07f11ff: mov    %r10,0x428(%r15)
  0x00007f73e07f1206: movabs $0x0,%r10
  0x00007f73e07f1210: mov    %r10,0x430(%r15)
  0x00007f73e07f1217: add    $0x60,%rsp
  0x00007f73e07f121b: pop    %rbp
  0x00007f73e07f121c: jmpq   0x00007f73e02a3180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f73e07f1221: hlt    
  0x00007f73e07f1222: hlt    
  0x00007f73e07f1223: hlt    
  0x00007f73e07f1224: hlt    
  0x00007f73e07f1225: hlt    
  0x00007f73e07f1226: hlt    
  0x00007f73e07f1227: hlt    
  0x00007f73e07f1228: hlt    
  0x00007f73e07f1229: hlt    
  0x00007f73e07f122a: hlt    
  0x00007f73e07f122b: hlt    
  0x00007f73e07f122c: hlt    
  0x00007f73e07f122d: hlt    
  0x00007f73e07f122e: hlt    
  0x00007f73e07f122f: hlt    
  0x00007f73e07f1230: hlt    
  0x00007f73e07f1231: hlt    
  0x00007f73e07f1232: hlt    
  0x00007f73e07f1233: hlt    
  0x00007f73e07f1234: hlt    
  0x00007f73e07f1235: hlt    
  0x00007f73e07f1236: hlt    
  0x00007f73e07f1237: hlt    
  0x00007f73e07f1238: hlt    
  0x00007f73e07f1239: hlt    
  0x00007f73e07f123a: hlt    
  0x00007f73e07f123b: hlt    
  0x00007f73e07f123c: hlt    
  0x00007f73e07f123d: hlt    
  0x00007f73e07f123e: hlt    
  0x00007f73e07f123f: hlt    
[Stub Code]
  0x00007f73e07f1240: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00007f73e07f1245: movabs $0x0,%rbx          ;   {static_stub}
  0x00007f73e07f124f: jmpq   0x00007f73e07f124f  ;   {runtime_call}
  0x00007f73e07f1254: nop
  0x00007f73e07f1255: movabs $0x800339b80,%rbx  ;   {static_stub}
  0x00007f73e07f125f: jmpq   0x00007f73e026f36b  ;   {runtime_call I2C/C2I adapters}
[Exception Handler]
  0x00007f73e07f1264: callq  0x00007f73e0332400  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00007f73e07f1269: movabs $0x7f73fe613ffa,%rdi  ;   {external_word}
  0x00007f73e07f1273: and    $0xfffffffffffffff0,%rsp
  0x00007f73e07f1277: callq  0x00007f73fe1bf5c0  ;   {runtime_call}
  0x00007f73e07f127c: hlt    
[Deopt Handler Code]
  0x00007f73e07f127d: movabs $0x7f73e07f127d,%r10  ;   {section_word}
  0x00007f73e07f1287: push   %r10
  0x00007f73e07f1289: jmpq   0x00007f73e0269c20  ;   {runtime_call DeoptimizationBlob}
  0x00007f73e07f128e: hlt    
  0x00007f73e07f128f: hlt    

ImmutableOopMap{[56]=Oop [64]=Oop }pc offsets: 444 
ImmutableOopMap{}pc offsets: 500 
ImmutableOopMap{rsi=Oop rcx=Oop }pc offsets: 544 577 587 615 Compiled method (c2)  112589  371       4       com.example.benchmark_bytecode.BenchMark::integerValueOf (22 bytes)
 total in heap  [0x00007f73e7d19c90,0x00007f73e7d19ee8] = 600
 relocation     [0x00007f73e7d19e08,0x00007f73e7d19e18] = 16
 main code      [0x00007f73e7d19e20,0x00007f73e7d19e80] = 96
 stub code      [0x00007f73e7d19e80,0x00007f73e7d19e98] = 24
 oops           [0x00007f73e7d19e98,0x00007f73e7d19ea0] = 8
 metadata       [0x00007f73e7d19ea0,0x00007f73e7d19ea8] = 8
 scopes data    [0x00007f73e7d19ea8,0x00007f73e7d19eb0] = 8
 scopes pcs     [0x00007f73e7d19eb0,0x00007f73e7d19ee0] = 48
 dependencies   [0x00007f73e7d19ee0,0x00007f73e7d19ee8] = 8
----------------------------------------------------------------------
com/example/benchmark_bytecode/BenchMark.primitiveInteger()I  [0x00007f73e7d19e20, 0x00007f73e7d19e98]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f73d39aeff0} 'integerValueOf' '()I' in 'com/example/benchmark_bytecode/BenchMark'
  #           [sp+0x20]  (sp of caller)
  0x00007f73e7d19e20: mov    0x8(%rsi),%r10d
  0x00007f73e7d19e24: shl    $0x3,%r10
  0x00007f73e7d19e28: movabs $0x800000000,%r12
  0x00007f73e7d19e32: add    %r12,%r10
  0x00007f73e7d19e35: xor    %r12,%r12
  0x00007f73e7d19e38: cmp    %r10,%rax
  0x00007f73e7d19e3b: jne    0x00007f73e0268e80  ;   {runtime_call ic_miss_stub}
  0x00007f73e7d19e41: data16 xchg %ax,%ax
  0x00007f73e7d19e44: nopl   0x0(%rax,%rax,1)
  0x00007f73e7d19e4c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00007f73e7d19e50: sub    $0x18,%rsp
  0x00007f73e7d19e57: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - com.example.benchmark_bytecode.BenchMark::primitiveInteger@-1 (line 35)

  0x00007f73e7d19e5c: mov    $0x1e,%eax
  0x00007f73e7d19e61: add    $0x10,%rsp
  0x00007f73e7d19e65: pop    %rbp
  0x00007f73e7d19e66: mov    0x108(%r15),%r10
  0x00007f73e7d19e6d: test   %eax,(%r10)        ;   {poll_return}
  0x00007f73e7d19e70: retq   
  0x00007f73e7d19e71: hlt