com/example/benchmark_bytecode/BenchmarkKotlin.integerValueOf()I  [0x00007fb258e22840, 0x00007fb258e22a30]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007fb250b0cfb0} 'integerValueOf' '()I' in 'com/example/benchmark_bytecode/BenchmarkKotlin'
  #           [sp+0x80]  (sp of caller)
  0x00007fb258e22840: mov    0x8(%rsi),%r10d
  0x00007fb258e22844: shl    $0x3,%r10
  0x00007fb258e22848: movabs $0x800000000,%r12
  0x00007fb258e22852: add    %r12,%r10
  0x00007fb258e22855: xor    %r12,%r12
  0x00007fb258e22858: cmp    %rax,%r10
  0x00007fb258e2285b: jne    0x00007fb25889ce80  ;   {runtime_call ic_miss_stub}
  0x00007fb258e22861: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb258e2286c: data16 data16 xchg %ax,%ax
  0x00007fb258e22870: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007fb258e2287b: data16 data16 xchg %ax,%ax
  0x00007fb258e2287f: nop
[Verified Entry Point]
  0x00007fb258e22880: mov    %eax,-0x14000(%rsp)
  0x00007fb258e22887: push   %rbp
  0x00007fb258e22888: sub    $0x70,%rsp
  0x00007fb258e2288c: movabs $0x7fb250b129b0,%rdx
  0x00007fb258e22896: mov    0x18(%rdx),%edi
  0x00007fb258e22899: add    $0x8,%edi
  0x00007fb258e2289c: mov    %edi,0x18(%rdx)
  0x00007fb258e2289f: and    $0x3ff8,%edi
  0x00007fb258e228a5: cmp    $0x0,%edi
  0x00007fb258e228a8: je     0x00007fb258e22986
  0x00007fb258e228ae: movabs $0x84008a978,%rdx  ;   {metadata('com/example/benchmark_bytecode/MyIntegerInline')}
  0x00007fb258e228b8: mov    0x118(%r15),%rax
  0x00007fb258e228bf: lea    0x10(%rax),%rdi
  0x00007fb258e228c3: cmp    0x128(%r15),%rdi
  0x00007fb258e228ca: ja     0x00007fb258e229a7
  0x00007fb258e228d0: mov    %rdi,0x118(%r15)
  0x00007fb258e228d7: mov    0xb8(%rdx),%rcx
  0x00007fb258e228de: mov    %rcx,(%rax)
  0x00007fb258e228e1: mov    %rdx,%rcx
  0x00007fb258e228e4: movabs $0x800000000,%r12
  0x00007fb258e228ee: sub    %r12,%rcx
  0x00007fb258e228f1: shr    $0x3,%rcx
  0x00007fb258e228f5: xor    %r12,%r12
  0x00007fb258e228f8: mov    %ecx,0x8(%rax)
  0x00007fb258e228fb: xor    %rcx,%rcx
  0x00007fb258e228fe: mov    %ecx,0xc(%rax)
  0x00007fb258e22901: xor    %rcx,%rcx
  0x00007fb258e22904: mov    %rax,%rbx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@0 (line 13)

  0x00007fb258e22907: movl   $0x64,0xc(%rbx)    ;*putfield myInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.MyIntegerInline::<init>@6 (line 19)
                                                ; - com.example.benchmark_bytecode.MyIntegerInline::<init>@11 (line 19)
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@7 (line 13)

  0x00007fb258e2290e: movabs $0x84008a978,%rdx  ;   {metadata('com/example/benchmark_bytecode/MyIntegerInline')}
  0x00007fb258e22918: mov    0x118(%r15),%rax
  0x00007fb258e2291f: lea    0x10(%rax),%rdi
  0x00007fb258e22923: cmp    0x128(%r15),%rdi
  0x00007fb258e2292a: ja     0x00007fb258e229b4
  0x00007fb258e22930: mov    %rdi,0x118(%r15)
  0x00007fb258e22937: mov    0xb8(%rdx),%rcx
  0x00007fb258e2293e: mov    %rcx,(%rax)
  0x00007fb258e22941: mov    %rdx,%rcx
  0x00007fb258e22944: movabs $0x800000000,%r12
  0x00007fb258e2294e: sub    %r12,%rcx
  0x00007fb258e22951: shr    $0x3,%rcx
  0x00007fb258e22955: xor    %r12,%r12
  0x00007fb258e22958: mov    %ecx,0x8(%rax)
  0x00007fb258e2295b: xor    %rcx,%rcx
  0x00007fb258e2295e: mov    %ecx,0xc(%rax)
  0x00007fb258e22961: xor    %rcx,%rcx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@11 (line 14)

  0x00007fb258e22964: movl   $0x64,0xc(%rax)    ;*putfield myInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.MyIntegerInline::<init>@6 (line 19)
                                                ; - com.example.benchmark_bytecode.MyIntegerInline::<init>@11 (line 19)
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@18 (line 14)

  0x00007fb258e2296b: mov    0xc(%rbx),%esi     ;*getfield myInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.MyIntegerInline::getMyInt@1 (line 19)
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@23 (line 15)

  0x00007fb258e2296e: mov    0xc(%rax),%eax     ;*getfield myInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.MyIntegerInline::getMyInt@1 (line 19)
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@27 (line 15)

  0x00007fb258e22971: add    %eax,%esi
  0x00007fb258e22973: mov    %rsi,%rax
  0x00007fb258e22976: add    $0x70,%rsp
  0x00007fb258e2297a: pop    %rbp
  0x00007fb258e2297b: mov    0x108(%r15),%r10
  0x00007fb258e22982: test   %eax,(%r10)        ;   {poll_return}
  0x00007fb258e22985: retq   
  0x00007fb258e22986: movabs $0x7fb250b0cfb0,%r10  ;   {metadata({method} {0x00007fb250b0cfb0} 'integerValueOf' '()I' in 'com/example/benchmark_bytecode/BenchmarkKotlin')}
  0x00007fb258e22990: mov    %r10,0x8(%rsp)
  0x00007fb258e22995: movq   $0xffffffffffffffff,(%rsp)
  0x00007fb258e2299d: callq  0x00007fb258968d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@-1 (line 13)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fb258e229a2: jmpq   0x00007fb258e228ae
  0x00007fb258e229a7: mov    %rdx,%rdx
  0x00007fb258e229aa: callq  0x00007fb258965080  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@0 (line 13)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb258e229af: jmpq   0x00007fb258e22904
  0x00007fb258e229b4: mov    %rdx,%rdx
  0x00007fb258e229b7: callq  0x00007fb258965080  ; ImmutableOopMap{rbx=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchmarkKotlin::integerValueOf@11 (line 14)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007fb258e229bc: jmp    0x00007fb258e22964
  0x00007fb258e229be: nop
  0x00007fb258e229bf: nop
  0x00007fb258e229c0: mov    0x428(%r15),%rax
  0x00007fb258e229c7: movabs $0x0,%r10
  0x00007fb258e229d1: mov    %r10,0x428(%r15)
  0x00007fb258e229d8: movabs $0x0,%r10
  0x00007fb258e229e2: mov    %r10,0x430(%r15)
  0x00007fb258e229e9: add    $0x70,%rsp
  0x00007fb258e229ed: pop    %rbp
  0x00007fb258e229ee: jmpq   0x00007fb2588d7180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fb258e229f3: hlt