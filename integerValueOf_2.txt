
com/example/benchmark_bytecode/BenchMark.integerValueOf()I  [0x00007f2b0ce22f40, 0x00007f2b0ce23130]  496 bytes
[Entry Point]
[Constants]
  # {method} {0x00007f2b0460efe0} 'integerValueOf' '()I' in 'com/example/benchmark_bytecode/BenchMark'
  #           [sp+0x70]  (sp of caller)
  0x00007f2b0ce22f40: mov    0x8(%rsi),%r10d
  0x00007f2b0ce22f44: shl    $0x3,%r10
  0x00007f2b0ce22f48: movabs $0x800000000,%r12
  0x00007f2b0ce22f52: add    %r12,%r10
  0x00007f2b0ce22f55: xor    %r12,%r12
  0x00007f2b0ce22f58: cmp    %rax,%r10
  0x00007f2b0ce22f5b: jne    0x00007f2b0c89ce80  ;   {runtime_call ic_miss_stub}
  0x00007f2b0ce22f61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f2b0ce22f6c: data16 data16 xchg %ax,%ax
  0x00007f2b0ce22f70: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00007f2b0ce22f7b: data16 data16 xchg %ax,%ax
  0x00007f2b0ce22f7f: nop
[Verified Entry Point]
  0x00007f2b0ce22f80: mov    %eax,-0x14000(%rsp)
  0x00007f2b0ce22f87: push   %rbp
  0x00007f2b0ce22f88: sub    $0x60,%rsp
  0x00007f2b0ce22f8c: movabs $0x7f2b04640220,%rdx
  0x00007f2b0ce22f96: mov    0x18(%rdx),%edi
  0x00007f2b0ce22f99: add    $0x8,%edi
  0x00007f2b0ce22f9c: mov    %edi,0x18(%rdx)
  0x00007f2b0ce22f9f: and    $0x3ff8,%edi
  0x00007f2b0ce22fa5: cmp    $0x0,%edi
  0x00007f2b0ce22fa8: je     0x00007f2b0ce23080
  0x00007f2b0ce22fae: movabs $0x8002fce08,%rdx  ;   {metadata('java/lang/Integer')}
  0x00007f2b0ce22fb8: mov    0x118(%r15),%rax
  0x00007f2b0ce22fbf: lea    0x10(%rax),%rdi
  0x00007f2b0ce22fc3: cmp    0x128(%r15),%rdi
  0x00007f2b0ce22fca: ja     0x00007f2b0ce230a1
  0x00007f2b0ce22fd0: mov    %rdi,0x118(%r15)
  0x00007f2b0ce22fd7: mov    0xb8(%rdx),%rcx
  0x00007f2b0ce22fde: mov    %rcx,(%rax)
  0x00007f2b0ce22fe1: mov    %rdx,%rcx
  0x00007f2b0ce22fe4: movabs $0x800000000,%r12
  0x00007f2b0ce22fee: sub    %r12,%rcx
  0x00007f2b0ce22ff1: shr    $0x3,%rcx
  0x00007f2b0ce22ff5: xor    %r12,%r12
  0x00007f2b0ce22ff8: mov    %ecx,0x8(%rax)
  0x00007f2b0ce22ffb: xor    %rcx,%rcx
  0x00007f2b0ce22ffe: mov    %ecx,0xc(%rax)
  0x00007f2b0ce23001: xor    %rcx,%rcx
  0x00007f2b0ce23004: mov    %rax,%rbx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@0 (line 35)

  0x00007f2b0ce23007: movl   $0xa,0xc(%rbx)     ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::<init>@6 (line 1083)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@6 (line 35)

  0x00007f2b0ce2300e: movabs $0x8002fce08,%rdx  ;   {metadata('java/lang/Integer')}
  0x00007f2b0ce23018: mov    0x118(%r15),%rax
  0x00007f2b0ce2301f: lea    0x10(%rax),%rdi
  0x00007f2b0ce23023: cmp    0x128(%r15),%rdi
  0x00007f2b0ce2302a: ja     0x00007f2b0ce230ae
  0x00007f2b0ce23030: mov    %rdi,0x118(%r15)
  0x00007f2b0ce23037: mov    0xb8(%rdx),%rcx
  0x00007f2b0ce2303e: mov    %rcx,(%rax)
  0x00007f2b0ce23041: mov    %rdx,%rcx
  0x00007f2b0ce23044: movabs $0x800000000,%r12
  0x00007f2b0ce2304e: sub    %r12,%rcx
  0x00007f2b0ce23051: shr    $0x3,%rcx
  0x00007f2b0ce23055: xor    %r12,%r12
  0x00007f2b0ce23058: mov    %ecx,0x8(%rax)
  0x00007f2b0ce2305b: xor    %rcx,%rcx
  0x00007f2b0ce2305e: mov    %ecx,0xc(%rax)
  0x00007f2b0ce23061: xor    %rcx,%rcx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@10 (line 36)

  0x00007f2b0ce23064: movl   $0x14,0xc(%rax)    ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Integer::<init>@6 (line 1083)
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@16 (line 36)

  0x00007f2b0ce2306b: mov    $0x1e,%eax
  0x00007f2b0ce23070: add    $0x60,%rsp
  0x00007f2b0ce23074: pop    %rbp
  0x00007f2b0ce23075: mov    0x108(%r15),%r10
  0x00007f2b0ce2307c: test   %eax,(%r10)        ;   {poll_return}
  0x00007f2b0ce2307f: retq   
  0x00007f2b0ce23080: movabs $0x7f2b0460efe0,%r10  ;   {metadata({method} {0x00007f2b0460efe0} 'integerValueOf' '()I' in 'com/example/benchmark_bytecode/BenchMark')}
  0x00007f2b0ce2308a: mov    %r10,0x8(%rsp)
  0x00007f2b0ce2308f: movq   $0xffffffffffffffff,(%rsp)
  0x00007f2b0ce23097: callq  0x00007f2b0c968d80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@-1 (line 35)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007f2b0ce2309c: jmpq   0x00007f2b0ce22fae
  0x00007f2b0ce230a1: mov    %rdx,%rdx
  0x00007f2b0ce230a4: callq  0x00007f2b0c965080  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@0 (line 35)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f2b0ce230a9: jmpq   0x00007f2b0ce23004
  0x00007f2b0ce230ae: mov    %rdx,%rdx
  0x00007f2b0ce230b1: callq  0x00007f2b0c965080  ; ImmutableOopMap{rbx=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - com.example.benchmark_bytecode.BenchMark::integerValueOf@10 (line 36)
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00007f2b0ce230b6: jmp    0x00007f2b0ce23064
  0x00007f2b0ce230b8: nop
  0x00007f2b0ce230b9: nop
  0x00007f2b0ce230ba: mov    0x428(%r15),%rax
  0x00007f2b0ce230c1: movabs $0x0,%r10
  0x00007f2b0ce230cb: mov    %r10,0x428(%r15)
  0x00007f2b0ce230d2: movabs $0x0,%r10
  0x00007f2b0ce230dc: mov    %r10,0x430(%r15)
  0x00007f2b0ce230e3: add    $0x60,%rsp
  0x00007f2b0ce230e7: pop    %rbp
  0x00007f2b0ce230e8: jmpq   0x00007f2b0c8d7180  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007f2b0ce230ed: hlt    
  0x00007f2b0ce230ee: hlt    
  0x00007f2b0ce230ef: hlt    
  0x00007f2b0ce230f0: hlt    
  0x00007f2b0ce230f1: hlt    
  0x00007f2b0ce230f2: hlt    
  0x00007f2b0ce230f3: hlt    
  0x00007f2b0ce230f4: hlt    
  0x00007f2b0ce230f5: hlt    
  0x00007f2b0ce230f6: hlt    
  0x00007f2b0ce230f7: hlt    
  0x00007f2b0ce230f8: hlt    
  0x00007f2b0ce230f9: hlt    
  0x00007f2b0ce230fa: hlt    
  0x00007f2b0ce230fb: hlt    
  0x00007f2b0ce230fc: hlt    
  0x00007f2b0ce230fd: hlt    
  0x00007f2b0ce230fe: hlt    
  0x00007f2b0ce230ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007f2b0ce23100: callq  0x00007f2b0c966400  ;   {no_reloc}
  0x00007f2b0ce23105: movabs $0x7f2b2b1f6ffa,%rdi  ;   {external_word}
  0x00007f2b0ce2310f: and    $0xfffffffffffffff0,%rsp
  0x00007f2b0ce23113: callq  0x00007f2b2ada25c0  ;   {runtime_call}
  0x00007f2b0ce23118: hlt    
[Deopt Handler Code]
  0x00007f2b0ce23119: movabs $0x7f2b0ce23119,%r10  ;   {section_word}
  0x00007f2b0ce23123: push   %r10
  0x00007f2b0ce23125: jmpq   0x00007f2b0c89dc20  ;   {runtime_call DeoptimizationBlob}
  0x00007f2b0ce2312a: hlt    
  0x00007f2b0ce2312b: hlt    
  0x00007f2b0ce2312c: hlt    
  0x00007f2b0ce2312d: hlt    
  0x00007f2b0ce2312e: hlt    
  0x00007f2b0ce2312f: hlt    

ImmutableOopMap{rsi=Oop }pc offsets: 348 
ImmutableOopMap{}pc offsets: 361 
ImmutableOopMap{rbx=Oop }pc offsets: 374 Compiled method (c1)   91916  337       2       org.openjdk.jmh.infra.Blackhole::consume (19 bytes)
 total in heap  [0x00007f2b0ce23290,0x00007f2b0ce236a0] = 1040
 relocation     [0x00007f2b0ce23408,0x00007f2b0ce23430] = 40
 main code      [0x00007f2b0ce23440,0x00007f2b0ce23560] = 288
 stub code      [0x00007f2b0ce23560,0x00007f2b0ce23590] = 48
 oops           [0x00007f2b0ce23590,0x00007f2b0ce23598] = 8
 metadata       [0x00007f2b0ce23598,0x00007f2b0ce235a8] = 16
 scopes data    [0x00007f2b0ce235a8,0x00007f2b0ce235f8] = 80
 scopes pcs     [0x00007f2b0ce235f8,0x00007f2b0ce23688] = 144
 dependencies   [0x00007f2b0ce23688,0x00007f2b0ce23690] = 8
 nul chk table  [0x00007f2b0ce23690,0x00007f2b0ce236a0] = 16
----------------------------------------------------------------------